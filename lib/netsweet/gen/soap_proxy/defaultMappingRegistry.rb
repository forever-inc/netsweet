require_relative 'default.rb'
require 'soap/mapping'

module DefaultMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsAccounting_2012_1ListsWebservicesNetsuiteCom = "urn:accounting_2012_1.lists.webservices.netsuite.com"
  NsBank_2012_1TransactionsWebservicesNetsuiteCom = "urn:bank_2012_1.transactions.webservices.netsuite.com"
  NsCommon_2012_1PlatformWebservicesNetsuiteCom = "urn:common_2012_1.platform.webservices.netsuite.com"
  NsCommunication_2012_1GeneralWebservicesNetsuiteCom = "urn:communication_2012_1.general.webservices.netsuite.com"
  NsCore_2012_1PlatformWebservicesNetsuiteCom = "urn:core_2012_1.platform.webservices.netsuite.com"
  NsCustomers_2012_1TransactionsWebservicesNetsuiteCom = "urn:customers_2012_1.transactions.webservices.netsuite.com"
  NsCustomization_2012_1SetupWebservicesNetsuiteCom = "urn:customization_2012_1.setup.webservices.netsuite.com"
  NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom = "urn:demandplanning_2012_1.transactions.webservices.netsuite.com"
  NsEmployees_2012_1ListsWebservicesNetsuiteCom = "urn:employees_2012_1.lists.webservices.netsuite.com"
  NsEmployees_2012_1TransactionsWebservicesNetsuiteCom = "urn:employees_2012_1.transactions.webservices.netsuite.com"
  NsFaults_2012_1PlatformWebservicesNetsuiteCom = "urn:faults_2012_1.platform.webservices.netsuite.com"
  NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom = "urn:filecabinet_2012_1.documents.webservices.netsuite.com"
  NsFinancial_2012_1TransactionsWebservicesNetsuiteCom = "urn:financial_2012_1.transactions.webservices.netsuite.com"
  NsGeneral_2012_1TransactionsWebservicesNetsuiteCom = "urn:general_2012_1.transactions.webservices.netsuite.com"
  NsInventory_2012_1TransactionsWebservicesNetsuiteCom = "urn:inventory_2012_1.transactions.webservices.netsuite.com"
  NsMarketing_2012_1ListsWebservicesNetsuiteCom = "urn:marketing_2012_1.lists.webservices.netsuite.com"
  NsMessages_2012_1PlatformWebservicesNetsuiteCom = "urn:messages_2012_1.platform.webservices.netsuite.com"
  NsPurchases_2012_1TransactionsWebservicesNetsuiteCom = "urn:purchases_2012_1.transactions.webservices.netsuite.com"
  NsRelationships_2012_1ListsWebservicesNetsuiteCom = "urn:relationships_2012_1.lists.webservices.netsuite.com"
  NsSales_2012_1TransactionsWebservicesNetsuiteCom = "urn:sales_2012_1.transactions.webservices.netsuite.com"
  NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom = "urn:scheduling_2012_1.activities.webservices.netsuite.com"
  NsSupport_2012_1ListsWebservicesNetsuiteCom = "urn:support_2012_1.lists.webservices.netsuite.com"
  NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom = "urn:types.accounting_2012_1.lists.webservices.netsuite.com"
  NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom = "urn:types.common_2012_1.platform.webservices.netsuite.com"
  NsTypesCommunication_2012_1GeneralWebservicesNetsuiteCom = "urn:types.communication_2012_1.general.webservices.netsuite.com"
  NsTypesCore_2012_1PlatformWebservicesNetsuiteCom = "urn:types.core_2012_1.platform.webservices.netsuite.com"
  NsTypesCustomers_2012_1TransactionsWebservicesNetsuiteCom = "urn:types.customers_2012_1.transactions.webservices.netsuite.com"
  NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom = "urn:types.customization_2012_1.setup.webservices.netsuite.com"
  NsTypesDemandplanning_2012_1TransactionsWebservicesNetsuiteCom = "urn:types.demandplanning_2012_1.transactions.webservices.netsuite.com"
  NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom = "urn:types.employees_2012_1.lists.webservices.netsuite.com"
  NsTypesEmployees_2012_1TransactionsWebservicesNetsuiteCom = "urn:types.employees_2012_1.transactions.webservices.netsuite.com"
  NsTypesFaults_2012_1PlatformWebservicesNetsuiteCom = "urn:types.faults_2012_1.platform.webservices.netsuite.com"
  NsTypesFilecabinet_2012_1DocumentsWebservicesNetsuiteCom = "urn:types.filecabinet_2012_1.documents.webservices.netsuite.com"
  NsTypesFinancial_2012_1TransactionsWebservicesNetsuiteCom = "urn:types.financial_2012_1.transactions.webservices.netsuite.com"
  NsTypesInventory_2012_1TransactionsWebservicesNetsuiteCom = "urn:types.inventory_2012_1.transactions.webservices.netsuite.com"
  NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom = "urn:types.marketing_2012_1.lists.webservices.netsuite.com"
  NsTypesPurchases_2012_1TransactionsWebservicesNetsuiteCom = "urn:types.purchases_2012_1.transactions.webservices.netsuite.com"
  NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom = "urn:types.relationships_2012_1.lists.webservices.netsuite.com"
  NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom = "urn:types.sales_2012_1.transactions.webservices.netsuite.com"
  NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom = "urn:types.scheduling_2012_1.activities.webservices.netsuite.com"
  NsTypesSupport_2012_1ListsWebservicesNetsuiteCom = "urn:types.support_2012_1.lists.webservices.netsuite.com"
  NsWebsite_2012_1ListsWebservicesNetsuiteCom = "urn:website_2012_1.lists.webservices.netsuite.com"

  EncodedRegistry.register(
    :class => Passport,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Passport"),
    :schema_element => [
      ["email", "SOAP::SOAPString"],
      ["password", "SOAP::SOAPString"],
      ["account", "SOAP::SOAPString"],
      ["role", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SsoPassport,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SsoPassport"),
    :schema_element => [
      ["authenticationToken", "SOAP::SOAPString"],
      ["partnerId", "SOAP::SOAPString"],
      ["partnerAccount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SsoCredentials,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SsoCredentials"),
    :schema_element => [
      ["email", "SOAP::SOAPString"],
      ["password", "SOAP::SOAPString"],
      ["account", "SOAP::SOAPString"],
      ["role", "RecordRef", [0, 1]],
      ["authenticationToken", "SOAP::SOAPString"],
      ["partnerId", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => ChangePasswordOrEmailCredentials,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailCredentials"),
    :schema_element => [
      ["currentPassword", "SOAP::SOAPString"],
      ["newEmail", "SOAP::SOAPString"],
      ["newEmail2", "SOAP::SOAPString"],
      ["newPassword", "SOAP::SOAPString", [0, 1]],
      ["newPassword2", "SOAP::SOAPString", [0, 1]],
      ["justThisAccount", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => StatusDetail,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "StatusDetail"),
    :schema_element => [
      ["code", "StatusDetailCodeType"],
      ["message", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => Status,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Status"),
    :schema_element => [
      ["statusDetail", "StatusDetail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "isSuccess") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => WsRole,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "WsRole"),
    :schema_element => [
      ["role", "RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isLoggedInRole", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => WsRoleList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "WsRoleList"),
    :schema_element => [
      ["wsRole", "WsRole[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NullField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "NullField"),
    :schema_element => [
      ["name", "SOAP::SOAPString[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["searchId", "SOAP::SOAPString", [0, 1]],
      ["recordList", "RecordList", [0, 1]],
      ["searchRowList", "SearchRowList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncStatusResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "AsyncStatusResult"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["status", "AsyncStatusType"],
      ["percentCompleted", "SOAP::SOAPDouble"],
      ["estRemainingDuration", "SOAP::SOAPDouble"]
    ]
  )

  EncodedRegistry.register(
    :class => GetAllResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetAllResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordList", "RecordList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GetSavedSearchResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSavedSearchResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordRefList", "RecordRefList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GetCustomizationIdResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetCustomizationIdResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["customizationRefList", "CustomizationRefList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GetSelectValueResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectValueResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["baseRefList", "BaseRefList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RecordList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "RecordList"),
    :schema_element => [
      ["record", "Record[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchRowList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRowList"),
    :schema_element => [
      ["searchRow", "SearchRow[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => RecordRefList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "RecordRefList"),
    :schema_element => [
      ["recordRef", "RecordRef[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => BaseRefList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRefList"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => RecordRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "RecordRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "type") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => Duration,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Duration"),
    :schema_element => [
      ["timeSpan", "SOAP::SOAPDouble"],
      ["unit", "DurationUnit"]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomRecordRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomizationRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomizationRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "type") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomizationRefList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomizationRefList"),
    :schema_element => [
      ["customizationRef", "CustomizationRef[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => InitializeRecord,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeRecord"),
    :schema_element => [
      ["type", "InitializeType"],
      ["reference", "InitializeRef"],
      ["auxReference", "InitializeAuxRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InitializeRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString",
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => InitializeAuxRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeAuxRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString",
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => UpdateInviteeStatusReference,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusReference"),
    :schema_element => [
      ["eventId", "RecordRef"],
      ["responseCode", "CalendarEventAttendeeResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => GetAllRecord,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetAllRecord"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "recordType") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => GetSavedSearchRecord,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSavedSearchRecord"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "searchType") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomizationType,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomizationType"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "getCustomizationType") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ListOrRecordRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ListOrRecordRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => LongCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "LongCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPLong"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => DoubleCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DoubleCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => BooleanCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BooleanCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPBoolean"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => StringCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "StringCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPString"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => DateCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DateCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPDateTime"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SelectCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SelectCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "ListOrRecordRef"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => MultiSelectCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "MultiSelectCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "ListOrRecordRef[]", [1, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldList"),
    :schema_element => [
      ["customField", "CustomFieldRef[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchBooleanField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchBooleanField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchStringField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchStringField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchLongField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchLongField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPLong", [0, 1]],
      ["searchValue2", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchTextNumberField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchTextNumberField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]],
      ["searchValue2", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchDoubleField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDoubleField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPDouble", [0, 1]],
      ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchDateField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDateField"),
    :schema_element => [
      ["predefinedSearchValue", "SearchDate", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
      ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchEnumMultiSelectField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchMultiSelectField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectField"),
    :schema_element => [
      ["searchValue", "RecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchBooleanCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchBooleanCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchStringCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchStringCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchLongCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchLongCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPLong", [0, 1]],
      ["searchValue2", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchDoubleCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDoubleCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPDouble", [0, 1]],
      ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchDateCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDateCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["predefinedSearchValue", "SearchDate", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
      ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchEnumMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "ListOrRecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchCustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomFieldList"),
    :schema_element => [
      ["customField", "SearchCustomField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchColumnBooleanField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnBooleanField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchColumnStringField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnStringField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchColumnLongField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnLongField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchColumnTextNumberField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnTextNumberField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchColumnDoubleField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnDoubleField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchColumnDateField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnDateField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchColumnEnumSelectField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnEnumSelectField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchColumnSelectField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnSelectField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchColumnBooleanCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnBooleanCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchColumnStringCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnStringCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchColumnLongCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnLongCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchColumnDoubleCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnDoubleCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchColumnDateCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnDateCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchColumnEnumMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnEnumMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchColumnSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "ListOrRecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchColumnMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "ListOrRecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SearchColumnCustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomFieldList"),
    :schema_element => [
      ["customField", "SearchColumnCustomField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemAvailabilityFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ItemAvailabilityFilter"),
    :schema_element => [
      ["item", "RecordRefList"],
      ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemAvailability,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ItemAvailability"),
    :schema_element => [
      ["item", "RecordRef"],
      ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]],
      ["locationId", "RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemAvailabilityList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ItemAvailabilityList"),
    :schema_element => [
      ["itemAvailability", "ItemAvailability[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => GetItemAvailabilityResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResult"),
    :schema_element => [
      ["status", "Status"],
      ["itemAvailabilityList", "ItemAvailabilityList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BudgetExchangeRateFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BudgetExchangeRateFilter"),
    :schema_element => [
      ["period", "RecordRef"],
      ["fromSubsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BudgetExchangeRate,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BudgetExchangeRate"),
    :schema_element => [
      ["period", "RecordRef"],
      ["fromSubsidiary", "RecordRef"],
      ["toSubsidiary", "RecordRef"],
      ["currentRate", "SOAP::SOAPDouble", [0, 1]],
      ["averageRate", "SOAP::SOAPDouble", [0, 1]],
      ["historicalRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BudgetExchangeRateList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BudgetExchangeRateList"),
    :schema_element => [
      ["budgetExchangeRate", "BudgetExchangeRate[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => GetBudgetExchangeRateResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateResult"),
    :schema_element => [
      ["status", "Status"],
      ["budgetExchangeRateList", "BudgetExchangeRateList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ConsolidatedExchangeRateFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRateFilter"),
    :schema_element => [
      ["period", "RecordRef"],
      ["fromSubsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ConsolidatedExchangeRate,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRate"),
    :schema_element => [
      ["period", "RecordRef"],
      ["fromSubsidiary", "RecordRef"],
      ["toSubsidiary", "RecordRef"],
      ["currentRate", "SOAP::SOAPDouble", [0, 1]],
      ["averageRate", "SOAP::SOAPDouble", [0, 1]],
      ["historicalRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ConsolidatedExchangeRateList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRateList"),
    :schema_element => [
      ["consolidatedExchangeRate", "ConsolidatedExchangeRate[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => GetConsolidatedExchangeRateResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateResult"),
    :schema_element => [
      ["status", "Status"],
      ["consolidatedExchangeRateList", "ConsolidatedExchangeRateList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PostingTransactionSummaryField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryField"),
    :schema_element => [
      ["period", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "SOAP::SOAPBoolean", [0, 1]],
      ["parentItem", "SOAP::SOAPBoolean", [0, 1]],
      ["item", "SOAP::SOAPBoolean", [0, 1]],
      ["customer", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["SOAP::SOAPBoolean", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiary", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PostingTransactionSummaryFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryFilter"),
    :schema_element => [
      ["period", "RecordRefList", [0, 1]],
      ["account", "RecordRefList", [0, 1]],
      ["parentItem", "RecordRefList", [0, 1]],
      ["item", "RecordRefList", [0, 1]],
      ["customer", "RecordRefList", [0, 1]],
      ["department", "RecordRefList", [0, 1]],
      ["v_class", ["RecordRefList", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRefList", [0, 1]],
      ["subsidiary", "RecordRefList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PostingTransactionSummary,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "PostingTransactionSummary"),
    :schema_element => [
      ["period", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["parentItem", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble"]
    ]
  )

  EncodedRegistry.register(
    :class => PostingTransactionSummaryList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryList"),
    :schema_element => [
      ["postingTransactionSummary", "PostingTransactionSummary[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => GetPostingTransactionSummaryResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["postingTransactionSummaryList", "PostingTransactionSummaryList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GetSelectValueFieldDescription,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectValueFieldDescription"),
    :schema_element => [
      ["recordType", "RecordType", [0, 1]],
      ["customRecordType", "RecordRef", [0, 1]],
      ["sublist", "SOAP::SOAPString", [0, 1]],
      ["field", "SOAP::SOAPString"],
      ["customForm", "RecordRef", [0, 1]],
      ["filter", "GetSelectValueFilter", [0, 1]],
      ["filterByValueList", "GetSelectFilterByFieldValueList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GetSelectValueFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectValueFilter"),
    :schema_element => [
      ["filterValue", "SOAP::SOAPString"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => GetSelectFilterByFieldValueList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectFilterByFieldValueList"),
    :schema_element => [
      ["filterBy", "GetSelectFilterByFieldValue[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => GetSelectFilterByFieldValue,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectFilterByFieldValue"),
    :schema_element => [
      ["sublist", "SOAP::SOAPString", [0, 1]],
      ["field", "SOAP::SOAPString"],
      ["internalId", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => GetServerTimeResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetServerTimeResult"),
    :schema_element => [
      ["status", "Status"],
      ["serverTime", "SOAP::SOAPDateTime"]
    ]
  )

  EncodedRegistry.register(
    :class => DeletedRecord,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DeletedRecord"),
    :schema_element => [
      ["deletedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["record", "BaseRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => DeletedRecordList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DeletedRecordList"),
    :schema_element => [
      ["deletedRecord", "DeletedRecord[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => GetDeletedResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetDeletedResult"),
    :schema_element => [
      ["status", "Status"],
      ["deletedRecordList", "DeletedRecordList"]
    ]
  )

  EncodedRegistry.register(
    :class => GetDeletedFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetDeletedFilter"),
    :schema_element => [
      ["deletedDate", "SearchDateField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AttachContactReference,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "AttachContactReference"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "AttachReference"),
    :schema_element => [
      ["attachTo", "BaseRef"],
      ["contact", "RecordRef"],
      ["contactRole", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AttachBasicReference,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "AttachBasicReference"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "AttachReference"),
    :schema_element => [
      ["attachTo", "BaseRef"],
      ["attachedRecord", "BaseRef"]
    ]
  )

  EncodedRegistry.register(
    :class => DetachBasicReference,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DetachBasicReference"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DetachReference"),
    :schema_element => [
      ["detachFrom", "BaseRef"],
      ["detachedRecord", "BaseRef"]
    ]
  )

  EncodedRegistry.register(
    :class => SoapFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => InsufficientPermissionFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "InsufficientPermissionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => InvalidAccountFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "InvalidAccountFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => InvalidCredentialsFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "InvalidCredentialsFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => InvalidSessionFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "InvalidSessionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => ExceededRequestLimitFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "ExceededRequestLimitFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => ExceededUsageLimitFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "ExceededUsageLimitFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => ExceededRecordCountFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "ExceededRecordCountFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => InvalidVersionFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "InvalidVersionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => ExceededRequestSizeFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "ExceededRequestSizeFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "AsyncFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => UnexpectedErrorFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "UnexpectedErrorFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => ApplicationInfo,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ApplicationInfo"),
    :schema_element => [
      ["applicationId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PartnerInfo,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "PartnerInfo"),
    :schema_element => [
      ["partnerId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => DocumentInfo,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DocumentInfo"),
    :schema_element => [
      ["nsId", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => Preferences,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "Preferences"),
    :schema_element => [
      ["warningAsError", "SOAP::SOAPBoolean", [0, 1]],
      ["disableMandatoryCustomFieldValidation", "SOAP::SOAPBoolean", [0, 1]],
      ["disableSystemNotesForCustomFields", "SOAP::SOAPBoolean", [0, 1]],
      ["ignoreReadOnlyFields", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchPreferences,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchPreferences"),
    :schema_element => [
      ["bodyFieldsOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["returnSearchColumns", "SOAP::SOAPBoolean", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SessionResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SessionResponse"),
    :schema_element => [
      ["status", ["Status", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "status")]],
      ["userId", "RecordRef", [0, 1]],
      ["wsRoleList", ["WsRoleList", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "wsRoleList")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => WriteResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "WriteResponse"),
    :schema_element => [
      ["status", ["Status", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "status")]],
      ["baseRef", "BaseRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ReadResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ReadResponse"),
    :schema_element => [
      ["status", ["Status", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "status")]],
      ["record", "Record", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => WriteResponseList,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "WriteResponseList"),
    :schema_element => [
      ["writeResponse", "WriteResponse[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ReadResponseList,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ReadResponseList"),
    :schema_element => [
      ["readResponse", "ReadResponse[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => LoginResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "LoginResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => SsoLoginResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SsoLoginResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => MapSsoResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "MapSsoResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => ChangePasswordOrEmailResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => LogoutResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "LogoutResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => AddResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AddResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => AddListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AddListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => UpdateResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => UpdateListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => UpsertResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpsertResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => UpsertListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpsertListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => DeleteResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DeleteResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => DeleteListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DeleteListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => SearchResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchMoreResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchMoreResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchMoreWithIdResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchMoreWithIdResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => SearchNextResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchNextResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => GetResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetResponse"),
    :schema_element => [
      ["readResponse", "ReadResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => GetListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetListResponse"),
    :schema_element => [
      ["readResponseList", "ReadResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => GetAllResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetAllResponse"),
    :schema_element => [
      ["getAllResult", ["GetAllResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getAllResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => GetSavedSearchResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetSavedSearchResponse"),
    :schema_element => [
      ["getSavedSearchResult", ["GetSavedSearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getSavedSearchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => GetCustomizationIdResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetCustomizationIdResponse"),
    :schema_element => [
      ["getCustomizationIdResult", ["GetCustomizationIdResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getCustomizationIdResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => InitializeResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "InitializeResponse"),
    :schema_element => [
      ["readResponse", "ReadResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => InitializeListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "InitializeListResponse"),
    :schema_element => [
      ["readResponseList", "ReadResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => GetSelectValueResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getSelectValueResponse"),
    :schema_element => [
      ["getSelectValueResult", ["GetSelectValueResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getSelectValueResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => GetItemAvailabilityResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResponse"),
    :schema_element => [
      ["getItemAvailabilityResult", ["GetItemAvailabilityResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => GetBudgetExchangeRateResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateResponse"),
    :schema_element => [
      ["getBudgetExchangeRateResult", ["GetBudgetExchangeRateResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getBudgetExchangeRateResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => GetConsolidatedExchangeRateResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateResponse"),
    :schema_element => [
      ["getConsolidatedExchangeRateResult", ["GetConsolidatedExchangeRateResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRateResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => GetPostingTransactionSummaryResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryResponse"),
    :schema_element => [
      ["getPostingTransactionSummaryResult", ["GetPostingTransactionSummaryResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getPostingTransactionSummaryResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => GetServerTimeResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetServerTimeResponse"),
    :schema_element => [
      ["getServerTimeResult", ["GetServerTimeResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getServerTimeResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => AttachResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AttachResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => DetachResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DetachResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => UpdateInviteeStatusResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  EncodedRegistry.register(
    :class => UpdateInviteeStatusListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncStatusResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncStatusResponse"),
    :schema_element => [
      ["asyncStatusResult", ["AsyncStatusResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => GetAsyncResultResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetAsyncResultResponse"),
    :schema_element => [
      ["asyncResult", "AsyncResult"]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncAddListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncAddListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncUpdateListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncUpdateListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncUpsertListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncUpsertListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncDeleteListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncDeleteListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncGetListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncGetListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["readResponseList", "ReadResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncSearchResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncSearchResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncInitializeListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncInitializeListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  EncodedRegistry.register(
    :class => GetDeletedResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetDeletedResponse"),
    :schema_element => [
      ["getDeletedResult", ["GetDeletedResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getDeletedResult")]]
    ]
  )

  EncodedRegistry.register(
    :class => LoginRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "LoginRequest"),
    :schema_element => [
      ["passport", "Passport"]
    ]
  )

  EncodedRegistry.register(
    :class => SsoLoginRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SsoLoginRequest"),
    :schema_element => [
      ["ssoPassport", "SsoPassport"]
    ]
  )

  EncodedRegistry.register(
    :class => MapSsoRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "MapSsoRequest"),
    :schema_element => [
      ["ssoCredentials", "SsoCredentials"]
    ]
  )

  EncodedRegistry.register(
    :class => ChangePasswordOrEmailRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailRequest"),
    :schema_element => [
      ["changePasswordOrEmailCredentials", "ChangePasswordOrEmailCredentials"]
    ]
  )

  EncodedRegistry.register(
    :class => LogoutRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "LogoutRequest"),
    :schema_element => []
  )

  EncodedRegistry.register(
    :class => AddRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AddRequest"),
    :schema_element => [
      ["record", "Record"]
    ]
  )

  EncodedRegistry.register(
    :class => DeleteRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DeleteRequest"),
    :schema_element => [
      ["baseRef", "BaseRef"]
    ]
  )

  EncodedRegistry.register(
    :class => SearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchRequest"),
    :schema_element => [
      ["searchRecord", "SearchRecord"]
    ]
  )

  EncodedRegistry.register(
    :class => SearchMoreRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchMoreRequest"),
    :schema_element => [
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  EncodedRegistry.register(
    :class => SearchMoreWithIdRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchMoreWithIdRequest"),
    :schema_element => [
      ["searchId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  EncodedRegistry.register(
    :class => SearchNextRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchNextRequest"),
    :schema_element => []
  )

  EncodedRegistry.register(
    :class => UpdateRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateRequest"),
    :schema_element => [
      ["record", "Record"]
    ]
  )

  EncodedRegistry.register(
    :class => UpsertRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpsertRequest"),
    :schema_element => [
      ["record", "Record"]
    ]
  )

  EncodedRegistry.register(
    :class => AddListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AddListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => DeleteListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DeleteListRequest"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => UpdateListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => UpsertListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpsertListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => GetRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetRequest"),
    :schema_element => [
      ["baseRef", "BaseRef"]
    ]
  )

  EncodedRegistry.register(
    :class => GetListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetListRequest"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => GetAllRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetAllRequest"),
    :schema_element => [
      ["record", "GetAllRecord"]
    ]
  )

  EncodedRegistry.register(
    :class => GetSavedSearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetSavedSearchRequest"),
    :schema_element => [
      ["record", "GetSavedSearchRecord"]
    ]
  )

  EncodedRegistry.register(
    :class => GetCustomizationIdRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetCustomizationIdRequest"),
    :schema_element => [
      ["customizationType", "CustomizationType"],
      ["includeInactives", "SOAP::SOAPBoolean"]
    ]
  )

  EncodedRegistry.register(
    :class => InitializeRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "InitializeRequest"),
    :schema_element => [
      ["initializeRecord", "InitializeRecord"]
    ]
  )

  EncodedRegistry.register(
    :class => InitializeListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "InitializeListRequest"),
    :schema_element => [
      ["initializeRecord", "InitializeRecord[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => GetSelectValueRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getSelectValueRequest"),
    :schema_element => [
      ["fieldDescription", "GetSelectValueFieldDescription"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  EncodedRegistry.register(
    :class => GetItemAvailabilityRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityRequest"),
    :schema_element => [
      ["itemAvailabilityFilter", "ItemAvailabilityFilter"]
    ]
  )

  EncodedRegistry.register(
    :class => GetBudgetExchangeRateRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateRequest"),
    :schema_element => [
      ["budgetExchangeRateFilter", "BudgetExchangeRateFilter"]
    ]
  )

  EncodedRegistry.register(
    :class => GetConsolidatedExchangeRateRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateRequest"),
    :schema_element => [
      ["consolidatedExchangeRateFilter", "ConsolidatedExchangeRateFilter"]
    ]
  )

  EncodedRegistry.register(
    :class => GetPostingTransactionSummaryRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryRequest"),
    :schema_element => [
      ["fields", "PostingTransactionSummaryField"],
      ["filters", "PostingTransactionSummaryFilter", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  EncodedRegistry.register(
    :class => GetServerTimeRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetServerTimeRequest"),
    :schema_element => []
  )

  EncodedRegistry.register(
    :class => AttachRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AttachRequest"),
    :schema_element => [
      ["attachReference", "AttachReference"]
    ]
  )

  EncodedRegistry.register(
    :class => DetachRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DetachRequest"),
    :schema_element => [
      ["detachReference", "DetachReference"]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncAddListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncAddListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => UpdateInviteeStatusRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusRequest"),
    :schema_element => [
      ["updateInviteeStatusReference", "UpdateInviteeStatusReference"]
    ]
  )

  EncodedRegistry.register(
    :class => UpdateInviteeStatusListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusListRequest"),
    :schema_element => [
      ["updateInviteeStatusReference", "UpdateInviteeStatusReference[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncUpdateListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncUpdateListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncUpsertListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncUpsertListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncDeleteListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncDeleteListRequest"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncGetListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncGetListRequest"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncInitializeListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncInitializeListRequest"),
    :schema_element => [
      ["initializeRecord", "InitializeRecord[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => AsyncSearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncSearchRequest"),
    :schema_element => [
      ["searchRecord", "SearchRecord"]
    ]
  )

  EncodedRegistry.register(
    :class => CheckAsyncStatusRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "CheckAsyncStatusRequest"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"]
    ]
  )

  EncodedRegistry.register(
    :class => GetAsyncResultRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetAsyncResultRequest"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  EncodedRegistry.register(
    :class => GetDeletedRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetDeletedRequest"),
    :schema_element => [
      ["getDeletedFilter", "GetDeletedFilter"]
    ]
  )

  EncodedRegistry.register(
    :class => ShipAddress,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ShipAddress"),
    :schema_element => [
      ["shipAttention", "SOAP::SOAPString", [0, 1]],
      ["shipAddressee", "SOAP::SOAPString", [0, 1]],
      ["shipPhone", "SOAP::SOAPString", [0, 1]],
      ["shipAddr1", "SOAP::SOAPString", [0, 1]],
      ["shipAddr2", "SOAP::SOAPString", [0, 1]],
      ["shipAddr3", "SOAP::SOAPString", [0, 1]],
      ["shipCity", "SOAP::SOAPString", [0, 1]],
      ["shipState", "SOAP::SOAPString", [0, 1]],
      ["shipZip", "SOAP::SOAPString", [0, 1]],
      ["shipCountry", "Country", [0, 1]],
      ["shipIsResidential", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BillAddress,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "BillAddress"),
    :schema_element => [
      ["billAttention", "SOAP::SOAPString", [0, 1]],
      ["billAddressee", "SOAP::SOAPString", [0, 1]],
      ["billPhone", "SOAP::SOAPString", [0, 1]],
      ["billAddr1", "SOAP::SOAPString", [0, 1]],
      ["billAddr2", "SOAP::SOAPString", [0, 1]],
      ["billAddr3", "SOAP::SOAPString", [0, 1]],
      ["billCity", "SOAP::SOAPString", [0, 1]],
      ["billState", "SOAP::SOAPString", [0, 1]],
      ["billZip", "SOAP::SOAPString", [0, 1]],
      ["billCountry", "Country", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PresentationItem,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PresentationItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["itemType", "PresentationItemType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["onlinePrice", "SOAP::SOAPDouble", [0, 1]],
      ["basePrice", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Partners,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "Partners"),
    :schema_element => [
      ["partner", "RecordRef", [0, 1]],
      ["partnerRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => LandedCost,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "LandedCost"),
    :schema_element => [
      ["category", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["source", "LandedCostSource", [0, 1]],
      ["transaction", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerSalesTeam,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TimeItem,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TimeItem"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["timeType", "TimeItemTimeType", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollItem", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["temporaryLocalJurisdiction", "RecordRef", [0, 1]],
      ["temporaryStateJurisdiction", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["hours", "Duration", [0, 1]],
      ["hoursTotal", "Duration", [0, 1]],
      ["caseTaskEvent", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isUtilized", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductive", "SOAP::SOAPBoolean", [0, 1]],
      ["isExempt", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryDetail,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryDetail"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["inventoryAssignmentList", "InventoryAssignmentList", [0, 1]],
      ["customForm", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryAssignmentList,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryAssignmentList"),
    :schema_element => [
      ["inventoryAssignment", "InventoryAssignment[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InventoryAssignment,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryAssignment"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["issueInventoryNumber", "RecordRef", [0, 1]],
      ["receiptInventoryNumber", "SOAP::SOAPString", [0, 1]],
      ["binNumber", "RecordRef", [0, 1]],
      ["toBinNumber", "RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryDetailSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryDetailSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["binNumber", "SearchMultiSelectField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["inventoryNumber", "SearchMultiSelectField", [0, 1]],
      ["quantity", "SearchDoubleField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryDetailSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryDetailSearchRowBasic"),
    :schema_element => [
      ["binNumber", "SearchColumnSelectField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["inventoryNumber", "SearchColumnSelectField[]", [0, nil]],
      ["quantity", "SearchColumnDoubleField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => EntitySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EntitySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EntitySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EntitySearchRowBasic"),
    :schema_element => [
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["availableOffline", "SearchBooleanField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["company", "SearchMultiSelectField", [0, 1]],
      ["contactRole", "SearchMultiSelectField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["employer", "SearchStringField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "SearchBooleanField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isPrivate", "SearchBooleanField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactSearchRowBasic"),
    :schema_element => [
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "SearchColumnBooleanField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["contactRole", "SearchColumnSelectField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["accountNumber", "SearchStringField", [0, 1]],
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["availableOffline", "SearchBooleanField", [0, 1]],
      ["balance", "SearchDoubleField", [0, 1]],
      ["billAddress", "SearchStringField", [0, 1]],
      ["boughtAmount", "SearchDoubleField", [0, 1]],
      ["boughtDate", "SearchDateField", [0, 1]],
      ["buyingReason", "SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "SearchMultiSelectField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["ccCustomerCode", "SearchStringField", [0, 1]],
      ["ccDefault", "SearchBooleanField", [0, 1]],
      ["ccExpDate", "SearchDateField", [0, 1]],
      ["ccHolderName", "SearchStringField", [0, 1]],
      ["ccNumber", "SearchStringField", [0, 1]],
      ["ccType", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["classBought", "SearchMultiSelectField", [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["companyName", "SearchStringField", [0, 1]],
      ["consolBalance", "SearchDoubleField", [0, 1]],
      ["consolDaysOverdue", "SearchLongField", [0, 1]],
      ["consolDepositBalance", "SearchDoubleField", [0, 1]],
      ["consolOverdueBalance", "SearchDoubleField", [0, 1]],
      ["consolUnbilledOrders", "SearchDoubleField", [0, 1]],
      ["contact", "SearchStringField", [0, 1]],
      ["contribution", "SearchLongField", [0, 1]],
      ["conversionDate", "SearchDateField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["creditHold", "SearchEnumMultiSelectField", [0, 1]],
      ["creditHoldOverride", "SearchBooleanField", [0, 1]],
      ["creditLimit", "SearchDoubleField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["custStage", "SearchMultiSelectField", [0, 1]],
      ["custStatus", "SearchMultiSelectField", [0, 1]],
      ["dateClosed", "SearchDateField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["daysOverdue", "SearchLongField", [0, 1]],
      ["depositBalance", "SearchDoubleField", [0, 1]],
      ["deptBought", "SearchMultiSelectField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["emailPreference", "SearchEnumMultiSelectField", [0, 1]],
      ["emailTransactions", "SearchBooleanField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["entityStatus", "SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "SearchDoubleField", [0, 1]],
      ["explicitConversion", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["faxTransactions", "SearchBooleanField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["firstOrderDate", "SearchDateField", [0, 1]],
      ["firstSaleDate", "SearchDateField", [0, 1]],
      ["fxBalance", "SearchDoubleField", [0, 1]],
      ["fxConsolBalance", "SearchDoubleField", [0, 1]],
      ["fxConsolUnbilledOrders", "SearchDoubleField", [0, 1]],
      ["fxUnbilledOrders", "SearchDoubleField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["groupPricingLevel", "SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "SearchBooleanField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isBudgetApproved", "SearchBooleanField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isPerson", "SearchBooleanField", [0, 1]],
      ["isReportedLead", "SearchBooleanField", [0, 1]],
      ["isShipAddress", "SearchBooleanField", [0, 1]],
      ["itemPricingLevel", "SearchMultiSelectField", [0, 1]],
      ["itemPricingUnitPrice", "SearchDoubleField", [0, 1]],
      ["itemsBought", "SearchMultiSelectField", [0, 1]],
      ["itemsOrdered", "SearchMultiSelectField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["lastOrderDate", "SearchDateField", [0, 1]],
      ["lastSaleDate", "SearchDateField", [0, 1]],
      ["leadDate", "SearchDateField", [0, 1]],
      ["leadSource", "SearchMultiSelectField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["locationBought", "SearchMultiSelectField", [0, 1]],
      ["manualCreditHold", "SearchBooleanField", [0, 1]],
      ["merchantAccount", "SearchMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["monthlyClosing", "SearchEnumMultiSelectField", [0, 1]],
      ["onCreditHold", "SearchBooleanField", [0, 1]],
      ["orderedAmount", "SearchDoubleField", [0, 1]],
      ["orderedDate", "SearchDateField", [0, 1]],
      ["otherRelationships", "SearchEnumMultiSelectField", [0, 1]],
      ["overdueBalance", "SearchDoubleField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["parentItemsBought", "SearchMultiSelectField", [0, 1]],
      ["parentItemsOrdered", "SearchMultiSelectField", [0, 1]],
      ["partner", "SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "SearchLongField", [0, 1]],
      ["partnerRole", "SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "SearchMultiSelectField", [0, 1]],
      ["pec", "SearchStringField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["priceLevel", "SearchMultiSelectField", [0, 1]],
      ["pricingGroup", "SearchMultiSelectField", [0, 1]],
      ["pricingItem", "SearchMultiSelectField", [0, 1]],
      ["printTransactions", "SearchBooleanField", [0, 1]],
      ["prospectDate", "SearchDateField", [0, 1]],
      ["pstExempt", "SearchBooleanField", [0, 1]],
      ["receivablesAccount", "SearchMultiSelectField", [0, 1]],
      ["reminderDate", "SearchDateField", [0, 1]],
      ["resaleNumber", "SearchStringField", [0, 1]],
      ["role", "SearchMultiSelectField", [0, 1]],
      ["salesReadiness", "SearchMultiSelectField", [0, 1]],
      ["salesRep", "SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "SearchMultiSelectField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["shipAddress", "SearchStringField", [0, 1]],
      ["shipComplete", "SearchBooleanField", [0, 1]],
      ["shippingItem", "SearchMultiSelectField", [0, 1]],
      ["stage", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidBought", "SearchMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["taxable", "SearchBooleanField", [0, 1]],
      ["terms", "SearchMultiSelectField", [0, 1]],
      ["territory", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["unbilledOrders", "SearchDoubleField", [0, 1]],
      ["url", "SearchStringField", [0, 1]],
      ["vatRegNumber", "SearchStringField", [0, 1]],
      ["webLead", "SearchBooleanField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerSearchRowBasic"),
    :schema_element => [
      ["accountNumber", "SearchColumnStringField[]", [0, nil]],
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["altContact", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "SearchColumnBooleanField[]", [0, nil]],
      ["balance", "SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["buyingReason", "SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["ccCustomerCode", "SearchColumnStringField[]", [0, nil]],
      ["ccDefault", "SearchColumnBooleanField[]", [0, nil]],
      ["ccExpDate", "SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "SearchColumnStringField[]", [0, nil]],
      ["ccInternalId", "SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "SearchColumnStringField[]", [0, nil]],
      ["ccType", "SearchColumnSelectField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["companyName", "SearchColumnStringField[]", [0, nil]],
      ["consolBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["consolDaysOverdue", "SearchColumnLongField[]", [0, nil]],
      ["consolDepositBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["consolOverdueBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["consolUnbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["contact", "SearchColumnStringField[]", [0, nil]],
      ["contribution", "SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "SearchColumnDoubleField[]", [0, nil]],
      ["conversionDate", "SearchColumnDateField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["creditHold", "SearchColumnEnumSelectField[]", [0, nil]],
      ["creditHoldOverride", "SearchColumnBooleanField[]", [0, nil]],
      ["creditLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["dateClosed", "SearchColumnDateField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["daysOverdue", "SearchColumnLongField[]", [0, nil]],
      ["depositBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "SearchColumnEnumSelectField[]", [0, nil]],
      ["emailTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["entityStatus", "SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "SearchColumnDoubleField[]", [0, nil]],
      ["explicitConversion", "SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["faxTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["firstOrderDate", "SearchColumnDateField[]", [0, nil]],
      ["firstSaleDate", "SearchColumnDateField[]", [0, nil]],
      ["fxBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["fxConsolBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["fxConsolUnbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["fxUnbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["groupPricingLevel", "SearchColumnStringField[]", [0, nil]],
      ["hasDuplicates", "SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isBudgetApproved", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "SearchColumnBooleanField[]", [0, nil]],
      ["itemPricingLevel", "SearchColumnStringField[]", [0, nil]],
      ["itemPricingUnitPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["jobEndDate", "SearchColumnDateField[]", [0, nil]],
      ["jobProjectedEnd", "SearchColumnDateField[]", [0, nil]],
      ["jobStartDate", "SearchColumnDateField[]", [0, nil]],
      ["jobType", "SearchColumnSelectField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["lastOrderDate", "SearchColumnDateField[]", [0, nil]],
      ["lastSaleDate", "SearchColumnDateField[]", [0, nil]],
      ["leadDate", "SearchColumnDateField[]", [0, nil]],
      ["leadSource", "SearchColumnSelectField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["manualCreditHold", "SearchColumnBooleanField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["monthlyClosing", "SearchColumnEnumSelectField[]", [0, nil]],
      ["onCreditHold", "SearchColumnBooleanField[]", [0, nil]],
      ["overdueBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["partner", "SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "SearchColumnStringField[]", [0, nil]],
      ["partnerTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["pec", "SearchColumnStringField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["prefCCProcessor", "SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "SearchColumnSelectField[]", [0, nil]],
      ["pricingGroup", "SearchColumnStringField[]", [0, nil]],
      ["pricingItem", "SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["prospectDate", "SearchColumnDateField[]", [0, nil]],
      ["receivablesAccount", "SearchColumnStringField[]", [0, nil]],
      ["reminderDays", "SearchColumnLongField[]", [0, nil]],
      ["resaleNumber", "SearchColumnStringField[]", [0, nil]],
      ["role", "SearchColumnStringField[]", [0, nil]],
      ["salesReadiness", "SearchColumnStringField[]", [0, nil]],
      ["salesRep", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "SearchColumnSelectField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "SearchColumnBooleanField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shippingItem", "SearchColumnSelectField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["stage", "SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["taxable", "SearchColumnBooleanField[]", [0, nil]],
      ["taxItem", "SearchColumnSelectField[]", [0, nil]],
      ["terms", "SearchColumnSelectField[]", [0, nil]],
      ["territory", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "SearchColumnStringField[]", [0, nil]],
      ["webLead", "SearchColumnBooleanField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CalendarEventSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CalendarEventSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["attendee", "SearchMultiSelectField", [0, 1]],
      ["calendar", "SearchMultiSelectField", [0, 1]],
      ["completedDate", "SearchDateField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["instanceStart", "SearchDateField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isUpcomingEvent", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["location", "SearchStringField", [0, 1]],
      ["message", "SearchStringField", [0, 1]],
      ["organizer", "SearchMultiSelectField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["resource", "SearchMultiSelectField", [0, 1]],
      ["response", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CalendarEventSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CalendarEventSearchRowBasic"),
    :schema_element => [
      ["attendee", "SearchColumnSelectField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "SearchColumnDateField[]", [0, nil]],
      ["contact", "SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["endTime", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["instanceEnd", "SearchColumnDateField[]", [0, nil]],
      ["instanceStart", "SearchColumnDateField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["location", "SearchColumnStringField[]", [0, nil]],
      ["markdone", "SearchColumnStringField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["organizer", "SearchColumnSelectField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["recurrence", "SearchColumnStringField[]", [0, nil]],
      ["resource", "SearchColumnSelectField[]", [0, nil]],
      ["response", "SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "SearchColumnStringField[]", [0, nil]],
      ["startTime", "SearchColumnStringField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["transaction", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TaskSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TaskSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["actualTime", "SearchDoubleField", [0, 1]],
      ["assigned", "SearchMultiSelectField", [0, 1]],
      ["company", "SearchMultiSelectField", [0, 1]],
      ["completedDate", "SearchDateField", [0, 1]],
      ["contact", "SearchMultiSelectField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["estimatedTime", "SearchDoubleField", [0, 1]],
      ["estimatedTimeOverride", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isJobSummaryTask", "SearchBooleanField", [0, 1]],
      ["isJobTask", "SearchBooleanField", [0, 1]],
      ["isPrivate", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["milestone", "SearchLongField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["percentComplete", "SearchLongField", [0, 1]],
      ["percentTimeComplete", "SearchLongField", [0, 1]],
      ["priority", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["timeRemaining", "SearchDoubleField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TaskSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TaskSearchRowBasic"),
    :schema_element => [
      ["accessLevel", "SearchColumnStringField[]", [0, nil]],
      ["actualTime", "SearchColumnDoubleField[]", [0, nil]],
      ["assigned", "SearchColumnSelectField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "SearchColumnDateField[]", [0, nil]],
      ["contact", "SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["dueDate", "SearchColumnDateField[]", [0, nil]],
      ["estimatedTime", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverride", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isJobSummaryTask", "SearchColumnBooleanField[]", [0, nil]],
      ["isJobTask", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["markdone", "SearchColumnStringField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["milestone", "SearchColumnSelectField[]", [0, nil]],
      ["order", "SearchColumnLongField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["percentComplete", "SearchColumnDoubleField[]", [0, nil]],
      ["percentTimeComplete", "SearchColumnDoubleField[]", [0, nil]],
      ["priority", "SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["startTime", "SearchColumnStringField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["timeRemaining", "SearchColumnDoubleField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["transaction", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OpportunitySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OpportunitySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["amount", "SearchDoubleField", [0, 1]],
      ["availableOffline", "SearchBooleanField", [0, 1]],
      ["buyingReason", "SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "SearchMultiSelectField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["closeDate", "SearchDateField", [0, 1]],
      ["competitor", "SearchMultiSelectField", [0, 1]],
      ["contribution", "SearchLongField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["custType", "SearchMultiSelectField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["daysOpen", "SearchLongField", [0, 1]],
      ["daysToClose", "SearchLongField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["entity", "SearchMultiSelectField", [0, 1]],
      ["entityStatus", "SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "SearchDoubleField", [0, 1]],
      ["expectedCloseDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["forecastType", "SearchEnumMultiSelectField", [0, 1]],
      ["foreignProjectedAmount", "SearchDoubleField", [0, 1]],
      ["foreignRangeHigh", "SearchDoubleField", [0, 1]],
      ["foreignRangeLow", "SearchDoubleField", [0, 1]],
      ["fxTranCostEstimate", "SearchDoubleField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isBudgetApproved", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["leadSource", "SearchMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["partner", "SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "SearchLongField", [0, 1]],
      ["partnerRole", "SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "SearchMultiSelectField", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["postingPeriodRelative", "PostingPeriodDate", [0, 1]],
      ["probability", "SearchLongField", [0, 1]],
      ["projAltSalesAmt", "SearchDoubleField", [0, 1]],
      ["projectedTotal", "SearchDoubleField", [0, 1]],
      ["rangeHigh", "SearchDoubleField", [0, 1]],
      ["rangeHighAlt", "SearchDoubleField", [0, 1]],
      ["rangeLow", "SearchDoubleField", [0, 1]],
      ["rangeLowAlt", "SearchDoubleField", [0, 1]],
      ["salesReadiness", "SearchMultiSelectField", [0, 1]],
      ["salesRep", "SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "SearchMultiSelectField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["taxPeriod", "RecordRef", [0, 1]],
      ["taxPeriodRelative", "PostingPeriodDate", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["tranCostEstimate", "SearchDoubleField", [0, 1]],
      ["tranDate", "SearchDateField", [0, 1]],
      ["tranEstGrossProfit", "SearchDoubleField", [0, 1]],
      ["tranEstGrossProfitPct", "SearchDoubleField", [0, 1]],
      ["tranFxEstGrossProfit", "SearchDoubleField", [0, 1]],
      ["tranId", "SearchStringField", [0, 1]],
      ["winLossReason", "SearchMultiSelectField", [0, 1]],
      ["wonBy", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OpportunitySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OpportunitySearchRowBasic"),
    :schema_element => [
      ["actionItem", "SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "SearchColumnBooleanField[]", [0, nil]],
      ["buyingReason", "SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["closeDate", "SearchColumnDateField[]", [0, nil]],
      ["competitor", "SearchColumnSelectField[]", [0, nil]],
      ["contribution", "SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "SearchColumnDoubleField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["custType", "SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["daysOpen", "SearchColumnLongField[]", [0, nil]],
      ["daysToClose", "SearchColumnLongField[]", [0, nil]],
      ["decisionMaker", "SearchColumnSelectField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["entity", "SearchColumnSelectField[]", [0, nil]],
      ["entityStatus", "SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "SearchColumnDoubleField[]", [0, nil]],
      ["expectedCloseDate", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["forecastType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["foreignProjectedAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["foreignRangeHigh", "SearchColumnDoubleField[]", [0, nil]],
      ["foreignRangeLow", "SearchColumnDoubleField[]", [0, nil]],
      ["fxTranCostEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isBudgetApproved", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["leadSource", "SearchColumnSelectField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["partner", "SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "SearchColumnSelectField[]", [0, nil]],
      ["partnerTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["period", "SearchColumnStringField[]", [0, nil]],
      ["probability", "SearchColumnDoubleField[]", [0, nil]],
      ["projAltSalesAmt", "SearchColumnDoubleField[]", [0, nil]],
      ["projectedTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["rangeHigh", "SearchColumnDoubleField[]", [0, nil]],
      ["rangeHighAlt", "SearchColumnDoubleField[]", [0, nil]],
      ["rangeLow", "SearchColumnDoubleField[]", [0, nil]],
      ["rangeLowAlt", "SearchColumnDoubleField[]", [0, nil]],
      ["salesReadiness", "SearchColumnStringField[]", [0, nil]],
      ["salesRep", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "SearchColumnSelectField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["taxPeriod", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["total", "SearchColumnDoubleField[]", [0, nil]],
      ["tranCostEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["tranDate", "SearchColumnDateField[]", [0, nil]],
      ["tranEstGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["tranEstGrossProfitPct", "SearchColumnDoubleField[]", [0, nil]],
      ["tranFxEstGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["tranId", "SearchColumnStringField[]", [0, nil]],
      ["weightedTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["winLossReason", "SearchColumnSelectField[]", [0, nil]],
      ["wonBy", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EmployeeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["alienNumber", "SearchStringField", [0, 1]],
      ["anniversary", "SearchDateField", [0, 1]],
      ["approvalLimit", "SearchDoubleField", [0, 1]],
      ["approver", "SearchMultiSelectField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["authWorkDate", "SearchDateField", [0, 1]],
      ["billAddress", "SearchStringField", [0, 1]],
      ["billingClass", "SearchMultiSelectField", [0, 1]],
      ["birthDate", "SearchDateField", [0, 1]],
      ["birthDay", "SearchDateField", [0, 1]],
      ["cContribution", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["commissionPlan", "SearchMultiSelectField", [0, 1]],
      ["concurrentWebServicesUser", "SearchBooleanField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["deduction", "SearchMultiSelectField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["earning", "SearchMultiSelectField", [0, 1]],
      ["education", "SearchMultiSelectField", [0, 1]],
      ["eligibleForCommission", "SearchBooleanField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["employeeStatus", "SearchMultiSelectField", [0, 1]],
      ["employeeType", "SearchMultiSelectField", [0, 1]],
      ["employeeTypeKpi", "SearchBooleanField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["ethnicity", "SearchMultiSelectField", [0, 1]],
      ["expenseLimit", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["gender", "SearchEnumMultiSelectField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["hireDate", "SearchDateField", [0, 1]],
      ["i9Verified", ["SearchBooleanField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "I9Verified")], [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isJobResource", "SearchBooleanField", [0, 1]],
      ["isTemplate", "SearchBooleanField", [0, 1]],
      ["jobDescription", "SearchStringField", [0, 1]],
      ["laborCost", "SearchDoubleField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["lastPaidDate", "SearchDateField", [0, 1]],
      ["lastReviewDate", "SearchDateField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["maritalStatus", "SearchMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["nextReviewDate", "SearchDateField", [0, 1]],
      ["offlineAccess", "SearchBooleanField", [0, 1]],
      ["payFrequency", "SearchEnumMultiSelectField", [0, 1]],
      ["permChangeDate", "SearchDateField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["permissionChange", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["primaryEarningAmount", "SearchDoubleField", [0, 1]],
      ["primaryEarningItem", "SearchStringField", [0, 1]],
      ["primaryEarningType", "SearchStringField", [0, 1]],
      ["purchaseOrderApprovalLimit", "SearchDoubleField", [0, 1]],
      ["purchaseOrderApprover", "SearchMultiSelectField", [0, 1]],
      ["purchaseOrderLimit", "SearchDoubleField", [0, 1]],
      ["releaseDate", "SearchDateField", [0, 1]],
      ["residentStatus", "SearchMultiSelectField", [0, 1]],
      ["role", "SearchMultiSelectField", [0, 1]],
      ["roleChange", "SearchMultiSelectField", [0, 1]],
      ["roleChangeDate", "SearchDateField", [0, 1]],
      ["salesRep", "SearchBooleanField", [0, 1]],
      ["salesRole", "SearchMultiSelectField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["socialSecurityNumber", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["supervisor", "SearchMultiSelectField", [0, 1]],
      ["supportRep", "SearchBooleanField", [0, 1]],
      ["timeApprover", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["type", "SearchMultiSelectField", [0, 1]],
      ["usePerquest", "SearchBooleanField", [0, 1]],
      ["useTimeData", "SearchBooleanField", [0, 1]],
      ["visaExpDate", "SearchDateField", [0, 1]],
      ["visaType", "SearchMultiSelectField", [0, 1]],
      ["withholding", "SearchMultiSelectField", [0, 1]],
      ["workCalendar", "SearchMultiSelectField", [0, 1]],
      ["workplace", "SearchMultiSelectField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EmployeeSearchRowBasic"),
    :schema_element => [
      ["accountNumber", "SearchColumnStringField[]", [0, nil]],
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["alienNumber", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["approvalLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["approver", "SearchColumnSelectField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["authWorkDate", "SearchColumnDateField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billingClass", "SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["birthDate", "SearchColumnDateField[]", [0, nil]],
      ["birthDay", "SearchColumnDateField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["concurrentWebServicesUser", "SearchColumnBooleanField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["eligibleForCommission", "SearchColumnBooleanField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["employeeStatus", "SearchColumnSelectField[]", [0, nil]],
      ["employeeType", "SearchColumnSelectField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["ethnicity", "SearchColumnSelectField[]", [0, nil]],
      ["expenseLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["gender", "SearchColumnEnumSelectField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["hireDate", "SearchColumnDateField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["i9Verified", "SearchColumnBooleanField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isJobResource", "SearchColumnBooleanField[]", [0, nil]],
      ["isSalesRep", "SearchColumnBooleanField[]", [0, nil]],
      ["isSupportRep", "SearchColumnBooleanField[]", [0, nil]],
      ["isTemplate", "SearchColumnBooleanField[]", [0, nil]],
      ["laborCost", "SearchColumnDoubleField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["lastPaidDate", "SearchColumnDateField[]", [0, nil]],
      ["lastReviewDate", "SearchColumnDateField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["maritalStatus", "SearchColumnSelectField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["nextReviewDate", "SearchColumnDateField[]", [0, nil]],
      ["offlineAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["payFrequency", "SearchColumnEnumSelectField[]", [0, nil]],
      ["permChangeDate", "SearchColumnDateField[]", [0, nil]],
      ["permChangeLevel", "SearchColumnStringField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["permissionChange", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["primaryEarningAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["primaryEarningItem", "SearchColumnStringField[]", [0, nil]],
      ["primaryEarningType", "SearchColumnStringField[]", [0, nil]],
      ["purchaseOrderApprovalLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["purchaseOrderApprover", "SearchColumnSelectField[]", [0, nil]],
      ["purchaseOrderLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["releaseDate", "SearchColumnDateField[]", [0, nil]],
      ["residentStatus", "SearchColumnSelectField[]", [0, nil]],
      ["role", "SearchColumnSelectField[]", [0, nil]],
      ["roleChange", "SearchColumnStringField[]", [0, nil]],
      ["roleChangeAction", "SearchColumnStringField[]", [0, nil]],
      ["roleChangeDate", "SearchColumnDateField[]", [0, nil]],
      ["salesRole", "SearchColumnSelectField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["socialSecurityNumber", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnEnumSelectField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["supervisor", "SearchColumnSelectField[]", [0, nil]],
      ["timeApprover", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["type", "SearchColumnSelectField[]", [0, nil]],
      ["usePerquest", "SearchColumnBooleanField[]", [0, nil]],
      ["useTimeData", "SearchColumnBooleanField[]", [0, nil]],
      ["visaExpDate", "SearchColumnDateField[]", [0, nil]],
      ["visaType", "SearchColumnSelectField[]", [0, nil]],
      ["workCalendar", "SearchColumnStringField[]", [0, nil]],
      ["workplace", "SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PhoneCallSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PhoneCallSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["assigned", "SearchMultiSelectField", [0, 1]],
      ["company", "SearchMultiSelectField", [0, 1]],
      ["completedDate", "SearchDateField", [0, 1]],
      ["contact", "SearchMultiSelectField", [0, 1]],
      ["createdBy", "SearchMultiSelectField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isPrivate", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["owner", "SearchBooleanField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["priority", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PhoneCallSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PhoneCallSearchRowBasic"),
    :schema_element => [
      ["accessLevel", "SearchColumnStringField[]", [0, nil]],
      ["assigned", "SearchColumnSelectField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "SearchColumnDateField[]", [0, nil]],
      ["contact", "SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["markdone", "SearchColumnStringField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["priority", "SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["startTime", "SearchColumnDateField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["transaction", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SupportCaseSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SupportCaseSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["assigned", "SearchMultiSelectField", [0, 1]],
      ["awaitingReply", "SearchBooleanField", [0, 1]],
      ["caseNumber", "SearchStringField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["closedDate", "SearchDateField", [0, 1]],
      ["company", "SearchStringField", [0, 1]],
      ["contact", "SearchStringField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["escalateTo", "SearchMultiSelectField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["helpDesk", "SearchBooleanField", [0, 1]],
      ["inboundEmail", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["issue", "SearchMultiSelectField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["lastMessage", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastReopenedDate", "SearchDateField", [0, 1]],
      ["locked", "SearchBooleanField", [0, 1]],
      ["message", "SearchStringField", [0, 1]],
      ["messageAuthor", "SearchMultiSelectField", [0, 1]],
      ["messageDate", "SearchDateField", [0, 1]],
      ["messageType", "SearchBooleanField", [0, 1]],
      ["v_module", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["origin", "SearchMultiSelectField", [0, 1]],
      ["priority", "SearchMultiSelectField", [0, 1]],
      ["product", "SearchMultiSelectField", [0, 1]],
      ["serialNumber", "SearchStringField", [0, 1]],
      ["stage", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SupportCaseSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SupportCaseSearchRowBasic"),
    :schema_element => [
      ["assigned", "SearchColumnSelectField[]", [0, nil]],
      ["awaitingReply", "SearchColumnBooleanField[]", [0, nil]],
      ["caseNumber", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["contact", "SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["customerStage", "SearchColumnEnumSelectField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["escalatee", "SearchColumnSelectField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["helpDesk", "SearchColumnBooleanField[]", [0, nil]],
      ["inboundEmail", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["issue", "SearchColumnSelectField[]", [0, nil]],
      ["issueNumber", "SearchColumnStringField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["lastMessageDate", "SearchColumnDateField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastReopenedDate", "SearchColumnDateField[]", [0, nil]],
      ["locked", "SearchColumnBooleanField[]", [0, nil]],
      ["v_module", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "module")], [0, nil]],
      ["origin", "SearchColumnSelectField[]", [0, nil]],
      ["priority", "SearchColumnSelectField[]", [0, nil]],
      ["product", "SearchColumnSelectField[]", [0, nil]],
      ["serialNumber", "SearchColumnStringField[]", [0, nil]],
      ["stage", "SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["status", "SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => MessageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "MessageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["author", "SearchMultiSelectField", [0, 1]],
      ["authorEmail", "SearchStringField", [0, 1]],
      ["bcc", "SearchStringField", [0, 1]],
      ["cc", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["hasAttachment", "SearchBooleanField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["internalOnly", "SearchBooleanField", [0, 1]],
      ["message", "SearchStringField", [0, 1]],
      ["messageDate", "SearchDateField", [0, 1]],
      ["messageType", "SearchEnumMultiSelectField", [0, 1]],
      ["recipient", "SearchMultiSelectField", [0, 1]],
      ["recipientEmail", "SearchStringField", [0, 1]],
      ["subject", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => MessageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "MessageSearchRowBasic"),
    :schema_element => [
      ["author", "SearchColumnSelectField[]", [0, nil]],
      ["authorEmail", "SearchColumnStringField[]", [0, nil]],
      ["bcc", "SearchColumnStringField[]", [0, nil]],
      ["cc", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["hasAttachment", "SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalOnly", "SearchColumnBooleanField[]", [0, nil]],
      ["isEmailed", "SearchColumnBooleanField[]", [0, nil]],
      ["isIncoming", "SearchColumnBooleanField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["messageDate", "SearchColumnDateField[]", [0, nil]],
      ["messageType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["recipient", "SearchColumnSelectField[]", [0, nil]],
      ["recipientEmail", "SearchColumnStringField[]", [0, nil]],
      ["subject", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NoteSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NoteSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["author", "SearchMultiSelectField", [0, 1]],
      ["direction", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["note", "SearchStringField", [0, 1]],
      ["noteDate", "SearchDateField", [0, 1]],
      ["noteType", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NoteSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NoteSearchRowBasic"),
    :schema_element => [
      ["author", "SearchColumnSelectField[]", [0, nil]],
      ["direction", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["note", "SearchColumnStringField[]", [0, nil]],
      ["noteDate", "SearchColumnDateField[]", [0, nil]],
      ["noteType", "SearchColumnStringField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomRecordSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["recType", "RecordRef"],
      ["availableOffline", "SearchBooleanField", [0, 1]],
      ["created", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["id", "SearchLongField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["lastModified", "SearchDateField", [0, 1]],
      ["lastModifiedBy", "SearchMultiSelectField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomRecordSearchRowBasic"),
    :schema_element => [
      ["recType", "RecordRef"],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "SearchColumnBooleanField[]", [0, nil]],
      ["created", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["id", "SearchColumnLongField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModified", "SearchColumnDateField[]", [0, nil]],
      ["lastModifiedBy", "SearchColumnSelectField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AccountSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AccountSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["balance", "SearchDoubleField", [0, 1]],
      ["cashFlowRateType", "SearchEnumMultiSelectField", [0, 1]],
      ["category1099Misc", "SearchMultiSelectField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["generalRateType", "SearchEnumMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["number", "SearchStringField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AccountSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AccountSearchRowBasic"),
    :schema_element => [
      ["balance", "SearchColumnDoubleField[]", [0, nil]],
      ["cashFlowRateType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["category1099Misc", "SearchColumnSelectField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["generalRateType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["number", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RevRecScheduleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "RevRecScheduleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["amount", "SearchDoubleField", [0, 1]],
      ["defRev", "SearchMultiSelectField", [0, 1]],
      ["entity", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["incomeAcct", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["jeDoc", "SearchMultiSelectField", [0, 1]],
      ["name", "SearchMultiSelectField", [0, 1]],
      ["postPeriod", "SearchMultiSelectField", [0, 1]],
      ["srcDoc", "SearchMultiSelectField", [0, 1]],
      ["srcDocDate", "SearchDateField", [0, 1]],
      ["srcTranPostPeriod", "SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RevRecScheduleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "RevRecScheduleSearchRowBasic"),
    :schema_element => [
      ["amount", "SearchColumnDoubleField[]", [0, nil]],
      ["defRev", "SearchColumnStringField[]", [0, nil]],
      ["entity", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["incomeAcct", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["jeDoc", "SearchColumnStringField[]", [0, nil]],
      ["jeDocUrl", "SearchColumnStringField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["nameUrl", "SearchColumnStringField[]", [0, nil]],
      ["postPeriod", "SearchColumnStringField[]", [0, nil]],
      ["srcDoc", "SearchColumnStringField[]", [0, nil]],
      ["srcDocLine", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => RevRecTemplateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "RevRecTemplateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["amorMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["amorPeriod", "SearchLongField", [0, 1]],
      ["amorStartOffset", "SearchLongField", [0, 1]],
      ["amorTermSrc", "SearchEnumMultiSelectField", [0, 1]],
      ["amorType", "SearchEnumMultiSelectField", [0, 1]],
      ["contraAccount", "SearchMultiSelectField", [0, 1]],
      ["deferralAccount", "SearchMultiSelectField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["periodOffset", "SearchLongField", [0, 1]],
      ["targetAccount", "SearchMultiSelectField", [0, 1]],
      ["useForeignAmounts", "SearchBooleanField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RevRecTemplateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "RevRecTemplateSearchRowBasic"),
    :schema_element => [
      ["amorInactive", "SearchColumnStringField[]", [0, nil]],
      ["amorMethod", "SearchColumnStringField[]", [0, nil]],
      ["amorPeriod", "SearchColumnStringField[]", [0, nil]],
      ["amorStartOffset", "SearchColumnStringField[]", [0, nil]],
      ["amorTermSrc", "SearchColumnStringField[]", [0, nil]],
      ["amorType", "SearchColumnStringField[]", [0, nil]],
      ["contraAccount", "SearchColumnStringField[]", [0, nil]],
      ["deferralAccount", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnLongField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["periodOffset", "SearchColumnStringField[]", [0, nil]],
      ["targetAccount", "SearchColumnStringField[]", [0, nil]],
      ["useForeignAmounts", "SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => BinSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "BinSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["binNumber", "SearchStringField", [0, 1]],
      ["inactive", "SearchBooleanField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BinSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "BinSearchRowBasic"),
    :schema_element => [
      ["binNumber", "SearchColumnStringField[]", [0, nil]],
      ["inactive", "SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["location", "SearchColumnStringField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => DepartmentSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "DepartmentSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["nameNoHierarchy", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => DepartmentSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "DepartmentSearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => LocationSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "LocationSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isOffice", "SearchBooleanField", [0, 1]],
      ["makeInventoryAvailable", "SearchBooleanField", [0, 1]],
      ["makeInventoryAvailableStore", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["nameNoHierarchy", "SearchStringField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["tranprefix", "SearchStringField", [0, 1]],
      ["zip", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => LocationSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "LocationSearchRowBasic"),
    :schema_element => [
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isOffice", "SearchColumnBooleanField[]", [0, nil]],
      ["makeInventoryAvailable", "SearchColumnBooleanField[]", [0, nil]],
      ["makeInventoryAvailableStore", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "SearchColumnStringField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["tranPrefix", "SearchColumnStringField[]", [0, nil]],
      ["zip", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ClassificationSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ClassificationSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["nameNoHierarchy", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ClassificationSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ClassificationSearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TransactionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TransactionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["account", "SearchMultiSelectField", [0, 1]],
      ["accountType", "SearchMultiSelectField", [0, 1]],
      ["actualShipDate", "SearchDateField", [0, 1]],
      ["altSalesAmount", "SearchDoubleField", [0, 1]],
      ["altSalesNetAmount", "SearchDoubleField", [0, 1]],
      ["amount", "SearchDoubleField", [0, 1]],
      ["amountPaid", "SearchDoubleField", [0, 1]],
      ["amountRemaining", "SearchDoubleField", [0, 1]],
      ["amountUnbilled", "SearchDoubleField", [0, 1]],
      ["anyLineItem", "SearchMultiSelectField", [0, 1]],
      ["appliedToForeignAmount", "SearchDoubleField", [0, 1]],
      ["appliedToIsFxVariance", "SearchBooleanField", [0, 1]],
      ["appliedToLinkAmount", "SearchDoubleField", [0, 1]],
      ["appliedToLinkType", "SearchEnumMultiSelectField", [0, 1]],
      ["appliedToTransaction", "SearchMultiSelectField", [0, 1]],
      ["applyingForeignAmount", "SearchDoubleField", [0, 1]],
      ["applyingIsFxVariance", "SearchBooleanField", [0, 1]],
      ["applyingLinkAmount", "SearchDoubleField", [0, 1]],
      ["applyingLinkType", "SearchEnumMultiSelectField", [0, 1]],
      ["applyingTransaction", "SearchMultiSelectField", [0, 1]],
      ["approvalStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["authCode", "SearchStringField", [0, 1]],
      ["avsStreetMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["avsZipMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["billable", "SearchBooleanField", [0, 1]],
      ["billAddress", "SearchStringField", [0, 1]],
      ["billAddressee", "SearchStringField", [0, 1]],
      ["billAttention", "SearchStringField", [0, 1]],
      ["billCity", "SearchStringField", [0, 1]],
      ["billCountry", "SearchEnumMultiSelectField", [0, 1]],
      ["billCounty", "SearchStringField", [0, 1]],
      ["billedDate", "SearchDateField", [0, 1]],
      ["billingSchedule", "SearchMultiSelectField", [0, 1]],
      ["billingStatus", "SearchBooleanField", [0, 1]],
      ["billingTransaction", "SearchMultiSelectField", [0, 1]],
      ["billPhone", "SearchStringField", [0, 1]],
      ["billState", "SearchStringField", [0, 1]],
      ["billVarianceStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["billZip", "SearchStringField", [0, 1]],
      ["binNumber", "SearchStringField", [0, 1]],
      ["binNumberQuantity", "SearchDoubleField", [0, 1]],
      ["buildEntireAssembly", "SearchBooleanField", [0, 1]],
      ["buildVariance", "SearchDoubleField", [0, 1]],
      ["built", "SearchDoubleField", [0, 1]],
      ["ccCustomerCode", "SearchStringField", [0, 1]],
      ["ccExpireDate", "SearchDateField", [0, 1]],
      ["ccName", "SearchStringField", [0, 1]],
      ["ccNumber", "SearchStringField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["cleared", "SearchBooleanField", [0, 1]],
      ["closed", "SearchBooleanField", [0, 1]],
      ["closeDate", "SearchDateField", [0, 1]],
      ["cogs", "SearchBooleanField", [0, 1]],
      ["commissionEffectiveDate", "SearchDateField", [0, 1]],
      ["commit", "SearchEnumMultiSelectField", [0, 1]],
      ["confirmationNumber", "SearchStringField", [0, 1]],
      ["contribution", "SearchLongField", [0, 1]],
      ["costComponentAmount", "SearchDoubleField", [0, 1]],
      ["costComponentCategory", "SearchMultiSelectField", [0, 1]],
      ["costComponentItem", "SearchMultiSelectField", [0, 1]],
      ["costComponentQuantity", "SearchDoubleField", [0, 1]],
      ["costComponentStandardCost", "SearchDoubleField", [0, 1]],
      ["costEstimate", "SearchDoubleField", [0, 1]],
      ["costEstimateRate", "SearchDoubleField", [0, 1]],
      ["costEstimateType", "SearchEnumMultiSelectField", [0, 1]],
      ["createdBy", "SearchMultiSelectField", [0, 1]],
      ["createdFrom", "SearchMultiSelectField", [0, 1]],
      ["creditAmount", "SearchDoubleField", [0, 1]],
      ["cscMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["customerSubOf", "SearchMultiSelectField", [0, 1]],
      ["customForm", "SearchMultiSelectField", [0, 1]],
      ["custType", "SearchMultiSelectField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["daysOpen", "SearchLongField", [0, 1]],
      ["daysOverdue", "SearchLongField", [0, 1]],
      ["debitAmount", "SearchDoubleField", [0, 1]],
      ["deferredRevenue", "SearchDoubleField", [0, 1]],
      ["deferRevRec", "SearchBooleanField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["depositDate", "SearchDateField", [0, 1]],
      ["depositTransaction", "SearchMultiSelectField", [0, 1]],
      ["dueDate", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["employee", "SearchMultiSelectField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["entity", "SearchMultiSelectField", [0, 1]],
      ["entityStatus", "SearchMultiSelectField", [0, 1]],
      ["estGrossProfit", "SearchDoubleField", [0, 1]],
      ["estGrossProfitPct", "SearchDoubleField", [0, 1]],
      ["exchangeRate", "SearchDoubleField", [0, 1]],
      ["excludeCommission", "SearchBooleanField", [0, 1]],
      ["expectedCloseDate", "SearchDateField", [0, 1]],
      ["expectedReceiptDate", "SearchDateField", [0, 1]],
      ["expenseCategory", "SearchMultiSelectField", [0, 1]],
      ["expenseDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["finChrg", "SearchBooleanField", [0, 1]],
      ["forecastType", "SearchEnumMultiSelectField", [0, 1]],
      ["fulfillingTransaction", "SearchMultiSelectField", [0, 1]],
      ["fxAmount", "SearchDoubleField", [0, 1]],
      ["fxCostEstimate", "SearchDoubleField", [0, 1]],
      ["fxCostEstimateRate", "SearchDoubleField", [0, 1]],
      ["fxEstGrossProfit", "SearchDoubleField", [0, 1]],
      ["fxTranCostEstimate", "SearchDoubleField", [0, 1]],
      ["fxVsoeAllocation", "SearchDoubleField", [0, 1]],
      ["fxVsoeAmount", "SearchDoubleField", [0, 1]],
      ["fxVsoePrice", "SearchDoubleField", [0, 1]],
      ["gcoAvailabelToCharge", "SearchBooleanField", [0, 1]],
      ["gcoAvailableToRefund", "SearchBooleanField", [0, 1]],
      ["gcoAvsStreetMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["gcoAvsZipMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["gcoBuyerAccountAge", "SearchLongField", [0, 1]],
      ["gcoBuyerIp", "SearchStringField", [0, 1]],
      ["gcoChargeAmount", "SearchDoubleField", [0, 1]],
      ["gcoChargebackAmount", "SearchDoubleField", [0, 1]],
      ["gcoConfirmedChargedTotal", "SearchDoubleField", [0, 1]],
      ["gcoConfirmedRefundedTotal", "SearchDoubleField", [0, 1]],
      ["gcoCreditcardNumber", "SearchStringField", [0, 1]],
      ["gcoCscMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["gcoFinancialState", "SearchStringField", [0, 1]],
      ["gcoFulfillmentState", "SearchStringField", [0, 1]],
      ["gcoOrderId", "SearchStringField", [0, 1]],
      ["gcoOrderTotal", "SearchDoubleField", [0, 1]],
      ["gcoPromotionAmount", "SearchDoubleField", [0, 1]],
      ["gcoPromotionName", "SearchStringField", [0, 1]],
      ["gcoRefundAmount", "SearchDoubleField", [0, 1]],
      ["gcoShippingTotal", "SearchDoubleField", [0, 1]],
      ["gcoStateChangedDetail", "SearchStringField", [0, 1]],
      ["giftCertificate", "SearchStringField", [0, 1]],
      ["grossAmount", "SearchDoubleField", [0, 1]],
      ["includeInForecast", "SearchBooleanField", [0, 1]],
      ["intercoStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["intercoTransaction", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["inVsoeBundle", "SearchBooleanField", [0, 1]],
      ["isAllocation", "SearchBooleanField", [0, 1]],
      ["isGcoChargeback", "SearchBooleanField", [0, 1]],
      ["isGcoChargeConfirmed", "SearchBooleanField", [0, 1]],
      ["isGcoPaymentGuaranteed", "SearchBooleanField", [0, 1]],
      ["isGcoRefundConfirmed", "SearchBooleanField", [0, 1]],
      ["isIntercompanyAdjustment", "SearchBooleanField", [0, 1]],
      ["isPayPalMeth", "SearchBooleanField", [0, 1]],
      ["isReversal", "SearchBooleanField", [0, 1]],
      ["isRevRecTransaction", "SearchBooleanField", [0, 1]],
      ["isShipAddress", "SearchBooleanField", [0, 1]],
      ["isTransferPriceCosting", "SearchBooleanField", [0, 1]],
      ["isVsoeAlloc", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["itemSubOf", "SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["leadSource", "SearchMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["mainLine", "SearchBooleanField", [0, 1]],
      ["mainName", "SearchMultiSelectField", [0, 1]],
      ["matchBillToReceipt", "SearchBooleanField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["memoMain", "SearchStringField", [0, 1]],
      ["memorized", "SearchBooleanField", [0, 1]],
      ["merchantAccount", "SearchStringField", [0, 1]],
      ["message", "SearchStringField", [0, 1]],
      ["multiSubsidiary", "SearchBooleanField", [0, 1]],
      ["nameText", "SearchStringField", [0, 1]],
      ["netAmount", "SearchDoubleField", [0, 1]],
      ["nextApprover", "SearchMultiSelectField", [0, 1]],
      ["nextBillDate", "SearchDateField", [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["opportunity", "SearchMultiSelectField", [0, 1]],
      ["otherRefNum", "SearchTextNumberField", [0, 1]],
      ["otherRefNumNonDeposit", "SearchTextNumberField", [0, 1]],
      ["packageCount", "SearchLongField", [0, 1]],
      ["paidTransaction", "SearchMultiSelectField", [0, 1]],
      ["parent", "SearchLongField", [0, 1]],
      ["partner", "SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "SearchLongField", [0, 1]],
      ["partnerRole", "SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "SearchMultiSelectField", [0, 1]],
      ["payingTransaction", "SearchMultiSelectField", [0, 1]],
      ["paymentEventDate", "SearchDateField", [0, 1]],
      ["paymentEventHoldReason", "SearchEnumMultiSelectField", [0, 1]],
      ["paymentEventResult", "SearchEnumMultiSelectField", [0, 1]],
      ["paymentEventType", "SearchEnumMultiSelectField", [0, 1]],
      ["paymentMethod", "SearchMultiSelectField", [0, 1]],
      ["payPalPending", "SearchBooleanField", [0, 1]],
      ["payPalStatus", "SearchStringField", [0, 1]],
      ["payPalTranId", "SearchStringField", [0, 1]],
      ["pnRefNum", "SearchStringField", [0, 1]],
      ["poAsText", "SearchStringField", [0, 1]],
      ["posting", "SearchBooleanField", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["postingPeriodRelative", "PostingPeriodDate", [0, 1]],
      ["priceLevel", "SearchMultiSelectField", [0, 1]],
      ["printedPickingTicket", "SearchBooleanField", [0, 1]],
      ["probability", "SearchLongField", [0, 1]],
      ["projectedAmount", "SearchDoubleField", [0, 1]],
      ["promoCode", "SearchMultiSelectField", [0, 1]],
      ["purchaseOrder", "SearchMultiSelectField", [0, 1]],
      ["quantity", "SearchDoubleField", [0, 1]],
      ["quantityBilled", "SearchDoubleField", [0, 1]],
      ["quantityCommitted", "SearchDoubleField", [0, 1]],
      ["quantityPacked", "SearchDoubleField", [0, 1]],
      ["quantityPicked", "SearchDoubleField", [0, 1]],
      ["quantityRevCommitted", "SearchDoubleField", [0, 1]],
      ["quantityShipRecv", "SearchDoubleField", [0, 1]],
      ["recognizedRevenue", "SearchDoubleField", [0, 1]],
      ["recordType", "SearchStringField", [0, 1]],
      ["revCommitStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["revCommittingStatus", "SearchBooleanField", [0, 1]],
      ["revCommittingTransaction", "SearchMultiSelectField", [0, 1]],
      ["revenueStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["reversalDate", "SearchDateField", [0, 1]],
      ["reversalNumber", "SearchStringField", [0, 1]],
      ["revRecEndDate", "SearchDateField", [0, 1]],
      ["revRecOnRevCommitment", "SearchBooleanField", [0, 1]],
      ["revRecStartDate", "SearchDateField", [0, 1]],
      ["revRecTermInMonths", "SearchLongField", [0, 1]],
      ["salesEffectiveDate", "SearchDateField", [0, 1]],
      ["salesOrder", "SearchMultiSelectField", [0, 1]],
      ["salesRep", "SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "SearchMultiSelectField", [0, 1]],
      ["serialNumber", "SearchStringField", [0, 1]],
      ["serialNumberCost", "SearchDoubleField", [0, 1]],
      ["serialNumberCostAdjustment", "SearchDoubleField", [0, 1]],
      ["serialNumberQuantity", "SearchDoubleField", [0, 1]],
      ["serialNumbers", "SearchStringField", [0, 1]],
      ["shipAddress", "SearchStringField", [0, 1]],
      ["shipAddressee", "SearchStringField", [0, 1]],
      ["shipAttention", "SearchStringField", [0, 1]],
      ["shipCity", "SearchStringField", [0, 1]],
      ["shipComplete", "SearchBooleanField", [0, 1]],
      ["shipCountry", "SearchEnumMultiSelectField", [0, 1]],
      ["shipCounty", "SearchStringField", [0, 1]],
      ["shipDate", "SearchDateField", [0, 1]],
      ["shipGroup", "SearchLongField", [0, 1]],
      ["shipMethod", "SearchMultiSelectField", [0, 1]],
      ["shipPhone", "SearchStringField", [0, 1]],
      ["shipping", "SearchBooleanField", [0, 1]],
      ["shipRecvStatus", "SearchBooleanField", [0, 1]],
      ["shipRecvStatusLine", "SearchBooleanField", [0, 1]],
      ["shipState", "SearchMultiSelectField", [0, 1]],
      ["shipTo", "SearchMultiSelectField", [0, 1]],
      ["shipZip", "SearchStringField", [0, 1]],
      ["source", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["taxItem", "SearchMultiSelectField", [0, 1]],
      ["taxLine", "SearchBooleanField", [0, 1]],
      ["taxPeriod", "RecordRef", [0, 1]],
      ["taxPeriodRelative", "PostingPeriodDate", [0, 1]],
      ["taxRate", "SearchDoubleField", [0, 1]],
      ["terms", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["toBeEmailed", "SearchBooleanField", [0, 1]],
      ["toBePrinted", "SearchBooleanField", [0, 1]],
      ["toSubsidiary", "SearchMultiSelectField", [0, 1]],
      ["totalAmount", "SearchDoubleField", [0, 1]],
      ["trackingNumbers", "SearchStringField", [0, 1]],
      ["tranCostEstimate", "SearchDoubleField", [0, 1]],
      ["tranDate", "SearchDateField", [0, 1]],
      ["tranEstGrossProfit", "SearchDoubleField", [0, 1]],
      ["tranEstGrossProfitPct", "SearchDoubleField", [0, 1]],
      ["tranFxEstGrossProfit", "SearchDoubleField", [0, 1]],
      ["tranId", "SearchStringField", [0, 1]],
      ["tranIsVsoeBundle", "SearchBooleanField", [0, 1]],
      ["transactionDiscount", "SearchBooleanField", [0, 1]],
      ["transactionLineType", "SearchEnumMultiSelectField", [0, 1]],
      ["transferLocation", "SearchMultiSelectField", [0, 1]],
      ["transferOrderQuantityCommitted", "SearchDoubleField", [0, 1]],
      ["transferOrderQuantityPacked", "SearchDoubleField", [0, 1]],
      ["transferOrderQuantityPicked", "SearchDoubleField", [0, 1]],
      ["transferOrderQuantityReceived", "SearchDoubleField", [0, 1]],
      ["transferOrderQuantityShipped", "SearchDoubleField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["unit", "SearchMultiSelectField", [0, 1]],
      ["unitCostOverride", "SearchDoubleField", [0, 1]],
      ["vendType", "SearchMultiSelectField", [0, 1]],
      ["visibleToCustomer", "SearchBooleanField", [0, 1]],
      ["voided", "SearchBooleanField", [0, 1]],
      ["vsoeAllocation", "SearchDoubleField", [0, 1]],
      ["vsoeAmount", "SearchDoubleField", [0, 1]],
      ["vsoeDeferral", "SearchEnumMultiSelectField", [0, 1]],
      ["vsoeDelivered", "SearchBooleanField", [0, 1]],
      ["vsoePermitDiscount", "SearchEnumMultiSelectField", [0, 1]],
      ["vsoePrice", "SearchDoubleField", [0, 1]],
      ["webSite", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TransactionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TransactionSearchRowBasic"),
    :schema_element => [
      ["abbrev", "SearchColumnStringField[]", [0, nil]],
      ["account", "SearchColumnSelectField[]", [0, nil]],
      ["accountType", "SearchColumnStringField[]", [0, nil]],
      ["actualShipDate", "SearchColumnDateField[]", [0, nil]],
      ["altSalesAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["altSalesNetAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["amount", "SearchColumnDoubleField[]", [0, nil]],
      ["amountPaid", "SearchColumnDoubleField[]", [0, nil]],
      ["amountRemaining", "SearchColumnDoubleField[]", [0, nil]],
      ["amountUnbilled", "SearchColumnDoubleField[]", [0, nil]],
      ["appliedToForeignAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["appliedToIsFxVariance", "SearchColumnBooleanField[]", [0, nil]],
      ["appliedToLinkAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["appliedToLinkType", "SearchColumnStringField[]", [0, nil]],
      ["appliedToTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["applyingForeignAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["applyingIsFxVariance", "SearchColumnBooleanField[]", [0, nil]],
      ["applyingLinkAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["applyingLinkType", "SearchColumnStringField[]", [0, nil]],
      ["applyingTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["approvalStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["authCode", "SearchColumnStringField[]", [0, nil]],
      ["avsStreetMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["avsZipMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billable", "SearchColumnBooleanField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billedDate", "SearchColumnDateField[]", [0, nil]],
      ["billingAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["billingSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["billingTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billVarianceStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billZip", "SearchColumnStringField[]", [0, nil]],
      ["binNumber", "SearchColumnStringField[]", [0, nil]],
      ["binNumberQuantity", "SearchColumnDoubleField[]", [0, nil]],
      ["buildEntireAssembly", "SearchColumnBooleanField[]", [0, nil]],
      ["buildVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["built", "SearchColumnDoubleField[]", [0, nil]],
      ["ccCustomerCode", "SearchColumnStringField[]", [0, nil]],
      ["ccExpDate", "SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "SearchColumnStringField[]", [0, nil]],
      ["ccStreet", "SearchColumnStringField[]", [0, nil]],
      ["ccZipCode", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["cleared", "SearchColumnBooleanField[]", [0, nil]],
      ["closed", "SearchColumnBooleanField[]", [0, nil]],
      ["closeDate", "SearchColumnDateField[]", [0, nil]],
      ["cogsAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["commissionEffectiveDate", "SearchColumnDateField[]", [0, nil]],
      ["commit", "SearchColumnEnumSelectField[]", [0, nil]],
      ["confirmationNumber", "SearchColumnStringField[]", [0, nil]],
      ["contribution", "SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "SearchColumnDoubleField[]", [0, nil]],
      ["costComponentAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["costComponentCategory", "SearchColumnStringField[]", [0, nil]],
      ["costComponentItem", "SearchColumnStringField[]", [0, nil]],
      ["costComponentQuantity", "SearchColumnDoubleField[]", [0, nil]],
      ["costComponentStandardCost", "SearchColumnDoubleField[]", [0, nil]],
      ["costEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateRate", "SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["createdBy", "SearchColumnSelectField[]", [0, nil]],
      ["createdFrom", "SearchColumnSelectField[]", [0, nil]],
      ["creditAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["cscMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["customForm", "SearchColumnSelectField[]", [0, nil]],
      ["custType", "SearchColumnSelectField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["daysOpen", "SearchColumnLongField[]", [0, nil]],
      ["daysOverdue", "SearchColumnLongField[]", [0, nil]],
      ["debitAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["deferredRevenue", "SearchColumnDoubleField[]", [0, nil]],
      ["deferRevRec", "SearchColumnBooleanField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["depositDate", "SearchColumnDateField[]", [0, nil]],
      ["depositTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["discountAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["dueDate", "SearchColumnDateField[]", [0, nil]],
      ["effectiveRate", "SearchColumnDoubleField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["entity", "SearchColumnSelectField[]", [0, nil]],
      ["entityStatus", "SearchColumnSelectField[]", [0, nil]],
      ["estGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["estGrossProfitPct", "SearchColumnDoubleField[]", [0, nil]],
      ["estGrossProfitPercent", "SearchColumnDoubleField[]", [0, nil]],
      ["exchangeRate", "SearchColumnDoubleField[]", [0, nil]],
      ["excludeCommission", "SearchColumnBooleanField[]", [0, nil]],
      ["expectedCloseDate", "SearchColumnDateField[]", [0, nil]],
      ["expectedReceiptDate", "SearchColumnDateField[]", [0, nil]],
      ["expenseCategory", "SearchColumnSelectField[]", [0, nil]],
      ["expenseDate", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["forecastType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["fulfillingTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["fxAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["fxCostEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["fxCostEstimateRate", "SearchColumnDoubleField[]", [0, nil]],
      ["fxEstGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["fxTranCostEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoeAllocation", "SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoeAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoAvailabelToCharge", "SearchColumnBooleanField[]", [0, nil]],
      ["gcoAvailableToRefund", "SearchColumnBooleanField[]", [0, nil]],
      ["gcoAvsStreetMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoAvsZipMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoBuyerAccountAge", "SearchColumnLongField[]", [0, nil]],
      ["gcoBuyerIp", "SearchColumnStringField[]", [0, nil]],
      ["gcoChargeAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoChargebackAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoConfirmedChargedTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoConfirmedRefundedTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoCreditcardNumber", "SearchColumnStringField[]", [0, nil]],
      ["gcoCscMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoFinancialState", "SearchColumnStringField[]", [0, nil]],
      ["gcoFulfillmentState", "SearchColumnStringField[]", [0, nil]],
      ["gcoOrderId", "SearchColumnStringField[]", [0, nil]],
      ["gcoOrderTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoPromotionAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoPromotionName", "SearchColumnStringField[]", [0, nil]],
      ["gcoRefundAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoShippingTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoStateChangedDetail", "SearchColumnStringField[]", [0, nil]],
      ["giftCert", "SearchColumnStringField[]", [0, nil]],
      ["grossAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["includeInForecast", "SearchColumnBooleanField[]", [0, nil]],
      ["intercoStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["intercoTransaction", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["inVsoeBundle", "SearchColumnBooleanField[]", [0, nil]],
      ["isAllocation", "SearchColumnBooleanField[]", [0, nil]],
      ["isGcoChargeback", "SearchColumnBooleanField[]", [0, nil]],
      ["isGcoChargeConfirmed", "SearchColumnBooleanField[]", [0, nil]],
      ["isGcoPaymentGuaranteed", "SearchColumnBooleanField[]", [0, nil]],
      ["isGcoRefundConfirmed", "SearchColumnBooleanField[]", [0, nil]],
      ["isIntercompanyAdjustment", "SearchColumnBooleanField[]", [0, nil]],
      ["isReversal", "SearchColumnBooleanField[]", [0, nil]],
      ["isRevRecTransaction", "SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "SearchColumnBooleanField[]", [0, nil]],
      ["isTransferPriceCosting", "SearchColumnBooleanField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["leadSource", "SearchColumnSelectField[]", [0, nil]],
      ["line", "SearchColumnLongField[]", [0, nil]],
      ["lineSequenceNumber", "SearchColumnLongField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["mainLine", "SearchColumnBooleanField[]", [0, nil]],
      ["mainName", "SearchColumnStringField[]", [0, nil]],
      ["matchBillToReceipt", "SearchColumnBooleanField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["memoMain", "SearchColumnStringField[]", [0, nil]],
      ["memorized", "SearchColumnBooleanField[]", [0, nil]],
      ["merchantAccount", "SearchColumnSelectField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["multiSubsidiary", "SearchColumnBooleanField[]", [0, nil]],
      ["netAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["netAmountNoTax", "SearchColumnDoubleField[]", [0, nil]],
      ["nextApprover", "SearchColumnSelectField[]", [0, nil]],
      ["nextBillDate", "SearchColumnDateField[]", [0, nil]],
      ["opportunity", "SearchColumnSelectField[]", [0, nil]],
      ["options", "SearchColumnStringField[]", [0, nil]],
      ["originator", "SearchColumnEnumSelectField[]", [0, nil]],
      ["otherRefNum", "SearchColumnTextNumberField[]", [0, nil]],
      ["packageCount", "SearchColumnLongField[]", [0, nil]],
      ["paidAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["paidTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["partner", "SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "SearchColumnSelectField[]", [0, nil]],
      ["partnerTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["payingAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["payingTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["paymentEventDate", "SearchColumnDateField[]", [0, nil]],
      ["paymentEventHoldReason", "SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentEventResult", "SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentEventType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentMethod", "SearchColumnSelectField[]", [0, nil]],
      ["payPalPending", "SearchColumnBooleanField[]", [0, nil]],
      ["payPalStatus", "SearchColumnStringField[]", [0, nil]],
      ["payPalTranId", "SearchColumnStringField[]", [0, nil]],
      ["payrollBatch", "SearchColumnStringField[]", [0, nil]],
      ["pnRefNum", "SearchColumnStringField[]", [0, nil]],
      ["poRate", "SearchColumnDoubleField[]", [0, nil]],
      ["posting", "SearchColumnBooleanField[]", [0, nil]],
      ["postingPeriod", "SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "SearchColumnSelectField[]", [0, nil]],
      ["print", "SearchColumnStringField[]", [0, nil]],
      ["probability", "SearchColumnDoubleField[]", [0, nil]],
      ["projectedAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["promoCode", "SearchColumnSelectField[]", [0, nil]],
      ["purchaseOrder", "SearchColumnSelectField[]", [0, nil]],
      ["quantity", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityBilled", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityCommitted", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityPacked", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityPicked", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityRevCommitted", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityShipRecv", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityUom", "SearchColumnDoubleField[]", [0, nil]],
      ["rate", "SearchColumnDoubleField[]", [0, nil]],
      ["realizedGainPostingTransaction", "SearchColumnStringField[]", [0, nil]],
      ["recognizedRevenue", "SearchColumnDoubleField[]", [0, nil]],
      ["recordType", "SearchColumnStringField[]", [0, nil]],
      ["revCommitStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["revCommittingTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["revenueStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["reversalDate", "SearchColumnDateField[]", [0, nil]],
      ["reversalNumber", "SearchColumnStringField[]", [0, nil]],
      ["revRecEndDate", "SearchColumnDateField[]", [0, nil]],
      ["revRecOnRevCommitment", "SearchColumnBooleanField[]", [0, nil]],
      ["revRecStartDate", "SearchColumnDateField[]", [0, nil]],
      ["rgAccount", "SearchColumnSelectField[]", [0, nil]],
      ["rgAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["salesEffectiveDate", "SearchColumnDateField[]", [0, nil]],
      ["salesOrder", "SearchColumnSelectField[]", [0, nil]],
      ["salesRep", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "SearchColumnSelectField[]", [0, nil]],
      ["serialNumber", "SearchColumnStringField[]", [0, nil]],
      ["serialNumberCost", "SearchColumnDoubleField[]", [0, nil]],
      ["serialNumberCostAdjustment", "SearchColumnDoubleField[]", [0, nil]],
      ["serialNumberQuantity", "SearchColumnDoubleField[]", [0, nil]],
      ["serialNumbers", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "SearchColumnBooleanField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipDate", "SearchColumnDateField[]", [0, nil]],
      ["shipGroup", "SearchColumnLongField[]", [0, nil]],
      ["shipMethod", "SearchColumnSelectField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shippingAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["shipRecvStatusLine", "SearchColumnBooleanField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipTo", "SearchColumnSelectField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["signedAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["source", "SearchColumnStringField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["taxAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["taxCode", "SearchColumnSelectField[]", [0, nil]],
      ["taxLine", "SearchColumnBooleanField[]", [0, nil]],
      ["taxPeriod", "SearchColumnSelectField[]", [0, nil]],
      ["taxTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["termInMonths", "SearchColumnLongField[]", [0, nil]],
      ["terms", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["toBeEmailed", "SearchColumnBooleanField[]", [0, nil]],
      ["toBePrinted", "SearchColumnBooleanField[]", [0, nil]],
      ["toSubsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["total", "SearchColumnDoubleField[]", [0, nil]],
      ["totalCostEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["trackingNumbers", "SearchColumnStringField[]", [0, nil]],
      ["tranDate", "SearchColumnDateField[]", [0, nil]],
      ["tranEstGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["tranFxEstGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["tranId", "SearchColumnStringField[]", [0, nil]],
      ["tranIsVsoeBundle", "SearchColumnBooleanField[]", [0, nil]],
      ["transactionDiscount", "SearchColumnBooleanField[]", [0, nil]],
      ["transactionLineType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["transferLocation", "SearchColumnSelectField[]", [0, nil]],
      ["transferOrderItemLine", "SearchColumnStringField[]", [0, nil]],
      ["transferOrderQuantityCommitted", "SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityPacked", "SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityPicked", "SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityReceived", "SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityShipped", "SearchColumnDoubleField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["unit", "SearchColumnStringField[]", [0, nil]],
      ["unitCostOverride", "SearchColumnDoubleField[]", [0, nil]],
      ["vendType", "SearchColumnSelectField[]", [0, nil]],
      ["visibleToCustomer", "SearchColumnBooleanField[]", [0, nil]],
      ["vsoeAllocation", "SearchColumnDoubleField[]", [0, nil]],
      ["vsoeAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["vsoeDeferral", "SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoeDelivered", "SearchColumnBooleanField[]", [0, nil]],
      ["vsoePermitDiscount", "SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["webSite", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ItemSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["account", "SearchMultiSelectField", [0, 1]],
      ["alternateDemandSourceItem", "SearchMultiSelectField", [0, 1]],
      ["atpLeadTime", "SearchDoubleField", [0, 1]],
      ["atpMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["autoLeadTime", "SearchBooleanField", [0, 1]],
      ["autoPreferredStockLevel", "SearchBooleanField", [0, 1]],
      ["autoReorderPoint", "SearchBooleanField", [0, 1]],
      ["availableToPartners", "SearchBooleanField", [0, 1]],
      ["averageCost", "SearchDoubleField", [0, 1]],
      ["binNumber", "SearchStringField", [0, 1]],
      ["binOnHandAvail", "SearchDoubleField", [0, 1]],
      ["binOnHandCount", "SearchDoubleField", [0, 1]],
      ["buildEntireAssembly", "SearchBooleanField", [0, 1]],
      ["buildTime", "SearchDoubleField", [0, 1]],
      ["buyItNowPrice", "SearchDoubleField", [0, 1]],
      ["caption", "SearchStringField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["component", "SearchMultiSelectField", [0, 1]],
      ["componentOf", "SearchMultiSelectField", [0, 1]],
      ["copyDescription", "SearchBooleanField", [0, 1]],
      ["correlatedItem", "SearchMultiSelectField", [0, 1]],
      ["correlatedItemCorrelation", "SearchDoubleField", [0, 1]],
      ["correlatedItemCount", "SearchLongField", [0, 1]],
      ["correlatedItemLift", "SearchDoubleField", [0, 1]],
      ["correlatedItemPurchaseRate", "SearchDoubleField", [0, 1]],
      ["cost", "SearchDoubleField", [0, 1]],
      ["costCategory", "SearchMultiSelectField", [0, 1]],
      ["costEstimate", "SearchDoubleField", [0, 1]],
      ["costEstimateType", "SearchEnumMultiSelectField", [0, 1]],
      ["costingMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["countryOfManufacture", "SearchEnumMultiSelectField", [0, 1]],
      ["created", "SearchDateField", [0, 1]],
      ["createJob", "SearchBooleanField", [0, 1]],
      ["dateViewed", "SearchDateField", [0, 1]],
      ["daysBeforeExpiration", "SearchDoubleField", [0, 1]],
      ["defaultReturnCost", "SearchDoubleField", [0, 1]],
      ["demandModifier", "SearchDoubleField", [0, 1]],
      ["demandSource", "SearchEnumMultiSelectField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["displayIneBayStore", "SearchBooleanField", [0, 1]],
      ["displayName", "SearchStringField", [0, 1]],
      ["dontShowPrice", "SearchBooleanField", [0, 1]],
      ["eBayItemDescription", "SearchStringField", [0, 1]],
      ["eBayItemSubtitle", "SearchStringField", [0, 1]],
      ["eBayItemTitle", "SearchStringField", [0, 1]],
      ["ebayRelistingOption", "SearchEnumMultiSelectField", [0, 1]],
      ["endAuctionsWhenOutOfStock", "SearchBooleanField", [0, 1]],
      ["excludeFromSitemap", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["featuredDescription", "SearchStringField", [0, 1]],
      ["feedDescription", "SearchStringField", [0, 1]],
      ["feedName", "SearchStringField", [0, 1]],
      ["fixedLotSize", "SearchDoubleField", [0, 1]],
      ["froogleProductFeed", "SearchBooleanField", [0, 1]],
      ["fxCost", "SearchDoubleField", [0, 1]],
      ["giftCertAuthCode", "SearchStringField", [0, 1]],
      ["giftCertEmail", "SearchStringField", [0, 1]],
      ["giftCertExpDate", "SearchDateField", [0, 1]],
      ["giftCertFrom", "SearchStringField", [0, 1]],
      ["giftCertMsg", "SearchStringField", [0, 1]],
      ["giftCertOrigAmt", "SearchStringField", [0, 1]],
      ["giftCertRecipient", "SearchStringField", [0, 1]],
      ["imageUrl", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["inventoryLocation", "SearchMultiSelectField", [0, 1]],
      ["isAvailable", "SearchBooleanField", [0, 1]],
      ["isDropShipItem", "SearchBooleanField", [0, 1]],
      ["isFulfillable", "SearchBooleanField", [0, 1]],
      ["isGcoCompliant", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isLotItem", "SearchBooleanField", [0, 1]],
      ["isOnline", "SearchBooleanField", [0, 1]],
      ["isPreferredVendor", "SearchBooleanField", [0, 1]],
      ["isSerialItem", "SearchBooleanField", [0, 1]],
      ["isSpecialOrderItem", "SearchBooleanField", [0, 1]],
      ["isSpecialWorkOrderItem", "SearchBooleanField", [0, 1]],
      ["issueProduct", "SearchMultiSelectField", [0, 1]],
      ["isTaxable", "SearchBooleanField", [0, 1]],
      ["isVsoeBundle", "SearchBooleanField", [0, 1]],
      ["itemId", "SearchStringField", [0, 1]],
      ["itemUrl", "SearchStringField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastPurchasePrice", "SearchDoubleField", [0, 1]],
      ["lastQuantityAvailableChange", "SearchDateField", [0, 1]],
      ["leadTime", "SearchLongField", [0, 1]],
      ["listingDuration", "SearchEnumMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["locationAtpLeadTime", "SearchDoubleField", [0, 1]],
      ["locationAverageCost", "SearchDoubleField", [0, 1]],
      ["locationCost", "SearchDoubleField", [0, 1]],
      ["locationDefaultReturnCost", "SearchDoubleField", [0, 1]],
      ["locationDemandSource", "SearchEnumMultiSelectField", [0, 1]],
      ["locationFixedLotSize", "SearchDoubleField", [0, 1]],
      ["locationPreferredStockLevel", "SearchDoubleField", [0, 1]],
      ["locationQuantityAvailable", "SearchDoubleField", [0, 1]],
      ["locationQuantityBackOrdered", "SearchDoubleField", [0, 1]],
      ["locationQuantityCommitted", "SearchDoubleField", [0, 1]],
      ["locationQuantityInTransit", "SearchDoubleField", [0, 1]],
      ["locationQuantityOnHand", "SearchDoubleField", [0, 1]],
      ["locationQuantityOnOrder", "SearchDoubleField", [0, 1]],
      ["locationReorderPoint", "SearchDoubleField", [0, 1]],
      ["locationSupplyLotSizingMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["locationSupplyType", "SearchEnumMultiSelectField", [0, 1]],
      ["locationTotalValue", "SearchDoubleField", [0, 1]],
      ["manufacturer", "SearchStringField", [0, 1]],
      ["manufactureraddr1", "SearchStringField", [0, 1]],
      ["manufacturerCity", "SearchStringField", [0, 1]],
      ["manufacturerState", "SearchStringField", [0, 1]],
      ["manufacturerTariff", "SearchStringField", [0, 1]],
      ["manufacturerTaxId", "SearchStringField", [0, 1]],
      ["manufacturerZip", "SearchStringField", [0, 1]],
      ["matchBillToReceipt", "SearchBooleanField", [0, 1]],
      ["matrix", "SearchBooleanField", [0, 1]],
      ["matrixChild", "SearchBooleanField", [0, 1]],
      ["metaTagHtml", "SearchStringField", [0, 1]],
      ["minimumQuantity", "SearchLongField", [0, 1]],
      ["mpn", "SearchStringField", [0, 1]],
      ["multManufactureAddr", "SearchBooleanField", [0, 1]],
      ["nexTagCategory", "SearchStringField", [0, 1]],
      ["nexTagProductFeed", "SearchBooleanField", [0, 1]],
      ["numActiveListings", "SearchLongField", [0, 1]],
      ["numberAllowedDownloads", "SearchDoubleField", [0, 1]],
      ["numCurrentlyListed", "SearchLongField", [0, 1]],
      ["offerSupport", "SearchBooleanField", [0, 1]],
      ["onlineCustomerPrice", "SearchDoubleField", [0, 1]],
      ["onSpecial", "SearchBooleanField", [0, 1]],
      ["otherVendor", "SearchMultiSelectField", [0, 1]],
      ["outOfStockBehavior", "SearchMultiSelectField", [0, 1]],
      ["overallQuantityPricingType", "SearchEnumMultiSelectField", [0, 1]],
      ["pageTitle", "SearchStringField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["preferenceCriterion", "SearchStringField", [0, 1]],
      ["preferredBin", "SearchBooleanField", [0, 1]],
      ["preferredLocation", "SearchMultiSelectField", [0, 1]],
      ["preferredStockLevel", "SearchDoubleField", [0, 1]],
      ["preferredStockLevelDays", "SearchLongField", [0, 1]],
      ["price", "SearchDoubleField", [0, 1]],
      ["pricesIncludeTax", "SearchBooleanField", [0, 1]],
      ["pricingGroup", "SearchMultiSelectField", [0, 1]],
      ["primaryCategory", "SearchLongField", [0, 1]],
      ["purchaseUnit", "SearchMultiSelectField", [0, 1]],
      ["quantityAvailable", "SearchDoubleField", [0, 1]],
      ["quantityBackOrdered", "SearchDoubleField", [0, 1]],
      ["quantityCommitted", "SearchDoubleField", [0, 1]],
      ["quantityOnHand", "SearchDoubleField", [0, 1]],
      ["quantityOnOrder", "SearchDoubleField", [0, 1]],
      ["quantityPricingSchedule", "SearchMultiSelectField", [0, 1]],
      ["reorderMultiple", "SearchLongField", [0, 1]],
      ["reorderPoint", "SearchDoubleField", [0, 1]],
      ["reservePrice", "SearchDoubleField", [0, 1]],
      ["revRecSchedule", "SearchMultiSelectField", [0, 1]],
      ["safetyStockLevel", "SearchDoubleField", [0, 1]],
      ["safetyStockLevelDays", "SearchLongField", [0, 1]],
      ["salesDescription", "SearchStringField", [0, 1]],
      ["saleUnit", "SearchMultiSelectField", [0, 1]],
      ["scheduleBCode", "SearchEnumMultiSelectField", [0, 1]],
      ["scheduleBNumber", "SearchStringField", [0, 1]],
      ["scheduleBQuantity", "SearchStringField", [0, 1]],
      ["searchKeywords", "SearchStringField", [0, 1]],
      ["seasonalDemand", "SearchBooleanField", [0, 1]],
      ["sellOnEBay", "SearchBooleanField", [0, 1]],
      ["serialNumber", "SearchStringField", [0, 1]],
      ["serialNumberLocation", "SearchMultiSelectField", [0, 1]],
      ["shipIndividually", "SearchBooleanField", [0, 1]],
      ["shipPackage", "SearchMultiSelectField", [0, 1]],
      ["shippingRate", "SearchDoubleField", [0, 1]],
      ["shoppingDotComCategory", "SearchStringField", [0, 1]],
      ["shoppingProductFeed", "SearchBooleanField", [0, 1]],
      ["shopzillaCategoryId", "SearchLongField", [0, 1]],
      ["shopzillaProductFeed", "SearchBooleanField", [0, 1]],
      ["sitemapPriority", "SearchEnumMultiSelectField", [0, 1]],
      ["softDescriptor", "SearchMultiSelectField", [0, 1]],
      ["startingPrice", "SearchDoubleField", [0, 1]],
      ["stockDescription", "SearchStringField", [0, 1]],
      ["stockUnit", "SearchMultiSelectField", [0, 1]],
      ["storeDescription", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["subType", "SearchEnumMultiSelectField", [0, 1]],
      ["supplyLotSizingMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["supplyReplenishmentMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["supplyType", "SearchEnumMultiSelectField", [0, 1]],
      ["taxCode", "SearchMultiSelectField", [0, 1]],
      ["taxSchedule", "SearchMultiSelectField", [0, 1]],
      ["thumbnailUrl", "SearchStringField", [0, 1]],
      ["totalValue", "SearchDoubleField", [0, 1]],
      ["trackLandedCost", "SearchBooleanField", [0, 1]],
      ["transferPrice", "SearchDoubleField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["unitsType", "SearchMultiSelectField", [0, 1]],
      ["upcCode", "SearchStringField", [0, 1]],
      ["urlComponent", "SearchStringField", [0, 1]],
      ["useBins", "SearchBooleanField", [0, 1]],
      ["useMarginalRates", "SearchBooleanField", [0, 1]],
      ["vendor", "SearchMultiSelectField", [0, 1]],
      ["vendorCode", "SearchStringField", [0, 1]],
      ["vendorCost", "SearchDoubleField", [0, 1]],
      ["vendorCostEntered", "SearchDoubleField", [0, 1]],
      ["vendorName", "SearchStringField", [0, 1]],
      ["vsoeDeferral", "SearchEnumMultiSelectField", [0, 1]],
      ["vsoeDelivered", "SearchBooleanField", [0, 1]],
      ["vsoePermitDiscount", "SearchEnumMultiSelectField", [0, 1]],
      ["vsoePrice", "SearchDoubleField", [0, 1]],
      ["webSite", "SearchMultiSelectField", [0, 1]],
      ["weight", "SearchDoubleField", [0, 1]],
      ["yahooProductFeed", "SearchBooleanField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ItemSearchRowBasic"),
    :schema_element => [
      ["alternateDemandSourceItem", "SearchColumnStringField[]", [0, nil]],
      ["assetAccount", "SearchColumnSelectField[]", [0, nil]],
      ["atpLeadTime", "SearchColumnDoubleField[]", [0, nil]],
      ["atpMethod", "SearchColumnEnumSelectField[]", [0, nil]],
      ["autoLeadTime", "SearchColumnBooleanField[]", [0, nil]],
      ["autoPreferredStockLevel", "SearchColumnBooleanField[]", [0, nil]],
      ["autoReorderPoint", "SearchColumnBooleanField[]", [0, nil]],
      ["availableToPartners", "SearchColumnBooleanField[]", [0, nil]],
      ["averageCost", "SearchColumnDoubleField[]", [0, nil]],
      ["basePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["billExchRateVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["billPriceVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["billQtyVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["binNumber", "SearchColumnStringField[]", [0, nil]],
      ["binOnHandAvail", "SearchColumnDoubleField[]", [0, nil]],
      ["binOnHandCount", "SearchColumnDoubleField[]", [0, nil]],
      ["buildEntireAssembly", "SearchColumnBooleanField[]", [0, nil]],
      ["buildTime", "SearchColumnDoubleField[]", [0, nil]],
      ["buyItNowPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["category", "SearchColumnStringField[]", [0, nil]],
      ["categoryPreferred", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["copyDescription", "SearchColumnBooleanField[]", [0, nil]],
      ["correlatedItem", "SearchColumnSelectField[]", [0, nil]],
      ["correlatedItemCorrelation", "SearchColumnDoubleField[]", [0, nil]],
      ["correlatedItemCount", "SearchColumnLongField[]", [0, nil]],
      ["correlatedItemLift", "SearchColumnDoubleField[]", [0, nil]],
      ["correlatedItemPurchaseRate", "SearchColumnDoubleField[]", [0, nil]],
      ["cost", "SearchColumnDoubleField[]", [0, nil]],
      ["costCategory", "SearchColumnStringField[]", [0, nil]],
      ["costEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["costingMethod", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryOfManufacture", "SearchColumnEnumSelectField[]", [0, nil]],
      ["created", "SearchColumnDateField[]", [0, nil]],
      ["createJob", "SearchColumnBooleanField[]", [0, nil]],
      ["custReturnVarianceAccount", "SearchColumnSelectField[]", [0, nil]],
      ["dateViewed", "SearchColumnDateField[]", [0, nil]],
      ["daysBeforeExpiration", "SearchColumnStringField[]", [0, nil]],
      ["defaultReturnCost", "SearchColumnDoubleField[]", [0, nil]],
      ["deferredExpenseAccount", "SearchColumnSelectField[]", [0, nil]],
      ["deferredRevenueAccount", "SearchColumnSelectField[]", [0, nil]],
      ["demandModifier", "SearchColumnDoubleField[]", [0, nil]],
      ["demandSource", "SearchColumnEnumSelectField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["departmentnohierarchy", "SearchColumnSelectField[]", [0, nil]],
      ["displayIneBayStore", "SearchColumnBooleanField[]", [0, nil]],
      ["displayName", "SearchColumnStringField[]", [0, nil]],
      ["dontShowPrice", "SearchColumnBooleanField[]", [0, nil]],
      ["eBayItemDescription", "SearchColumnStringField[]", [0, nil]],
      ["eBayItemSubtitle", "SearchColumnStringField[]", [0, nil]],
      ["eBayItemTitle", "SearchColumnStringField[]", [0, nil]],
      ["ebayRelistingOption", "SearchColumnEnumSelectField[]", [0, nil]],
      ["endAuctionsWhenOutOfStock", "SearchColumnBooleanField[]", [0, nil]],
      ["excludeFromSitemap", "SearchColumnBooleanField[]", [0, nil]],
      ["expenseAccount", "SearchColumnSelectField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["featuredDescription", "SearchColumnStringField[]", [0, nil]],
      ["feedDescription", "SearchColumnStringField[]", [0, nil]],
      ["feedName", "SearchColumnStringField[]", [0, nil]],
      ["fixedLotSize", "SearchColumnDoubleField[]", [0, nil]],
      ["froogleProductFeed", "SearchColumnBooleanField[]", [0, nil]],
      ["fxCost", "SearchColumnDoubleField[]", [0, nil]],
      ["gainLossAccount", "SearchColumnSelectField[]", [0, nil]],
      ["giftCertAuthCode", "SearchColumnStringField[]", [0, nil]],
      ["giftCertEmail", "SearchColumnStringField[]", [0, nil]],
      ["giftCertExpirationDate", "SearchColumnStringField[]", [0, nil]],
      ["giftCertFrom", "SearchColumnStringField[]", [0, nil]],
      ["giftCertMessage", "SearchColumnStringField[]", [0, nil]],
      ["giftCertOriginalAmount", "SearchColumnStringField[]", [0, nil]],
      ["giftCertRecipient", "SearchColumnStringField[]", [0, nil]],
      ["hits", "SearchColumnLongField[]", [0, nil]],
      ["imageUrl", "SearchColumnStringField[]", [0, nil]],
      ["incomeAccount", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["inventoryLocation", "SearchColumnSelectField[]", [0, nil]],
      ["isAvailable", "SearchColumnBooleanField[]", [0, nil]],
      ["isDropShipItem", "SearchColumnBooleanField[]", [0, nil]],
      ["isFulfillable", "SearchColumnBooleanField[]", [0, nil]],
      ["isGcoCompliant", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isLotItem", "SearchColumnBooleanField[]", [0, nil]],
      ["isOnline", "SearchColumnBooleanField[]", [0, nil]],
      ["isSerialItem", "SearchColumnBooleanField[]", [0, nil]],
      ["isSpecialOrderItem", "SearchColumnBooleanField[]", [0, nil]],
      ["isSpecialWorkOrderItem", "SearchColumnBooleanField[]", [0, nil]],
      ["issueProduct", "SearchColumnSelectField[]", [0, nil]],
      ["isTaxable", "SearchColumnBooleanField[]", [0, nil]],
      ["isVsoeBundle", "SearchColumnBooleanField[]", [0, nil]],
      ["itemId", "SearchColumnStringField[]", [0, nil]],
      ["itemUrl", "SearchColumnStringField[]", [0, nil]],
      ["lastPurchasePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["lastQuantityAvailableChange", "SearchColumnDateField[]", [0, nil]],
      ["leadTime", "SearchColumnLongField[]", [0, nil]],
      ["liabilityAccount", "SearchColumnSelectField[]", [0, nil]],
      ["listingDuration", "SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["locationAtpLeadTime", "SearchColumnDoubleField[]", [0, nil]],
      ["locationAverageCost", "SearchColumnDoubleField[]", [0, nil]],
      ["locationBinQuantityAvailable", "SearchColumnDoubleField[]", [0, nil]],
      ["locationCost", "SearchColumnDoubleField[]", [0, nil]],
      ["locationDefaultReturnCost", "SearchColumnDoubleField[]", [0, nil]],
      ["locationDemandSource", "SearchColumnEnumSelectField[]", [0, nil]],
      ["locationFixedLotSize", "SearchColumnDoubleField[]", [0, nil]],
      ["locationPreferredStockLevel", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityAvailable", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityBackOrdered", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityCommitted", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityInTransit", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityOnHand", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityOnOrder", "SearchColumnDoubleField[]", [0, nil]],
      ["locationReOrderPoint", "SearchColumnDoubleField[]", [0, nil]],
      ["locationSupplyLotSizingMethod", "SearchColumnEnumSelectField[]", [0, nil]],
      ["locationSupplyType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["locationTotalValue", "SearchColumnDoubleField[]", [0, nil]],
      ["manufacturer", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerAddr1", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerCity", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerState", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerTariff", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerTaxId", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerZip", "SearchColumnStringField[]", [0, nil]],
      ["matchBillToReceipt", "SearchColumnBooleanField[]", [0, nil]],
      ["memberItem", "SearchColumnSelectField[]", [0, nil]],
      ["memberQuantity", "SearchColumnDoubleField[]", [0, nil]],
      ["metaTagHtml", "SearchColumnStringField[]", [0, nil]],
      ["minimumQuantity", "SearchColumnStringField[]", [0, nil]],
      ["modified", "SearchColumnDateField[]", [0, nil]],
      ["mpn", "SearchColumnStringField[]", [0, nil]],
      ["multManufactureAddr", "SearchColumnBooleanField[]", [0, nil]],
      ["nextagCategory", "SearchColumnStringField[]", [0, nil]],
      ["nextagProductFeed", "SearchColumnBooleanField[]", [0, nil]],
      ["noPriceMessage", "SearchColumnStringField[]", [0, nil]],
      ["numActiveListings", "SearchColumnLongField[]", [0, nil]],
      ["numberAllowedDownloads", "SearchColumnStringField[]", [0, nil]],
      ["numCurrentlyListed", "SearchColumnLongField[]", [0, nil]],
      ["offerSupport", "SearchColumnBooleanField[]", [0, nil]],
      ["onlineCustomerPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["onlinePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["onSpecial", "SearchColumnBooleanField[]", [0, nil]],
      ["otherPrices", "SearchColumnDoubleField[]", [0, nil]],
      ["otherVendor", "SearchColumnSelectField[]", [0, nil]],
      ["outOfStockBehavior", "SearchColumnStringField[]", [0, nil]],
      ["outOfStockMessage", "SearchColumnStringField[]", [0, nil]],
      ["overallQuantityPricingType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["pageTitle", "SearchColumnStringField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["preferenceCriterion", "SearchColumnStringField[]", [0, nil]],
      ["preferredBin", "SearchColumnBooleanField[]", [0, nil]],
      ["preferredLocation", "SearchColumnSelectField[]", [0, nil]],
      ["preferredStockLevel", "SearchColumnDoubleField[]", [0, nil]],
      ["preferredStockLevelDays", "SearchColumnLongField[]", [0, nil]],
      ["pricesIncludeTax", "SearchColumnBooleanField[]", [0, nil]],
      ["pricingGroup", "SearchColumnSelectField[]", [0, nil]],
      ["primaryCategory", "SearchColumnStringField[]", [0, nil]],
      ["prodPriceVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["prodQtyVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["purchaseDescription", "SearchColumnStringField[]", [0, nil]],
      ["purchasePriceVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["purchaseUnit", "SearchColumnSelectField[]", [0, nil]],
      ["quantityAvailable", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityBackOrdered", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityCommitted", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnHand", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnOrder", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityPricingSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["reorderMultiple", "SearchColumnLongField[]", [0, nil]],
      ["reOrderPoint", "SearchColumnDoubleField[]", [0, nil]],
      ["reservePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["revRecSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["safetyStockLevel", "SearchColumnDoubleField[]", [0, nil]],
      ["safetyStockLevelDays", "SearchColumnLongField[]", [0, nil]],
      ["salesDescription", "SearchColumnStringField[]", [0, nil]],
      ["salesTaxCode", "SearchColumnSelectField[]", [0, nil]],
      ["saleUnit", "SearchColumnSelectField[]", [0, nil]],
      ["scheduleBCode", "SearchColumnEnumSelectField[]", [0, nil]],
      ["scheduleBNumber", "SearchColumnStringField[]", [0, nil]],
      ["scheduleBQuantity", "SearchColumnStringField[]", [0, nil]],
      ["searchKeywords", "SearchColumnStringField[]", [0, nil]],
      ["seasonalDemand", "SearchColumnBooleanField[]", [0, nil]],
      ["sellOnEBay", "SearchColumnBooleanField[]", [0, nil]],
      ["serialNumber", "SearchColumnStringField[]", [0, nil]],
      ["serialNumberLocation", "SearchColumnStringField[]", [0, nil]],
      ["shipIndividually", "SearchColumnBooleanField[]", [0, nil]],
      ["shipPackage", "SearchColumnSelectField[]", [0, nil]],
      ["shippingRate", "SearchColumnDoubleField[]", [0, nil]],
      ["shoppingDotComCategory", "SearchColumnStringField[]", [0, nil]],
      ["shoppingProductFeed", "SearchColumnBooleanField[]", [0, nil]],
      ["shopzillaCategoryId", "SearchColumnLongField[]", [0, nil]],
      ["shopzillaProductFeed", "SearchColumnBooleanField[]", [0, nil]],
      ["sitemapPriority", "SearchColumnEnumSelectField[]", [0, nil]],
      ["softDescriptor", "SearchColumnSelectField[]", [0, nil]],
      ["startingPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["stockDescription", "SearchColumnStringField[]", [0, nil]],
      ["stockUnit", "SearchColumnSelectField[]", [0, nil]],
      ["storeDescription", "SearchColumnStringField[]", [0, nil]],
      ["storeDetailedDescription", "SearchColumnStringField[]", [0, nil]],
      ["storeDisplayImage", "SearchColumnSelectField[]", [0, nil]],
      ["storeDisplayName", "SearchColumnStringField[]", [0, nil]],
      ["storeDisplayThumbnail", "SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["subType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyLotSizingMethod", "SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyReplenishmentMethod", "SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["taxSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["thumbNailUrl", "SearchColumnStringField[]", [0, nil]],
      ["totalValue", "SearchColumnDoubleField[]", [0, nil]],
      ["trackLandedCost", "SearchColumnBooleanField[]", [0, nil]],
      ["transferPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["unbuildVarianceAccount", "SearchColumnSelectField[]", [0, nil]],
      ["unitsType", "SearchColumnSelectField[]", [0, nil]],
      ["upcCode", "SearchColumnStringField[]", [0, nil]],
      ["urlComponent", "SearchColumnStringField[]", [0, nil]],
      ["useBins", "SearchColumnBooleanField[]", [0, nil]],
      ["useMarginalRates", "SearchColumnBooleanField[]", [0, nil]],
      ["vendor", "SearchColumnSelectField[]", [0, nil]],
      ["vendorCode", "SearchColumnStringField[]", [0, nil]],
      ["vendorCost", "SearchColumnDoubleField[]", [0, nil]],
      ["vendorCostEntered", "SearchColumnDoubleField[]", [0, nil]],
      ["vendorName", "SearchColumnStringField[]", [0, nil]],
      ["vendorSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["vendReturnVarianceAccount", "SearchColumnSelectField[]", [0, nil]],
      ["vsoeDeferral", "SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoeDelivered", "SearchColumnBooleanField[]", [0, nil]],
      ["vsoePermitDiscount", "SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["webSite", "SearchColumnSelectField[]", [0, nil]],
      ["weight", "SearchColumnDoubleField[]", [0, nil]],
      ["weightUnit", "SearchColumnEnumSelectField[]", [0, nil]],
      ["yahooProductFeed", "SearchColumnBooleanField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PartnerSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PartnerSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["assignTasks", "SearchBooleanField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["billAddress", "SearchStringField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["commissionPlan", "SearchMultiSelectField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["eligibleForCommission", "SearchBooleanField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["emailPreference", "SearchEnumMultiSelectField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "SearchBooleanField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isPerson", "SearchBooleanField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["otherRelationships", "SearchEnumMultiSelectField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["partnerCode", "SearchStringField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["promoCode", "SearchMultiSelectField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["shipAddress", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["uRL", ["SearchStringField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "URL")], [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PartnerSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PartnerSearchRowBasic"),
    :schema_element => [
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["assignTasks", "SearchColumnBooleanField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnStringField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["companyName", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["eligibleForCommission", "SearchColumnBooleanField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "SearchColumnEnumSelectField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "SearchColumnBooleanField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["partnerCode", "SearchColumnStringField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["promoCode", "SearchColumnStringField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "VendorSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["accountNumber", "SearchStringField", [0, 1]],
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["balance", "SearchDoubleField", [0, 1]],
      ["billAddress", "SearchStringField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["contact", "SearchStringField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["creditLimit", "SearchDoubleField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["currentExchangeRate", "SearchDoubleField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["eligibleForCommission", "SearchBooleanField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["emailPreference", "SearchEnumMultiSelectField", [0, 1]],
      ["emailTransactions", "SearchBooleanField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["expenseAccount", "SearchMultiSelectField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["faxTransactions", "SearchBooleanField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "SearchBooleanField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["is1099Eligible", "SearchBooleanField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isJobResourceVend", "SearchBooleanField", [0, 1]],
      ["isPerson", "SearchBooleanField", [0, 1]],
      ["laborCost", "SearchDoubleField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["otherRelationships", "SearchEnumMultiSelectField", [0, 1]],
      ["payablesAccount", "SearchMultiSelectField", [0, 1]],
      ["pec", "SearchStringField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["printTransactions", "SearchBooleanField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["shipAddress", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["taxIdNum", "SearchStringField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["unbilledOrders", "SearchDoubleField", [0, 1]],
      ["url", "SearchStringField", [0, 1]],
      ["vatRegNumber", "SearchStringField", [0, 1]],
      ["workCalendar", "SearchMultiSelectField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "VendorSearchRowBasic"),
    :schema_element => [
      ["accountNumber", "SearchColumnStringField[]", [0, nil]],
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["altContact", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["balance", "SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["companyName", "SearchColumnStringField[]", [0, nil]],
      ["contact", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["creditLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["currentExchangeRate", "SearchColumnDoubleField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["eligibleForCommission", "SearchColumnBooleanField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "SearchColumnEnumSelectField[]", [0, nil]],
      ["emailTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["expenseAccount", "SearchColumnSelectField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["faxTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["is1099Eligible", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isJobResourceVend", "SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "SearchColumnBooleanField[]", [0, nil]],
      ["laborCost", "SearchColumnDoubleField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["payablesAccount", "SearchColumnSelectField[]", [0, nil]],
      ["pec", "SearchColumnStringField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["printOnCheckAs", "SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["taxIdNum", "SearchColumnStringField[]", [0, nil]],
      ["terms", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "SearchColumnStringField[]", [0, nil]],
      ["workCalendar", "SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SiteCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SiteCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["dateViewed", "SearchDateField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["excludeFromSitemap", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["name", "SearchMultiSelectField", [0, 1]],
      ["sitemapPriority", "SearchEnumMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SiteCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SiteCategorySearchRowBasic"),
    :schema_element => [
      ["dateViewed", "SearchColumnDateField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["excludeFromSitemap", "SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fullName", "SearchColumnStringField[]", [0, nil]],
      ["hidden", "SearchColumnBooleanField[]", [0, nil]],
      ["hits", "SearchColumnLongField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["longDescription", "SearchColumnStringField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["pageTitle", "SearchColumnStringField[]", [0, nil]],
      ["sitemapPriority", "SearchColumnEnumSelectField[]", [0, nil]],
      ["urlComponent", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => TimeBillSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TimeBillSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["approved", "SearchBooleanField", [0, 1]],
      ["billable", "SearchBooleanField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["customer", "SearchMultiSelectField", [0, 1]],
      ["date", "SearchDateField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["duration", "SearchDoubleField", [0, 1]],
      ["employee", "SearchMultiSelectField", [0, 1]],
      ["exempt", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["lastModified", "SearchDateField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["paidByPayroll", "SearchBooleanField", [0, 1]],
      ["paidExternally", "SearchBooleanField", [0, 1]],
      ["payItem", "SearchMultiSelectField", [0, 1]],
      ["productive", "SearchBooleanField", [0, 1]],
      ["status", "SearchBooleanField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["temporaryLocalJurisdiction", "SearchMultiSelectField", [0, 1]],
      ["temporaryStateJurisdiction", "SearchMultiSelectField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["utilized", "SearchBooleanField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TimeBillSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TimeBillSearchRowBasic"),
    :schema_element => [
      ["v_break", ["SearchColumnStringField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "break")], [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["customer", "SearchColumnSelectField[]", [0, nil]],
      ["date", "SearchColumnDateField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["durationDecimal", "SearchColumnDoubleField[]", [0, nil]],
      ["employee", "SearchColumnSelectField[]", [0, nil]],
      ["endTime", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["hours", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isBillable", "SearchColumnBooleanField[]", [0, nil]],
      ["isExempt", "SearchColumnBooleanField[]", [0, nil]],
      ["isProductive", "SearchColumnBooleanField[]", [0, nil]],
      ["isUtilized", "SearchColumnBooleanField[]", [0, nil]],
      ["item", "SearchColumnStringField[]", [0, nil]],
      ["lastModified", "SearchColumnDateField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["paidExternally", "SearchColumnBooleanField[]", [0, nil]],
      ["payItem", "SearchColumnSelectField[]", [0, nil]],
      ["payrollDate", "SearchColumnDateField[]", [0, nil]],
      ["rate", "SearchColumnDoubleField[]", [0, nil]],
      ["startTime", "SearchColumnDateField[]", [0, nil]],
      ["status", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnStringField[]", [0, nil]],
      ["supervisorApproval", "SearchColumnBooleanField[]", [0, nil]],
      ["temporaryLocalJurisdiction", "SearchColumnStringField[]", [0, nil]],
      ["temporaryStateJurisdiction", "SearchColumnStringField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SolutionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SolutionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["abstract", "SearchStringField", [0, 1]],
      ["assigned", "SearchMultiSelectField", [0, 1]],
      ["caseCount", "SearchLongField", [0, 1]],
      ["code", "SearchStringField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["find", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isOnline", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["topic", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SolutionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SolutionSearchRowBasic"),
    :schema_element => [
      ["assigned", "SearchColumnSelectField[]", [0, nil]],
      ["caseCount", "SearchColumnLongField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["displayOnline", "SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["previewref", "SearchColumnStringField[]", [0, nil]],
      ["solutionCode", "SearchColumnStringField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TopicSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TopicSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TopicSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TopicSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => SubsidiarySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SubsidiarySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isElimination", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["legalName", "SearchStringField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["nameNoHierarchy", "SearchStringField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["taxIdNum", "SearchStringField", [0, 1]],
      ["tranPrefix", "SearchStringField", [0, 1]],
      ["url", "SearchStringField", [0, 1]],
      ["zip", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SubsidiarySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SubsidiarySearchRowBasic"),
    :schema_element => [
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["anonymousCustomerInboundEmail", "SearchColumnStringField[]", [0, nil]],
      ["anonymousCustomerOnlineForms", "SearchColumnStringField[]", [0, nil]],
      ["caseAssignmentTemplate", "SearchColumnStringField[]", [0, nil]],
      ["caseAutomaticClosureTemplate", "SearchColumnStringField[]", [0, nil]],
      ["caseCopyEmployeeTemplate", "SearchColumnStringField[]", [0, nil]],
      ["caseCreationTemplate", "SearchColumnStringField[]", [0, nil]],
      ["caseEscalationTemplate", "SearchColumnStringField[]", [0, nil]],
      ["caseUpdateTemplate", "SearchColumnStringField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["companyNameForSupportMessages", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["employeeCaseUpdateTemplate", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isElimination", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["legalName", "SearchColumnStringField[]", [0, nil]],
      ["mainSupportEmailAddress", "SearchColumnStringField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "SearchColumnStringField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["taxIdNum", "SearchColumnStringField[]", [0, nil]],
      ["tranPrefix", "SearchColumnStringField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["zip", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GiftCertificateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "GiftCertificateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["amountAvailableBilled", "SearchDoubleField", [0, 1]],
      ["amountRemaining", "SearchDoubleField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["expirationDate", "SearchDateField", [0, 1]],
      ["giftCertCode", "SearchStringField", [0, 1]],
      ["incomeAccount", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isActive", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["liabilityAccount", "SearchMultiSelectField", [0, 1]],
      ["message", "SearchStringField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["originalAmount", "SearchDoubleField", [0, 1]],
      ["purchaseDate", "SearchDateField", [0, 1]],
      ["sender", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GiftCertificateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "GiftCertificateSearchRowBasic"),
    :schema_element => [
      ["amountRemaining", "SearchColumnDoubleField[]", [0, nil]],
      ["amtAvailBilled", "SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["expirationDate", "SearchColumnDateField[]", [0, nil]],
      ["gcActive", "SearchColumnBooleanField[]", [0, nil]],
      ["giftCertCode", "SearchColumnStringField[]", [0, nil]],
      ["incomeAcct", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["liabilityAcct", "SearchColumnStringField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["originalAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["purchaseDate", "SearchColumnDateField[]", [0, nil]],
      ["sender", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FolderSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "FolderSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isTopLevel", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["numFiles", "SearchLongField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["predecessor", "SearchMultiSelectField", [0, 1]],
      ["private", "SearchBooleanField", [0, 1]],
      ["size", "SearchLongField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FolderSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "FolderSearchRowBasic"),
    :schema_element => [
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["folderSize", "SearchColumnLongField[]", [0, nil]],
      ["group", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["numFiles", "SearchColumnLongField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => FileSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "FileSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["availableWithoutLogin", "SearchBooleanField", [0, 1]],
      ["created", "SearchDateField", [0, 1]],
      ["dateViewed", "SearchDateField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["documentSize", "SearchLongField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fileType", "SearchEnumMultiSelectField", [0, 1]],
      ["folder", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isAvailable", "SearchBooleanField", [0, 1]],
      ["isLink", "SearchBooleanField", [0, 1]],
      ["modified", "SearchDateField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["url", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FileSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "FileSearchRowBasic"),
    :schema_element => [
      ["availableWithoutLogin", "SearchColumnBooleanField[]", [0, nil]],
      ["created", "SearchColumnDateField[]", [0, nil]],
      ["dateViewed", "SearchColumnDateField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["documentSize", "SearchColumnLongField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["fileType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["folder", "SearchColumnSelectField[]", [0, nil]],
      ["hits", "SearchColumnLongField[]", [0, nil]],
      ["hostedPath", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isAvailable", "SearchColumnBooleanField[]", [0, nil]],
      ["modified", "SearchColumnDateField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => JobSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["accountNumber", "SearchStringField", [0, 1]],
      ["actualTime", "SearchDoubleField", [0, 1]],
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["allocatePayrollExpenses", "SearchBooleanField", [0, 1]],
      ["allowAllResourcesForTasks", "SearchBooleanField", [0, 1]],
      ["allowExpenses", "SearchBooleanField", [0, 1]],
      ["allowTime", "SearchBooleanField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["billingSchedule", "SearchMultiSelectField", [0, 1]],
      ["calculatedEndDate", "SearchDateField", [0, 1]],
      ["calculatedEndDateBaseline", "SearchDateField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["contact", "SearchStringField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["customer", "SearchMultiSelectField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["estCost", "SearchDoubleField", [0, 1]],
      ["estEndDate", "SearchDateField", [0, 1]],
      ["estimatedGrossProfit", "SearchDoubleField", [0, 1]],
      ["estimatedGrossProfitPercent", "SearchDoubleField", [0, 1]],
      ["estimatedLaborCost", "SearchDoubleField", [0, 1]],
      ["estimatedLaborCostBaseline", "SearchDoubleField", [0, 1]],
      ["estimatedLaborRevenue", "SearchDoubleField", [0, 1]],
      ["estimatedTime", "SearchDoubleField", [0, 1]],
      ["estimatedTimeOverride", "SearchDoubleField", [0, 1]],
      ["estimatedTimeOverrideBaseline", "SearchDoubleField", [0, 1]],
      ["estRevenue", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["includeCrmTasksInTotals", "SearchBooleanField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isExemptTime", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isProductiveTime", "SearchBooleanField", [0, 1]],
      ["isUtilizedTime", "SearchBooleanField", [0, 1]],
      ["jobBillingType", "SearchEnumMultiSelectField", [0, 1]],
      ["jobItem", "SearchMultiSelectField", [0, 1]],
      ["jobPrice", "SearchDoubleField", [0, 1]],
      ["jobResource", "SearchMultiSelectField", [0, 1]],
      ["jobResourceRole", "SearchMultiSelectField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastBaselineDate", "SearchDateField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["limitTimeToAssignees", "SearchBooleanField", [0, 1]],
      ["materializeTime", "SearchBooleanField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["pctComplete", "SearchLongField", [0, 1]],
      ["percentTimeComplete", "SearchLongField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["projectedEndDateBaseline", "SearchDateField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["startDateBaseline", "SearchDateField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["status", "SearchMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["timeRemaining", "SearchDoubleField", [0, 1]],
      ["type", "SearchMultiSelectField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobSearchRowBasic"),
    :schema_element => [
      ["accountNumber", "SearchColumnStringField[]", [0, nil]],
      ["actualTime", "SearchColumnDoubleField[]", [0, nil]],
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["allocatePayrollExpenses", "SearchColumnBooleanField[]", [0, nil]],
      ["allowAllResourcesForTasks", "SearchColumnBooleanField[]", [0, nil]],
      ["allowExpenses", "SearchColumnBooleanField[]", [0, nil]],
      ["allowTime", "SearchColumnBooleanField[]", [0, nil]],
      ["altContact", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billingSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["calculatedEndDate", "SearchColumnDateField[]", [0, nil]],
      ["calculatedEndDateBaseline", "SearchColumnDateField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["companyName", "SearchColumnStringField[]", [0, nil]],
      ["contact", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["customer", "SearchColumnSelectField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["entityStatus", "SearchColumnSelectField[]", [0, nil]],
      ["estimatedCost", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedGrossProfitPercent", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborCost", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborCostBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborRevenue", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedRevenue", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTime", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverride", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverrideBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["includeCrmTasksInTotals", "SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isExemptTime", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isProductiveTime", "SearchColumnBooleanField[]", [0, nil]],
      ["isUtilizedTime", "SearchColumnBooleanField[]", [0, nil]],
      ["jobBillingType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["jobItem", "SearchColumnSelectField[]", [0, nil]],
      ["jobPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["jobResource", "SearchColumnSelectField[]", [0, nil]],
      ["jobResourceRole", "SearchColumnSelectField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastBaselineDate", "SearchColumnDateField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["limitTimeToAssignees", "SearchColumnBooleanField[]", [0, nil]],
      ["materializeTime", "SearchColumnBooleanField[]", [0, nil]],
      ["percentComplete", "SearchColumnDoubleField[]", [0, nil]],
      ["percentTimeComplete", "SearchColumnDoubleField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["projectedEndDate", "SearchColumnDateField[]", [0, nil]],
      ["projectedEndDateBaseline", "SearchColumnDateField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["startDateBaseline", "SearchColumnDateField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["timeRemaining", "SearchColumnDoubleField[]", [0, nil]],
      ["type", "SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => IssueSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "IssueSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["ageInMonths", "SearchLongField", [0, 1]],
      ["assigned", "SearchMultiSelectField", [0, 1]],
      ["buildBroken", "SearchMultiSelectField", [0, 1]],
      ["buildBrokenName", "SearchStringField", [0, 1]],
      ["buildFixed", "SearchMultiSelectField", [0, 1]],
      ["buildFixedName", "SearchStringField", [0, 1]],
      ["buildTarget", "SearchMultiSelectField", [0, 1]],
      ["buildTargetName", "SearchStringField", [0, 1]],
      ["caseCount", "SearchLongField", [0, 1]],
      ["caseNumber", "SearchStringField", [0, 1]],
      ["closedDate", "SearchDateField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["dateReleased", "SearchDateField", [0, 1]],
      ["details", "SearchStringField", [0, 1]],
      ["duplicateOf", "SearchMultiSelectField", [0, 1]],
      ["eFix", "SearchBooleanField", [0, 1]],
      ["employeeOrTeam", "SearchMultiSelectField", [0, 1]],
      ["eventStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["externalAbstract", "SearchStringField", [0, 1]],
      ["externalDetails", "SearchStringField", [0, 1]],
      ["externalFixedIn", "SearchMultiSelectField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["externalStatus", "SearchMultiSelectField", [0, 1]],
      ["fixed", "SearchDateField", [0, 1]],
      ["fixedBy", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isOwner", "SearchBooleanField", [0, 1]],
      ["isReviewed", "SearchBooleanField", [0, 1]],
      ["isShowStopper", "SearchBooleanField", [0, 1]],
      ["issueAbstract", "SearchStringField", [0, 1]],
      ["issueNumber", "SearchStringField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["v_module", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["originalFixedIn", "SearchStringField", [0, 1]],
      ["priority", "SearchMultiSelectField", [0, 1]],
      ["product", "SearchMultiSelectField", [0, 1]],
      ["productTeam", "SearchMultiSelectField", [0, 1]],
      ["reportedBy", "SearchMultiSelectField", [0, 1]],
      ["reproduce", "SearchMultiSelectField", [0, 1]],
      ["resolved", "SearchDateField", [0, 1]],
      ["resolvedBy", "SearchMultiSelectField", [0, 1]],
      ["reviewer", "SearchMultiSelectField", [0, 1]],
      ["severity", "SearchMultiSelectField", [0, 1]],
      ["source", "SearchEnumMultiSelectField", [0, 1]],
      ["status", "SearchMultiSelectField", [0, 1]],
      ["tags", "SearchMultiSelectField", [0, 1]],
      ["tracking", "SearchBooleanField", [0, 1]],
      ["type", "SearchMultiSelectField", [0, 1]],
      ["userType", "SearchMultiSelectField", [0, 1]],
      ["versionBroken", "SearchMultiSelectField", [0, 1]],
      ["versionFixed", "SearchMultiSelectField", [0, 1]],
      ["versionTarget", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => IssueSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "IssueSearchRowBasic"),
    :schema_element => [
      ["ageInMonths", "SearchColumnLongField[]", [0, nil]],
      ["assigned", "SearchColumnSelectField[]", [0, nil]],
      ["buildBroken", "SearchColumnSelectField[]", [0, nil]],
      ["buildFixed", "SearchColumnSelectField[]", [0, nil]],
      ["buildTarget", "SearchColumnSelectField[]", [0, nil]],
      ["caseCount", "SearchColumnLongField[]", [0, nil]],
      ["caseNumber", "SearchColumnStringField[]", [0, nil]],
      ["closedDate", "SearchColumnDateField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["dateReleased", "SearchColumnDateField[]", [0, nil]],
      ["duplicateOf", "SearchColumnSelectField[]", [0, nil]],
      ["employeeOrTeam", "SearchColumnSelectField[]", [0, nil]],
      ["eventStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["externalAbstract", "SearchColumnStringField[]", [0, nil]],
      ["externalDetails", "SearchColumnStringField[]", [0, nil]],
      ["externalFixedIn", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["externalStatus", "SearchColumnSelectField[]", [0, nil]],
      ["fixed", "SearchColumnDateField[]", [0, nil]],
      ["fixedBy", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isOwner", "SearchColumnBooleanField[]", [0, nil]],
      ["isReviewed", "SearchColumnBooleanField[]", [0, nil]],
      ["isShowStopper", "SearchColumnBooleanField[]", [0, nil]],
      ["issueAbstract", "SearchColumnStringField[]", [0, nil]],
      ["issueStatus", "SearchColumnSelectField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["v_module", ["SearchColumnStringField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "module")], [0, nil]],
      ["number", "SearchColumnStringField[]", [0, nil]],
      ["originalFixedIn", "SearchColumnStringField[]", [0, nil]],
      ["priority", "SearchColumnSelectField[]", [0, nil]],
      ["product", "SearchColumnSelectField[]", [0, nil]],
      ["productTeam", "SearchColumnSelectField[]", [0, nil]],
      ["reportedBy", "SearchColumnSelectField[]", [0, nil]],
      ["reproduce", "SearchColumnSelectField[]", [0, nil]],
      ["resolved", "SearchColumnDateField[]", [0, nil]],
      ["resolvedBy", "SearchColumnSelectField[]", [0, nil]],
      ["reviewer", "SearchColumnSelectField[]", [0, nil]],
      ["severity", "SearchColumnSelectField[]", [0, nil]],
      ["source", "SearchColumnEnumSelectField[]", [0, nil]],
      ["tags", "SearchColumnSelectField[]", [0, nil]],
      ["type", "SearchColumnStringField[]", [0, nil]],
      ["userType", "SearchColumnSelectField[]", [0, nil]],
      ["versionBroken", "SearchColumnSelectField[]", [0, nil]],
      ["versionFixed", "SearchColumnSelectField[]", [0, nil]],
      ["versionTarget", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GroupMemberSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "GroupMemberSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["groupId", "SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CampaignSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CampaignSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["audience", "SearchMultiSelectField", [0, 1]],
      ["baseCost", "SearchDoubleField", [0, 1]],
      ["campaignEventType", "SearchEnumMultiSelectField", [0, 1]],
      ["campaignId", "SearchStringField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["channel", "SearchMultiSelectField", [0, 1]],
      ["cost", "SearchDoubleField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["event", "SearchStringField", [0, 1]],
      ["expectedRevenue", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["family", "SearchMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isSalesCampaign", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["keyword", "SearchStringField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["manager", "SearchMultiSelectField", [0, 1]],
      ["managerRole", "SearchMultiSelectField", [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["offer", "SearchMultiSelectField", [0, 1]],
      ["promoCode", "SearchMultiSelectField", [0, 1]],
      ["recipient", "SearchMultiSelectField", [0, 1]],
      ["response", "SearchEnumMultiSelectField", [0, 1]],
      ["responseCategory", "SearchEnumMultiSelectField", [0, 1]],
      ["responseCode", "SearchLongField", [0, 1]],
      ["responseComments", "SearchStringField", [0, 1]],
      ["responseDate", "SearchDateField", [0, 1]],
      ["scheduleDate", "SearchDateField", [0, 1]],
      ["searchEngine", "SearchMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["subscription", "SearchMultiSelectField", [0, 1]],
      ["template", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["vertical", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CampaignSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CampaignSearchRowBasic"),
    :schema_element => [
      ["audience", "SearchColumnSelectField[]", [0, nil]],
      ["baseCost", "SearchColumnDoubleField[]", [0, nil]],
      ["campaignId", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["channel", "SearchColumnSelectField[]", [0, nil]],
      ["cost", "SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["event", "SearchColumnStringField[]", [0, nil]],
      ["executedDate", "SearchColumnDateField[]", [0, nil]],
      ["expectedRevenue", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["family", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isSalesCampaign", "SearchColumnBooleanField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["keyword", "SearchColumnStringField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["managerRole", "SearchColumnSelectField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["offer", "SearchColumnSelectField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["promoCode", "SearchColumnStringField[]", [0, nil]],
      ["recipient", "SearchColumnSelectField[]", [0, nil]],
      ["response", "SearchColumnEnumSelectField[]", [0, nil]],
      ["responseCategory", "SearchColumnEnumSelectField[]", [0, nil]],
      ["responseCode", "SearchColumnLongField[]", [0, nil]],
      ["responseDate", "SearchColumnDateField[]", [0, nil]],
      ["responseNotes", "SearchColumnStringField[]", [0, nil]],
      ["revenue", "SearchColumnDoubleField[]", [0, nil]],
      ["roi", "SearchColumnDoubleField[]", [0, nil]],
      ["scheduledDate", "SearchColumnDateField[]", [0, nil]],
      ["searchEngine", "SearchColumnSelectField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["vertical", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EntityGroupSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EntityGroupSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["email", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["groupName", "SearchStringField", [0, 1]],
      ["groupOwner", "SearchMultiSelectField", [0, 1]],
      ["groupType", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDynamic", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isPrivate", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EntityGroupSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EntityGroupSearchRowBasic"),
    :schema_element => [
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["groupName", "SearchColumnStringField[]", [0, nil]],
      ["groupType", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDynamic", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isPrivate", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["savedSearch", "SearchColumnStringField[]", [0, nil]],
      ["size", "SearchColumnLongField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PromotionCodeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PromotionCodeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["applyDiscountTo", "SearchEnumMultiSelectField", [0, 1]],
      ["code", "SearchStringField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["discount", "SearchMultiSelectField", [0, 1]],
      ["discountAmount", "SearchDoubleField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["freeShipItem", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isPublic", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["partner", "SearchMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PromotionCodeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PromotionCodeSearchRowBasic"),
    :schema_element => [
      ["code", "SearchColumnStringField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["discount", "SearchColumnStringField[]", [0, nil]],
      ["discountAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isPublic", "SearchColumnBooleanField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BudgetSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "BudgetSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["account", "SearchMultiSelectField", [0, 1]],
      ["amount", "SearchDoubleField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["customer", "SearchMultiSelectField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["global", "SearchBooleanField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["year", "SearchMultiSelectField", [0, 1]],
      ["year2", "SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BudgetSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "BudgetSearchRowBasic"),
    :schema_element => [
      ["account", "SearchColumnStringField[]", [0, nil]],
      ["amount", "SearchColumnDoubleField[]", [0, nil]],
      ["category", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnStringField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["classnohierarchy", "SearchColumnStringField[]", [0, nil]],
      ["currency", "SearchColumnStringField[]", [0, nil]],
      ["customer", "SearchColumnStringField[]", [0, nil]],
      ["department", "SearchColumnStringField[]", [0, nil]],
      ["departmentnohierarchy", "SearchColumnStringField[]", [0, nil]],
      ["global", "SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["item", "SearchColumnStringField[]", [0, nil]],
      ["location", "SearchColumnStringField[]", [0, nil]],
      ["locationnohierarchy", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnStringField[]", [0, nil]],
      ["subsidiarynohierarchy", "SearchColumnStringField[]", [0, nil]],
      ["year", "SearchColumnStringField[]", [0, nil]],
      ["year2", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ProjectTaskSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ProjectTaskSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["actualWork", "SearchDoubleField", [0, 1]],
      ["assignee", "SearchMultiSelectField", [0, 1]],
      ["company", "SearchMultiSelectField", [0, 1]],
      ["constraintType", "SearchEnumMultiSelectField", [0, 1]],
      ["contact", "SearchMultiSelectField", [0, 1]],
      ["cost", "SearchDoubleField", [0, 1]],
      ["costBase", "SearchDoubleField", [0, 1]],
      ["costBaseBaseline", "SearchDoubleField", [0, 1]],
      ["costBaseline", "SearchDoubleField", [0, 1]],
      ["costBaseVariance", "SearchDoubleField", [0, 1]],
      ["costVariance", "SearchDoubleField", [0, 1]],
      ["costVariancePercent", "SearchDoubleField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["endDateBaseline", "SearchDateField", [0, 1]],
      ["endDateVariance", "SearchDoubleField", [0, 1]],
      ["estimatedWork", "SearchDoubleField", [0, 1]],
      ["estimatedWorkBaseline", "SearchDoubleField", [0, 1]],
      ["estimatedWorkVariance", "SearchDoubleField", [0, 1]],
      ["estimatedWorkVariancePercent", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["id", "SearchLongField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isSummaryTask", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["percentWorkComplete", "SearchDoubleField", [0, 1]],
      ["predecessor", "SearchMultiSelectField", [0, 1]],
      ["predecessors", "SearchStringField", [0, 1]],
      ["priority", "SearchEnumMultiSelectField", [0, 1]],
      ["remainingWork", "SearchDoubleField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["startDateBaseline", "SearchDateField", [0, 1]],
      ["startDateVariance", "SearchDoubleField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["successor", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ProjectTaskSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ProjectTaskSearchRowBasic"),
    :schema_element => [
      ["actualWork", "SearchColumnDoubleField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["constraintType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["contact", "SearchColumnSelectField[]", [0, nil]],
      ["cost", "SearchColumnDoubleField[]", [0, nil]],
      ["costBase", "SearchColumnDoubleField[]", [0, nil]],
      ["costBaseBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["costBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["costBaseVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["costVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["costVariancePercent", "SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["endDateBaseline", "SearchColumnDateField[]", [0, nil]],
      ["endDateVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWork", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkVariancePercent", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["id", "SearchColumnLongField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isSummaryTask", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["percentWorkComplete", "SearchColumnDoubleField[]", [0, nil]],
      ["predecessor", "SearchColumnSelectField[]", [0, nil]],
      ["predecessors", "SearchColumnStringField[]", [0, nil]],
      ["predecessorType", "SearchColumnStringField[]", [0, nil]],
      ["priority", "SearchColumnEnumSelectField[]", [0, nil]],
      ["remainingWork", "SearchColumnDoubleField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["startDateBaseline", "SearchColumnDateField[]", [0, nil]],
      ["startDateVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["successor", "SearchColumnSelectField[]", [0, nil]],
      ["successorType", "SearchColumnStringField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ProjectTaskAssignmentSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ProjectTaskAssignmentSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["actualWork", "SearchDoubleField", [0, 1]],
      ["cost", "SearchDoubleField", [0, 1]],
      ["costBase", "SearchDoubleField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["estimatedWork", "SearchDoubleField", [0, 1]],
      ["estimatedWorkBaseline", "SearchDoubleField", [0, 1]],
      ["grossProfit", "SearchDoubleField", [0, 1]],
      ["grossProfitBase", "SearchDoubleField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["price", "SearchDoubleField", [0, 1]],
      ["priceBase", "SearchDoubleField", [0, 1]],
      ["resource", "SearchMultiSelectField", [0, 1]],
      ["resourceName", "SearchStringField", [0, 1]],
      ["serviceItem", "SearchStringField", [0, 1]],
      ["serviceItemDesc", "SearchStringField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["unitCost", "SearchDoubleField", [0, 1]],
      ["unitCostBase", "SearchDoubleField", [0, 1]],
      ["unitPrice", "SearchDoubleField", [0, 1]],
      ["unitPriceBase", "SearchDoubleField", [0, 1]],
      ["workCalendar", "SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ProjectTaskAssignmentSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ProjectTaskAssignmentSearchRowBasic"),
    :schema_element => [
      ["actualWork", "SearchColumnDoubleField[]", [0, nil]],
      ["cost", "SearchColumnDoubleField[]", [0, nil]],
      ["costBase", "SearchColumnDoubleField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["estimatedWork", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["grossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["grossProfitBase", "SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["price", "SearchColumnDoubleField[]", [0, nil]],
      ["priceBase", "SearchColumnDoubleField[]", [0, nil]],
      ["resource", "SearchColumnSelectField[]", [0, nil]],
      ["resourceName", "SearchColumnStringField[]", [0, nil]],
      ["serviceItem", "SearchColumnStringField[]", [0, nil]],
      ["serviceItemDesc", "SearchColumnStringField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["unitCost", "SearchColumnDoubleField[]", [0, nil]],
      ["unitCostBase", "SearchColumnDoubleField[]", [0, nil]],
      ["unitPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["unitPriceBase", "SearchColumnDoubleField[]", [0, nil]],
      ["workCalendar", "SearchColumnSelectField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => AccountingPeriodSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AccountingPeriodSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["allLocked", "SearchBooleanField", [0, 1]],
      ["allowNonGlChanges", "SearchBooleanField", [0, 1]],
      ["apLocked", "SearchBooleanField", [0, 1]],
      ["arLocked", "SearchBooleanField", [0, 1]],
      ["closed", "SearchBooleanField", [0, 1]],
      ["closedOnDate", "SearchDateField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isAdjust", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isQuarter", "SearchBooleanField", [0, 1]],
      ["isYear", "SearchBooleanField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["payrollLocked", "SearchBooleanField", [0, 1]],
      ["periodName", "SearchStringField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AccountingPeriodSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AccountingPeriodSearchRowBasic"),
    :schema_element => [
      ["allLocked", "SearchColumnBooleanField[]", [0, nil]],
      ["allowNonGLChanges", "SearchColumnBooleanField[]", [0, nil]],
      ["apLocked", "SearchColumnBooleanField[]", [0, nil]],
      ["arLocked", "SearchColumnBooleanField[]", [0, nil]],
      ["closed", "SearchColumnBooleanField[]", [0, nil]],
      ["closedOnDate", "SearchColumnDateField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isAdjust", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isQuarter", "SearchColumnBooleanField[]", [0, nil]],
      ["isYear", "SearchColumnBooleanField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["payrollLocked", "SearchColumnBooleanField[]", [0, nil]],
      ["periodName", "SearchColumnStringField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["private", "SearchBooleanField", [0, 1]],
      ["sync", "SearchBooleanField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactCategorySearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["private", "SearchColumnBooleanField[]", [0, nil]],
      ["sync", "SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactRoleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactRoleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactRoleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactRoleSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerCategorySearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerStatusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerStatusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["includeInLeadReports", "SearchBooleanField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["probability", "SearchDoubleField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerStatusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerStatusSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["includeInLeadReports", "SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["probability", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ExpenseCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ExpenseCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["account", "SearchMultiSelectField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ExpenseCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ExpenseCategorySearchRowBasic"),
    :schema_element => [
      ["account", "SearchColumnSelectField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobStatusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobStatusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobStatusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobStatusSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => JobTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobTypeSearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NoteTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NoteTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NoteTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NoteTypeSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => PartnerCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PartnerCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PartnerCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PartnerCategorySearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => PaymentMethodSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PaymentMethodSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["account", "SearchMultiSelectField", [0, 1]],
      ["creditCard", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDebitCard", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PaymentMethodSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PaymentMethodSearchRowBasic"),
    :schema_element => [
      ["account", "SearchColumnSelectField[]", [0, nil]],
      ["creditCard", "SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDebitCard", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => PriceLevelSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PriceLevelSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["discountPct", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isOnline", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PriceLevelSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PriceLevelSearchRowBasic"),
    :schema_element => [
      ["discountPct", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isOnline", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => SalesRoleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SalesRoleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SalesRoleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SalesRoleSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => TermSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TermSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["dateDriven", "SearchBooleanField", [0, 1]],
      ["dayDiscountExpires", "SearchLongField", [0, 1]],
      ["dayOfMonthNetDue", "SearchLongField", [0, 1]],
      ["daysUntilExpiry", "SearchLongField", [0, 1]],
      ["daysUntilNetDue", "SearchLongField", [0, 1]],
      ["discountPercent", "SearchDoubleField", [0, 1]],
      ["discountPercentDateDriven", "SearchDoubleField", [0, 1]],
      ["dueNextMonthIfWithinDays", "SearchLongField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["preferred", "SearchBooleanField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TermSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TermSearchRowBasic"),
    :schema_element => [
      ["dateDriven", "SearchColumnBooleanField[]", [0, nil]],
      ["dayDiscountExpires", "SearchColumnLongField[]", [0, nil]],
      ["dayOfMonthNetDue", "SearchColumnLongField[]", [0, nil]],
      ["daysUntilExpiry", "SearchColumnLongField[]", [0, nil]],
      ["daysUntilNetDue", "SearchColumnLongField[]", [0, nil]],
      ["discountPercent", "SearchColumnDoubleField[]", [0, nil]],
      ["discountPercentDateDriven", "SearchColumnDoubleField[]", [0, nil]],
      ["dueNextMonthIfWithinDays", "SearchColumnLongField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["preferred", "SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "VendorCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isTaxAgency", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "VendorCategorySearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isTaxAgency", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => WinLossReasonSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "WinLossReasonSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => WinLossReasonSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "WinLossReasonSearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => OriginatingLeadSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OriginatingLeadSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["accountNumber", "SearchStringField", [0, 1]],
      ["availableOffline", "SearchBooleanField", [0, 1]],
      ["balance", "SearchDoubleField", [0, 1]],
      ["boughtAmount", "SearchDoubleField", [0, 1]],
      ["boughtDate", "SearchDateField", [0, 1]],
      ["buyingReason", "SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "SearchMultiSelectField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["ccCustomerCode", "SearchStringField", [0, 1]],
      ["ccDefault", "SearchBooleanField", [0, 1]],
      ["ccExpDate", "SearchDateField", [0, 1]],
      ["ccHolderName", "SearchStringField", [0, 1]],
      ["ccNumber", "SearchStringField", [0, 1]],
      ["ccType", "SearchMultiSelectField", [0, 1]],
      ["classBought", "SearchMultiSelectField", [0, 1]],
      ["companyName", "SearchStringField", [0, 1]],
      ["contact", "SearchStringField", [0, 1]],
      ["contribution", "SearchLongField", [0, 1]],
      ["conversionDate", "SearchDateField", [0, 1]],
      ["creditHoldOverride", "SearchBooleanField", [0, 1]],
      ["creditLimit", "SearchDoubleField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["custStage", "SearchMultiSelectField", [0, 1]],
      ["custStatus", "SearchMultiSelectField", [0, 1]],
      ["dateClosed", "SearchDateField", [0, 1]],
      ["daysOverdue", "SearchLongField", [0, 1]],
      ["depositBalance", "SearchDoubleField", [0, 1]],
      ["deptBought", "SearchMultiSelectField", [0, 1]],
      ["emailTransactions", "SearchBooleanField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["entityStatus", "SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "SearchDoubleField", [0, 1]],
      ["explicitConversion", "SearchBooleanField", [0, 1]],
      ["faxTransactions", "SearchBooleanField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["firstOrderDate", "SearchDateField", [0, 1]],
      ["firstSaleDate", "SearchDateField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["groupPricingLevel", "SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "SearchBooleanField", [0, 1]],
      ["isBudgetApproved", "SearchBooleanField", [0, 1]],
      ["isPerson", "SearchBooleanField", [0, 1]],
      ["isReportedLead", "SearchBooleanField", [0, 1]],
      ["isShipAddress", "SearchBooleanField", [0, 1]],
      ["itemPricingLevel", "SearchMultiSelectField", [0, 1]],
      ["itemPricingUnitPrice", "SearchDoubleField", [0, 1]],
      ["itemsBought", "SearchMultiSelectField", [0, 1]],
      ["itemsOrdered", "SearchMultiSelectField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["leadDate", "SearchDateField", [0, 1]],
      ["leadSource", "SearchMultiSelectField", [0, 1]],
      ["locationBought", "SearchMultiSelectField", [0, 1]],
      ["manualCreditHold", "SearchBooleanField", [0, 1]],
      ["merchantAccount", "SearchMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["onCreditHold", "SearchBooleanField", [0, 1]],
      ["orderedAmount", "SearchDoubleField", [0, 1]],
      ["orderedDate", "SearchDateField", [0, 1]],
      ["otherRelationships", "SearchEnumMultiSelectField", [0, 1]],
      ["overdueBalance", "SearchDoubleField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["parentItemsBought", "SearchMultiSelectField", [0, 1]],
      ["parentItemsOrdered", "SearchMultiSelectField", [0, 1]],
      ["partner", "SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "SearchLongField", [0, 1]],
      ["partnerRole", "SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "SearchMultiSelectField", [0, 1]],
      ["pec", "SearchStringField", [0, 1]],
      ["priceLevel", "SearchMultiSelectField", [0, 1]],
      ["pricingGroup", "SearchMultiSelectField", [0, 1]],
      ["pricingItem", "SearchMultiSelectField", [0, 1]],
      ["printTransactions", "SearchBooleanField", [0, 1]],
      ["prospectDate", "SearchDateField", [0, 1]],
      ["pstExempt", "SearchBooleanField", [0, 1]],
      ["reminderDate", "SearchDateField", [0, 1]],
      ["resaleNumber", "SearchStringField", [0, 1]],
      ["role", "SearchMultiSelectField", [0, 1]],
      ["salesReadiness", "SearchMultiSelectField", [0, 1]],
      ["salesRep", "SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "SearchMultiSelectField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["shipComplete", "SearchBooleanField", [0, 1]],
      ["shippingItem", "SearchMultiSelectField", [0, 1]],
      ["stage", "SearchMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["subsidBought", "SearchMultiSelectField", [0, 1]],
      ["taxable", "SearchBooleanField", [0, 1]],
      ["terms", "SearchMultiSelectField", [0, 1]],
      ["territory", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["unbilledOrders", "SearchDoubleField", [0, 1]],
      ["url", "SearchStringField", [0, 1]],
      ["vatRegNumber", "SearchStringField", [0, 1]],
      ["webLead", "SearchBooleanField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OriginatingLeadSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OriginatingLeadSearchRowBasic"),
    :schema_element => [
      ["accountNumber", "SearchColumnStringField[]", [0, nil]],
      ["altContact", "SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "SearchColumnBooleanField[]", [0, nil]],
      ["balance", "SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["buyingReason", "SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["ccCustomerCode", "SearchColumnStringField[]", [0, nil]],
      ["ccDefault", "SearchColumnBooleanField[]", [0, nil]],
      ["ccExpDate", "SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "SearchColumnStringField[]", [0, nil]],
      ["ccType", "SearchColumnSelectField[]", [0, nil]],
      ["companyName", "SearchColumnStringField[]", [0, nil]],
      ["contact", "SearchColumnStringField[]", [0, nil]],
      ["contribution", "SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "SearchColumnDoubleField[]", [0, nil]],
      ["conversionDate", "SearchColumnDateField[]", [0, nil]],
      ["creditHoldOverride", "SearchColumnBooleanField[]", [0, nil]],
      ["creditLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["dateClosed", "SearchColumnDateField[]", [0, nil]],
      ["daysOverdue", "SearchColumnLongField[]", [0, nil]],
      ["depositBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["emailTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["entityStatus", "SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "SearchColumnDoubleField[]", [0, nil]],
      ["explicitConversion", "SearchColumnBooleanField[]", [0, nil]],
      ["faxTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["firstOrderDate", "SearchColumnDateField[]", [0, nil]],
      ["firstSaleDate", "SearchColumnDateField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["groupPricingLevel", "SearchColumnStringField[]", [0, nil]],
      ["hasDuplicates", "SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["isBudgetApproved", "SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "SearchColumnBooleanField[]", [0, nil]],
      ["itemPricingLevel", "SearchColumnStringField[]", [0, nil]],
      ["itemPricingUnitPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["jobEndDate", "SearchColumnDateField[]", [0, nil]],
      ["jobProjectedEnd", "SearchColumnDateField[]", [0, nil]],
      ["jobStartDate", "SearchColumnDateField[]", [0, nil]],
      ["jobType", "SearchColumnSelectField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["leadDate", "SearchColumnDateField[]", [0, nil]],
      ["leadSource", "SearchColumnSelectField[]", [0, nil]],
      ["manualCreditHold", "SearchColumnBooleanField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["onCreditHold", "SearchColumnBooleanField[]", [0, nil]],
      ["overdueBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["partner", "SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "SearchColumnStringField[]", [0, nil]],
      ["partnerTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["pec", "SearchColumnStringField[]", [0, nil]],
      ["prefCCProcessor", "SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "SearchColumnSelectField[]", [0, nil]],
      ["pricingGroup", "SearchColumnStringField[]", [0, nil]],
      ["pricingItem", "SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["prospectDate", "SearchColumnDateField[]", [0, nil]],
      ["reminderDays", "SearchColumnLongField[]", [0, nil]],
      ["resaleNumber", "SearchColumnStringField[]", [0, nil]],
      ["role", "SearchColumnStringField[]", [0, nil]],
      ["salesReadiness", "SearchColumnStringField[]", [0, nil]],
      ["salesRep", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "SearchColumnSelectField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "SearchColumnBooleanField[]", [0, nil]],
      ["shippingItem", "SearchColumnSelectField[]", [0, nil]],
      ["stage", "SearchColumnStringField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["taxable", "SearchColumnBooleanField[]", [0, nil]],
      ["taxItem", "SearchColumnSelectField[]", [0, nil]],
      ["terms", "SearchColumnSelectField[]", [0, nil]],
      ["territory", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "SearchColumnStringField[]", [0, nil]],
      ["webLead", "SearchColumnBooleanField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UnitsTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "UnitsTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["abbreviation", "SearchStringField", [0, 1]],
      ["baseUnit", "SearchBooleanField", [0, 1]],
      ["conversionRate", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInActive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["pluralAbbreviation", "SearchStringField", [0, 1]],
      ["pluralName", "SearchStringField", [0, 1]],
      ["unitName", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UnitsTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "UnitsTypeSearchRowBasic"),
    :schema_element => [
      ["abbreviation", "SearchColumnStringField[]", [0, nil]],
      ["baseUnit", "SearchColumnBooleanField[]", [0, nil]],
      ["conversionRate", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInActive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["pluralAbbreviation", "SearchColumnStringField[]", [0, nil]],
      ["pluralName", "SearchColumnStringField[]", [0, nil]],
      ["unitName", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomListSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomListSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isOrdered", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["scriptId", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomListSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomListSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isOrdered", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["scriptId", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => PricingGroupSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PricingGroupSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PricingGroupSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PricingGroupSearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryNumberSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryNumberSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["expirationDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["inventoryNumber", "SearchStringField", [0, 1]],
      ["isOnHand", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["quantityAvailable", "SearchDoubleField", [0, 1]],
      ["quantityInTransit", "SearchDoubleField", [0, 1]],
      ["quantityOnHand", "SearchDoubleField", [0, 1]],
      ["quantityOnOrder", "SearchDoubleField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryNumberSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryNumberSearchRowBasic"),
    :schema_element => [
      ["expirationDate", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["inventoryNumber", "SearchColumnStringField[]", [0, nil]],
      ["isonhand", "SearchColumnBooleanField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["quantityavailable", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityintransit", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityonhand", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityonorder", "SearchColumnDoubleField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AppDefinitionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AppDefinitionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AppDefinitionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AppDefinitionSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => AppPackageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AppPackageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["appDefinition", "SearchMultiSelectField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["version", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AppPackageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AppPackageSearchRowBasic"),
    :schema_element => [
      ["appDefinition", "SearchColumnSelectField[]", [0, nil]],
      ["bundle", "SearchColumnSelectField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["packageFile", "SearchColumnSelectField[]", [0, nil]],
      ["version", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => NexusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NexusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["state", "SearchMultiSelectField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NexusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NexusSearchRowBasic"),
    :schema_element => [
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["state", "SearchColumnSelectField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => OtherNameCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OtherNameCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OtherNameCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OtherNameCategorySearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerMessageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerMessageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["preferred", "SearchBooleanField", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerMessageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerMessageSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["preferred", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemDemandPlanSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ItemDemandPlanSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["alternateSourceItem", "SearchMultiSelectField", [0, 1]],
      ["analysisDuration", "SearchLongField", [0, 1]],
      ["demandDate", "SearchDateField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["projectionDuration", "SearchLongField", [0, 1]],
      ["projectionInterval", "SearchMultiSelectField", [0, 1]],
      ["projectionMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["projectionStartDate", "SearchDateField", [0, 1]],
      ["quantity", "SearchDoubleField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["units", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemDemandPlanSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ItemDemandPlanSearchRowBasic"),
    :schema_element => [
      ["alternateSourceItem", "SearchColumnSelectField[]", [0, nil]],
      ["analysisDuration", "SearchColumnLongField[]", [0, nil]],
      ["demandDate", "SearchColumnDateField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["projectionDuration", "SearchColumnLongField[]", [0, nil]],
      ["projectionInterval", "SearchColumnStringField[]", [0, nil]],
      ["projectionMethod", "SearchColumnStringField[]", [0, nil]],
      ["projectionStartDate", "SearchColumnDateField[]", [0, nil]],
      ["quantity", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityUom", "SearchColumnDoubleField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["units", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CalendarEvent,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEvent"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["supportCase", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["period", "SOAP::SOAPLong", [0, 1]],
      ["frequency", "CalendarEventFrequency", [0, 1]],
      ["recurrenceDowMaskList", "RecurrenceDowMaskList", [0, 1]],
      ["recurrenceDow", "CalendarEventDow", [0, 1]],
      ["recurrenceDowim", "CalendarEventDowim", [0, 1]],
      ["seriesStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endByDate", "SOAP::SOAPDateTime", [0, 1]],
      ["noEndDate", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["recurrence", "SOAP::SOAPString", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["allDayEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "CalendarEventReminderType", [0, 1]],
      ["reminderMinutes", "CalendarEventReminderMinutes", [0, 1]],
      ["status", "CalendarEventStatus", [0, 1]],
      ["accessLevel", "CalendarEventAccessLevel", [0, 1]],
      ["organizer", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exclusionDateList", "ExclusionDateList", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["attendeeList", "CalendarEventAttendeeList", [0, 1]],
      ["resourceList", "CalendarEventResourceList", [0, 1]],
      ["timeItemList", "CalendarEventTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ExclusionDateList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ExclusionDateList"),
    :schema_element => [
      ["exclusionDate", "SOAP::SOAPDateTime[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => RecurrenceDowMaskList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "RecurrenceDowMaskList"),
    :schema_element => [
      ["recurrenceDowMask", "CalendarEventDow[]", [1, 7]]
    ]
  )

  EncodedRegistry.register(
    :class => CalendarEventAttendee,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendee"),
    :schema_element => [
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["attendee", "RecordRef", [0, 1]],
      ["response", "CalendarEventAttendeeResponse", [0, 1]],
      ["attendance", "CalendarEventAttendeeAttendance", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CalendarEventAttendeeList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeList"),
    :schema_element => [
      ["attendee", "CalendarEventAttendee[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CalendarEventResource,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventResource"),
    :schema_element => [
      ["resource", "RecordRef", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CalendarEventResourceList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventResourceList"),
    :schema_element => [
      ["resource", "CalendarEventResource[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CalendarEventSearch,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CalendarEventSearchBasic", [0, 1]],
      ["attendeeJoin", "EntitySearchBasic", [0, 1]],
      ["attendeeContactJoin", "ContactSearchBasic", [0, 1]],
      ["attendeeCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CalendarEventSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CalendarEventSearch", [0, 1]],
      ["columns", "CalendarEventSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CalendarEventSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CalendarEventSearchRowBasic", [0, 1]],
      ["attendeeJoin", "EntitySearchRowBasic", [0, 1]],
      ["attendeeContactJoin", "ContactSearchRowBasic", [0, 1]],
      ["attendeeCustomerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Task,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "Task"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["supportCase", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["milestone", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedTime", "Duration", [0, 1]],
      ["estimatedTimeOverride", "Duration", [0, 1]],
      ["actualTime", "Duration", [0, 1]],
      ["timeRemaining", "Duration", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["priority", "TaskPriority", [0, 1]],
      ["status", "TaskStatus", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "TaskReminderType", [0, 1]],
      ["reminderMinutes", "TaskReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["contactList", "TaskContactList", [0, 1]],
      ["timeItemList", "TaskTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TaskContact,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskContact"),
    :schema_element => [
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TaskContactList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskContactList"),
    :schema_element => [
      ["contact", "TaskContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => TaskSearch,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "TaskSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TaskSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "TaskSearch", [0, 1]],
      ["columns", "TaskSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TaskSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "TaskSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["companyCustomerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PhoneCall,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCall"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["supportCase", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["milestone", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["status", "PhoneCallStatus", [0, 1]],
      ["priority", "PhoneCallPriority", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "PhoneCallReminderType", [0, 1]],
      ["reminderMinutes", "PhoneCallReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["contactList", "PhoneCallContactList", [0, 1]],
      ["timeItemList", "PhoneCallTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PhoneCallContact,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallContact"),
    :schema_element => [
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PhoneCallContactList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallContactList"),
    :schema_element => [
      ["contact", "PhoneCallContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => PhoneCallSearch,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PhoneCallSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PhoneCallSearch", [0, 1]],
      ["columns", "PhoneCallSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PhoneCallSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PhoneCallSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["companyCustomerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ProjectTask,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTask"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["eventId", "RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["order", "RecordRef", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["priority", "RecordRef", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedWorkBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["constraintType", "ProjectTaskConstraintType", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["actualWork", "SOAP::SOAPDouble", [0, 1]],
      ["remainingWork", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["status", "ProjectTaskStatus", [0, 1]],
      ["assigneeList", "ProjectTaskAssigneeList", [0, 1]],
      ["predecessorList", "ProjectTaskPredecessorList", [0, 1]],
      ["timeItemList", "ProjectTaskTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ProjectTaskPredecessor,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessor"),
    :schema_element => [
      ["task", "RecordRef", [0, 1]],
      ["type", "ProjectTaskPredecessorPredecessorType", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ProjectTaskPredecessorList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessorList"),
    :schema_element => [
      ["projectTaskPredecessor", "ProjectTaskPredecessor[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ProjectTaskAssignee,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskAssignee"),
    :schema_element => [
      ["resource", "RecordRef", [0, 1]],
      ["units", "SOAP::SOAPDouble", [0, 1]],
      ["serviceItem", "RecordRef", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["unitCost", "SOAP::SOAPDouble", [0, 1]],
      ["unitPrice", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["price", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ProjectTaskAssigneeList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskAssigneeList"),
    :schema_element => [
      ["projectTaskAssignee", "ProjectTaskAssignee[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ProjectTaskSearch,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ProjectTaskSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["predecessorJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "ProjectTaskAssignmentSearchBasic", [0, 1]],
      ["successorJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ProjectTaskSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ProjectTaskSearch", [0, 1]],
      ["columns", "ProjectTaskSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ProjectTaskSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ProjectTaskSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["predecessorJoin", "ProjectTaskSearchRowBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "ProjectTaskAssignmentSearchRowBasic", [0, 1]],
      ["successorJoin", "ProjectTaskSearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PhoneCallTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallTimeItemList"),
    :schema_element => [
      ["timeItem", "TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CalendarEventTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventTimeItemList"),
    :schema_element => [
      ["timeItem", "TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => TaskTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskTimeItemList"),
    :schema_element => [
      ["timeItem", "TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ProjectTaskTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskTimeItemList"),
    :schema_element => [
      ["timeItem", "TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => Note,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "Note"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["noteType", "RecordRef", [0, 1]],
      ["direction", "NoteDirection", [0, 1]],
      ["noteDate", "SOAP::SOAPDateTime", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["activity", "RecordRef", [0, 1]],
      ["author", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["folder", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["media", "RecordRef", [0, 1]],
      ["record", "RecordRef", [0, 1]],
      ["recordType", "RecordRef", [0, 1]],
      ["topic", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NoteSearch,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "NoteSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NoteSearchBasic", [0, 1]],
      ["authorJoin", "EmployeeSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["campaignJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "EntitySearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["issueJoin", "IssueSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["solutionJoin", "SolutionSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NoteSearchAdvanced,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "NoteSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NoteSearch", [0, 1]],
      ["columns", "NoteSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NoteSearchRow,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "NoteSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NoteSearchRowBasic", [0, 1]],
      ["authorJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["campaignJoin", "CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["entityJoin", "EntitySearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["issueJoin", "IssueSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchRowBasic", [0, 1]],
      ["solutionJoin", "SolutionSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "VendorSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Message,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "Message"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["author", "RecordRef", [0, 1]],
      ["recipient", "RecordRef", [0, 1]],
      ["cc", "SOAP::SOAPString", [0, 1]],
      ["bcc", "SOAP::SOAPString", [0, 1]],
      ["messageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["recordTypeName", "SOAP::SOAPString", [0, 1]],
      ["subject", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["emailed", "SOAP::SOAPBoolean", [0, 1]],
      ["activity", "RecordRef", [0, 1]],
      ["compressAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["incoming", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["mediaItemList", "MessageMediaItemList", [0, 1]],
      ["dateTime", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => MessageMediaItemList,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "MessageMediaItemList"),
    :schema_element => [
      ["mediaItem", "C_File[]", [1, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => MessageSearch,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "MessageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "MessageSearchBasic", [0, 1]],
      ["attachmentsJoin", "FileSearchBasic", [0, 1]],
      ["authorJoin", "EntitySearchBasic", [0, 1]],
      ["campaignJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "EntitySearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["recipientJoin", "EntitySearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => MessageSearchAdvanced,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "MessageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "MessageSearch", [0, 1]],
      ["columns", "MessageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => MessageSearchRow,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "MessageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "MessageSearchRowBasic", [0, 1]],
      ["attachmentsJoin", "FileSearchRowBasic", [0, 1]],
      ["authorJoin", "EntitySearchRowBasic", [0, 1]],
      ["campaignJoin", "CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["entityJoin", "EntitySearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchRowBasic", [0, 1]],
      ["recipientJoin", "EntitySearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "VendorSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => C_File,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "File"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["attachFrom", "FileAttachFrom", [0, 1]],
      ["mediaTypeName", "SOAP::SOAPString", [0, 1]],
      ["fileType", "MediaType", [0, 1]],
      ["content", "SOAP::SOAPBase64", [0, 1]],
      ["folder", "RecordRef", [0, 1]],
      ["fileSize", "SOAP::SOAPDouble", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["mediaFile", "RecordRef", [0, 1]],
      ["textFileEncoding", "TextFileEncoding", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["encoding", "FileEncoding", [0, 1]],
      ["altTagCaption", "SOAP::SOAPString", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["bundleable", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["hideInBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["caption", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["siteDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["siteCategoryList", "FileSiteCategoryList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => FileSiteCategory,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileSiteCategory"),
    :schema_element => [
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["categoryDescription", "SOAP::SOAPString", [0, 1]],
      ["website", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FileSiteCategoryList,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileSiteCategoryList"),
    :schema_element => [
      ["siteCategory", "FileSiteCategory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => FileSearch,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "FileSearchBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FileSearchAdvanced,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "FileSearch", [0, 1]],
      ["columns", "FileSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => FileSearchRow,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "FileSearchRowBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Folder,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "Folder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["bundleable", "SOAP::SOAPBoolean", [0, 1]],
      ["hideInBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["group", "RecordRef", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => FolderSearch,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FolderSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "FolderSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => FolderSearchAdvanced,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FolderSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "FolderSearch", [0, 1]],
      ["columns", "FolderSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => FolderSearchRow,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FolderSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "FolderSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Subscriptions,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Subscriptions"),
    :schema_element => [
      ["subscribed", "SOAP::SOAPBoolean", [0, 1]],
      ["subscription", "RecordRef", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SubscriptionsList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "SubscriptionsList"),
    :schema_element => [
      ["subscriptions", "Subscriptions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => Contact,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Contact"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["categoryList", "CategoryList", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "RecordRef", [0, 1]],
      ["supervisorPhone", "SOAP::SOAPString", [0, 1]],
      ["assistant", "RecordRef", [0, 1]],
      ["assistantPhone", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["addressbookList", "ContactAddressbookList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CategoryList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CategoryList"),
    :schema_element => [
      ["category", "RecordRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactAddressbookList"),
    :schema_element => [
      ["addressbook", "ContactAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ContactSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ContactSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["customerPrimaryJoin", "CustomerSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["jobPrimaryJoin", "JobSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["partnerPrimaryJoin", "PartnerSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]],
      ["vendorPrimaryJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ContactSearch", [0, 1]],
      ["columns", "ContactSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ContactSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ContactSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["customerPrimaryJoin", "CustomerSearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["jobPrimaryJoin", "JobSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchRowBasic", [0, 1]],
      ["partnerPrimaryJoin", "PartnerSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "VendorSearchRowBasic", [0, 1]],
      ["vendorPrimaryJoin", "VendorSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Customer,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Customer"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["language", "Language", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["representingSubsidiary", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["territory", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["taxExempt", "SOAP::SOAPBoolean", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["creditHoldOverride", "CustomerCreditHoldOverride", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["daysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolUnbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolOverdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolDepositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolAging", "SOAP::SOAPDouble", [0, 1]],
      ["consolDaysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["priceLevel", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["prefCCProcessor", "RecordRef", [0, 1]],
      ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["taxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["resaleNumber", "SOAP::SOAPString", [0, 1]],
      ["aging", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reminderDays", "SOAP::SOAPLong", [0, 1]],
      ["shippingItem", "RecordRef", [0, 1]],
      ["thirdPartyAcct", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcode", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountry", "Country", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["accessRole", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["campaignCategory", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["receivablesAccount", "RecordRef", [0, 1]],
      ["webLead", "SOAP::SOAPString", [0, 1]],
      ["referrer", "SOAP::SOAPString", [0, 1]],
      ["keywords", "SOAP::SOAPString", [0, 1]],
      ["clickStream", "SOAP::SOAPString", [0, 1]],
      ["lastPageVisited", "SOAP::SOAPString", [0, 1]],
      ["visits", "SOAP::SOAPLong", [0, 1]],
      ["firstVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["lastVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "RecordRef", [0, 1]],
      ["stage", "CustomerStage", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["salesReadiness", "RecordRef", [0, 1]],
      ["salesTeamList", "CustomerSalesTeamList", [0, 1]],
      ["buyingReason", "RecordRef", [0, 1]],
      ["downloadList", "CustomerDownloadList", [0, 1]],
      ["buyingTimeFrame", "RecordRef", [0, 1]],
      ["addressbookList", "CustomerAddressbookList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["contactRolesList", "ContactAccessRolesList", [0, 1]],
      ["currencyList", "CustomerCurrencyList", [0, 1]],
      ["creditCardsList", "CustomerCreditCardsList", [0, 1]],
      ["partnersList", "CustomerPartnersList", [0, 1]],
      ["groupPricingList", "CustomerGroupPricingList", [0, 1]],
      ["itemPricingList", "CustomerItemPricingList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomerDownload,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerDownload"),
    :schema_element => [
      ["file", "RecordRef", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["remainingDownloads", "SOAP::SOAPLong", [0, 1]],
      ["expiration", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerDownloadList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerDownloadList"),
    :schema_element => [
      ["download", "CustomerDownload[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ContactAccessRoles,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactAccessRoles"),
    :schema_element => [
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["role", "RecordRef", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactAccessRolesList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactAccessRolesList"),
    :schema_element => [
      ["contactRoles", "ContactAccessRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerSalesTeam_,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerSalesTeamList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerSalesTeamList"),
    :schema_element => [
      ["salesTeam", "CustomerSalesTeam_[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerAddressbookList"),
    :schema_element => [
      ["addressbook", "CustomerAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerCreditCards,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerCreditCards"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["debitcardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["ccMemo", "SOAP::SOAPString", [0, 1]],
      ["validfrom", "SOAP::SOAPDateTime", [0, 1]],
      ["ccDefault", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerCreditCardsList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerCreditCardsList"),
    :schema_element => [
      ["creditCards", "CustomerCreditCards[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerGroupPricing,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerGroupPricing"),
    :schema_element => [
      ["group", "RecordRef", [0, 1]],
      ["level", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerGroupPricingList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerGroupPricingList"),
    :schema_element => [
      ["groupPricing", "CustomerGroupPricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerItemPricing,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerItemPricing"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["level", "RecordRef", [0, 1]],
      ["price", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerItemPricingList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerItemPricingList"),
    :schema_element => [
      ["itemPricing", "CustomerItemPricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerPartnersList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomerSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["hostedPageJoin", "FileSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["parentCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchBasic", [0, 1]],
      ["subCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["topLevelParentJoin", "CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["webSiteCategoryJoin", "SiteCategorySearchBasic", [0, 1]],
      ["webSiteItemJoin", "ItemSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CustomerSearch", [0, 1]],
      ["columns", "CustomerSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomerSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomerSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["hostedPageJoin", "FileSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["parentCustomerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchRowBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["subCustomerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]],
      ["topLevelParentJoin", "CustomerSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]],
      ["webSiteCategoryJoin", "SiteCategorySearchRowBasic", [0, 1]],
      ["webSiteItemJoin", "ItemSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerStatus,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["stage", "CustomerStatusStage", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeInLeadReports", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => Partner,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Partner"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["partnerCode", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["referringUrl", "SOAP::SOAPString", [0, 1]],
      ["roleList", "RecordRefList", [0, 1]],
      ["categoryList", "CategoryList", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["taxFractionUnit", "TaxFractionUnit", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["taxRounding", "TaxRounding", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["accessRole", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["subPartnerLogin", "SOAP::SOAPBoolean", [0, 1]],
      ["loginAs", "SOAP::SOAPString", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["contactRolesList", "ContactAccessRolesList", [0, 1]],
      ["promoCodeList", "PartnerPromoCodeList", [0, 1]],
      ["addressbookList", "PartnerAddressbookList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PartnerPromoCode,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerPromoCode"),
    :schema_element => [
      ["promoCode", "RecordRef", [0, 1]],
      ["discount", "SOAP::SOAPString", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PartnerPromoCodeList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerPromoCodeList"),
    :schema_element => [
      ["promoCode", "PartnerPromoCode[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => PartnerAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PartnerAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerAddressbookList"),
    :schema_element => [
      ["addressbook", "PartnerAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => PartnerSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PartnerSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PartnerSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PartnerSearch", [0, 1]],
      ["columns", "PartnerSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PartnerSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PartnerSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Vendor,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Vendor"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["representingSubsidiary", "RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["payablesAccount", "RecordRef", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["is1099Eligible", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResourceVend", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["workCalendar", "RecordRef", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["isAccountant", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["pricingScheduleList", "VendorPricingScheduleList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["addressbookList", "VendorAddressbookList", [0, 1]],
      ["rolesList", "VendorRolesList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => VendorPricingSchedule,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorPricingSchedule"),
    :schema_element => [
      ["scheduleName", "SOAP::SOAPString", [0, 1]],
      ["scheduleDiscount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorPricingScheduleList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorPricingScheduleList"),
    :schema_element => [
      ["pricingSchedule", "VendorPricingSchedule[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorAddressbookList"),
    :schema_element => [
      ["addressbook", "VendorAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorRoles,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorRoles"),
    :schema_element => [
      ["selectedRole", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorRolesList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorRolesList"),
    :schema_element => [
      ["roles", "VendorRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "VendorSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "VendorSearch", [0, 1]],
      ["columns", "VendorSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => VendorSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "VendorSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EntityGroup,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["groupName", "SOAP::SOAPString", [0, 1]],
      ["groupType", "EntityGroupType", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["groupOwner", "RecordRef", [0, 1]],
      ["isSavedSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["parentGroupType", "EntityGroupType", [0, 1]],
      ["savedSearch", "RecordRef", [0, 1]],
      ["isSalesTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["restrictionGroup", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["isFunctionalTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["issueRole", "RecordRef", [0, 1]],
      ["calendarName", "SOAP::SOAPString", [0, 1]],
      ["calendarStartTime", "EntityGroupDailyTime", [0, 1]],
      ["calendarEndTime", "EntityGroupDailyTime", [0, 1]],
      ["calendarDefaultView", "EntityGroupDefView", [0, 1]],
      ["calendarPeriod", "EntityGroupPeriodSize", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => EntityGroupSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "EntityGroupSearchBasic", [0, 1]],
      ["groupMemberJoin", "EntitySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EntityGroupSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "EntityGroupSearch", [0, 1]],
      ["columns", "EntityGroupSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => EntityGroupSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "EntityGroupSearchRowBasic", [0, 1]],
      ["groupMemberJoin", "EntitySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Job,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Job"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["workplace", "RecordRef", [0, 1]],
      ["language", "RecordRef", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["fxRate", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["calculatedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["calculatedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["lastBaselineDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobType", "RecordRef", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedTime", "Duration", [0, 1]],
      ["estimatedTimeOverride", "Duration", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["jobBillingType", "JobBillingType", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["jobItem", "RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["actualTime", "Duration", [0, 1]],
      ["allowTime", "SOAP::SOAPBoolean", [0, 1]],
      ["timeRemaining", "Duration", [0, 1]],
      ["limitTimeToAssignees", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedLaborCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedLaborCostBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["estimateRevRecTemplate", "RecordRef", [0, 1]],
      ["estimatedLaborRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["allowAllResourcesForTasks", "SOAP::SOAPBoolean", [0, 1]],
      ["jobPrice", "SOAP::SOAPDouble", [0, 1]],
      ["isUtilizedTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductiveTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isExemptTime", "SOAP::SOAPBoolean", [0, 1]],
      ["materializeTime", "SOAP::SOAPBoolean", [0, 1]],
      ["allowExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["allocatePayrollExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["includeCrmTasksInTotals", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["jobResourcesList", "JobResourcesList", [0, 1]],
      ["addressbookList", "JobAddressbookList", [0, 1]],
      ["milestonesList", "JobMilestonesList", [0, 1]],
      ["creditCardsList", "JobCreditCardsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => JobAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobAddressbookList"),
    :schema_element => [
      ["addressbook", "JobAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => JobResources,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobResources"),
    :schema_element => [
      ["jobResource", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["role", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobResourcesList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobResourcesList"),
    :schema_element => [
      ["jobResources", "JobResources[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => JobMilestones,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobMilestones"),
    :schema_element => [
      ["milestoneName", "SOAP::SOAPString", [0, 1]],
      ["milestoneOrder", "SOAP::SOAPString", [0, 1]],
      ["milestoneEstComplete", "SOAP::SOAPDateTime", [0, 1]],
      ["milestoneCompleted", "SOAP::SOAPBoolean", [0, 1]],
      ["milestoneComments", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobMilestonesList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobMilestonesList"),
    :schema_element => [
      ["milestones", "JobMilestones[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => JobCreditCards,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobCreditCards"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["ccMemo", "SOAP::SOAPString", [0, 1]],
      ["ccDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobCreditCardsList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobCreditCardsList"),
    :schema_element => [
      ["creditCards", "JobCreditCards[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => JobSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "JobSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["projectTaskJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "JobSearch", [0, 1]],
      ["columns", "JobSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => JobSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "JobSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["projectTaskJoin", "ProjectTaskSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobType,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => JobStatus,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomerStatusSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStatusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomerStatusSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerStatusSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStatusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CustomerStatusSearch", [0, 1]],
      ["columns", "CustomerStatusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomerStatusSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStatusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomerStatusSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobStatusSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobStatusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "JobStatusSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobStatusSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobStatusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "JobStatusSearch", [0, 1]],
      ["columns", "JobStatusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => JobStatusSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobStatusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "JobStatusSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobTypeSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "JobTypeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JobTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "JobTypeSearch", [0, 1]],
      ["columns", "JobTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => JobTypeSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "JobTypeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OriginatingLeadSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "OriginatingLeadSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "OriginatingLeadSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OriginatingLeadSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "OriginatingLeadSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "OriginatingLeadSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerCurrency,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerCurrency"),
    :schema_element => [
      ["currency", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["consolBalance", "SOAP::SOAPDouble", [0, 1]],
      ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolDepositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolOverdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolUnbilledOrders", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerCurrencyList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerCurrencyList"),
    :schema_element => [
      ["currency", "CustomerCurrency[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SupportCase,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCase"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["escalationMessage", "SOAP::SOAPString", [0, 1]],
      ["lastReopenedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["incomingMessage", "SOAP::SOAPString", [0, 1]],
      ["insertSolution", "RecordRef", [0, 1]],
      ["outgoingMessage", "SOAP::SOAPString", [0, 1]],
      ["searchSolution", "SOAP::SOAPString", [0, 1]],
      ["emailForm", "SOAP::SOAPBoolean", [0, 1]],
      ["newSolutionFromMsg", "SOAP::SOAPString", [0, 1]],
      ["internalOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["caseNumber", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastMessageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["product", "RecordRef", [0, 1]],
      ["v_module", ["RecordRef", XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["serialNumber", "RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["issue", "RecordRef", [0, 1]],
      ["status", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["priority", "RecordRef", [0, 1]],
      ["origin", "RecordRef", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["helpDesk", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "EmailEmployeesList", [0, 1]],
      ["escalateToList", "SupportCaseEscalateToList", [0, 1]],
      ["timeItemList", "SupportCaseTimeItemList", [0, 1]],
      ["solutionsList", "SupportCaseSolutionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => EmailEmployeesList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "EmailEmployeesList"),
    :schema_element => [
      ["emailEmployees", "RecordRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => SupportCaseEscalateTo,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseEscalateTo"),
    :schema_element => [
      ["escalatee", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SupportCaseEscalateToList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseEscalateToList"),
    :schema_element => [
      ["escalateTo", "SupportCaseEscalateTo[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SupportCaseSolutions,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseSolutions"),
    :schema_element => [
      ["solution", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["dateApplied", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SupportCaseSolutionsList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseSolutionsList"),
    :schema_element => [
      ["solutions", "SupportCaseSolutions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SupportCaseTimeItemList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseTimeItemList"),
    :schema_element => [
      ["timeItem", "TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SupportCaseSearch,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["issueJoin", "IssueSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SupportCaseSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "SupportCaseSearch", [0, 1]],
      ["columns", "SupportCaseSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SupportCaseSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["issueJoin", "IssueSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SupportCaseStatus,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["stage", "SupportCaseStatusStage", [0, 1]],
      ["caseOnHold", "SOAP::SOAPBoolean", [0, 1]],
      ["autoCloseCase", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SupportCaseType,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SupportCaseOrigin,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseOrigin"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SupportCaseIssue,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseIssue"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SupportCasePriority,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCasePriority"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => Solution,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "Solution"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["solutionCode", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["status", "SolutionStatus", [0, 1]],
      ["displayOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["topicsList", "SolutionTopicsList", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["solutionsList", "SolutionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SolutionTopics,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionTopics"),
    :schema_element => [
      ["topic", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SolutionTopicsList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionTopicsList"),
    :schema_element => [
      ["topics", "SolutionTopics[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => Solutions,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "Solutions"),
    :schema_element => [
      ["solution", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SolutionsList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionsList"),
    :schema_element => [
      ["solutions", "Solutions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SolutionSearch,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "SolutionSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["relatedSolutionJoin", "SolutionSearchBasic", [0, 1]],
      ["topicJoin", "TopicSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SolutionSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "SolutionSearch", [0, 1]],
      ["columns", "SolutionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SolutionSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "SolutionSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["relatedSolutionJoin", "SolutionSearchRowBasic", [0, 1]],
      ["topicJoin", "TopicSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Topic,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "Topic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["parentTopic", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["solutionList", "TopicSolutionList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TopicSolution,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "TopicSolution"),
    :schema_element => [
      ["solution", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TopicSolutionList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "TopicSolutionList"),
    :schema_element => [
      ["solution", "TopicSolution[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => TopicSearch,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "TopicSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "TopicSearchBasic", [0, 1]],
      ["solutionJoin", "SolutionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TopicSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "TopicSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "TopicSearch", [0, 1]],
      ["columns", "TopicSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TopicSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "TopicSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "TopicSearchRowBasic", [0, 1]],
      ["solutionJoin", "SolutionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Issue,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "Issue"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["issueNumber", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueType", "RecordRef", [0, 1]],
      ["product", "RecordRef", [0, 1]],
      ["v_module", ["RecordRef", XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["productTeam", "RecordRef", [0, 1]],
      ["source", "RecordRef", [0, 1]],
      ["reportedBy", "RecordRef", [0, 1]],
      ["reproduce", "RecordRef", [0, 1]],
      ["duplicateOf", "RecordRef", [0, 1]],
      ["severity", "RecordRef", [0, 1]],
      ["priority", "RecordRef", [0, 1]],
      ["isShowStopper", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["reviewer", "RecordRef", [0, 1]],
      ["isReviewed", "SOAP::SOAPBoolean", [0, 1]],
      ["issueStatus", "RecordRef", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueTagsList", "RecordRefList", [0, 1]],
      ["issueAbstract", "SOAP::SOAPString", [0, 1]],
      ["newDetails", "SOAP::SOAPString", [0, 1]],
      ["isOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["trackCode", "IssueTrackCode", [0, 1]],
      ["emailAssignee", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "EmailEmployeesList", [0, 1]],
      ["emailCellsList", "RecordRefList", [0, 1]],
      ["externalAbstract", "SOAP::SOAPString", [0, 1]],
      ["externalDetails", "SOAP::SOAPString", [0, 1]],
      ["brokenInVersionList", "IssueVersionList", [0, 1]],
      ["targetVersionList", "IssueVersionList", [0, 1]],
      ["fixedInVersionList", "IssueVersionList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => IssueVersion,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "IssueVersion"),
    :schema_element => [
      ["primary", "SOAP::SOAPBoolean", [0, 1]],
      ["version", "RecordRef", [0, 1]],
      ["build", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => IssueVersionList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "IssueVersionList"),
    :schema_element => [
      ["issueVersion", "IssueVersion[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => IssueSearch,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "IssueSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "IssueSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => IssueSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "IssueSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "IssueSearch", [0, 1]],
      ["columns", "IssueSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => IssueSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "IssueSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "IssueSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ClassTranslation,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ClassTranslation"),
    :schema_element => [
      ["locale", "SOAP::SOAPString", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ClassTranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ClassTranslationList"),
    :schema_element => [
      ["classTranslation", "ClassTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ContactCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["private", "SOAP::SOAPBoolean", [0, 1]],
      ["sync", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomerCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SalesRole,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesRole"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PriceLevel,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PriceLevel"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["discountpct", "SOAP::SOAPDouble", [0, 1]],
      ["updateExistingPrices", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => WinLossReason,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "WinLossReason"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => Term,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Term"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["dateDriven", "SOAP::SOAPBoolean", [0, 1]],
      ["daysUntilNetDue", "SOAP::SOAPLong", [0, 1]],
      ["discountPercent", "SOAP::SOAPDouble", [0, 1]],
      ["daysUntilExpiry", "SOAP::SOAPLong", [0, 1]],
      ["dayOfMonthNetDue", "SOAP::SOAPLong", [0, 1]],
      ["dueNextMonthIfWithinDays", "SOAP::SOAPLong", [0, 1]],
      ["discountPercentDateDriven", "SOAP::SOAPDouble", [0, 1]],
      ["dayDiscountExpires", "SOAP::SOAPLong", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NoteType,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NoteType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PaymentMethod,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentMethod"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "SOAP::SOAPBoolean", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isDebitCard", "SOAP::SOAPBoolean", [0, 1]],
      ["merchantAccountsList", "RecordRefList", [0, 1]],
      ["payPalEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["expressCheckoutArrangement", "SOAP::SOAPString", [0, 1]],
      ["useExpressCheckout", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => LeadSource,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LeadSource"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => Price,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Price"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PriceList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PriceList"),
    :schema_element => [
      ["price", "Price[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Pricing,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Pricing"),
    :schema_element => [
      ["currency", "RecordRef", [0, 1]],
      ["priceLevel", "RecordRef", [0, 1]],
      ["discount", "SOAP::SOAPDouble", [0, 1]],
      ["priceList", "PriceList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PricingMatrix,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PricingMatrix"),
    :schema_element => [
      ["pricing", "Pricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => Rate,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Rate"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble", [0, 1]],
      ["priceLevel", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RateList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RateList"),
    :schema_element => [
      ["rate", "Rate[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => BillingRates,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BillingRates"),
    :schema_element => [
      ["currency", "RecordRef", [0, 1]],
      ["billingClass", "RecordRef", [0, 1]],
      ["rateList", "RateList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BillingRatesMatrix,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BillingRatesMatrix"),
    :schema_element => [
      ["billingRates", "BillingRates[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => Translation,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Translation"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TranslationList"),
    :schema_element => [
      ["translation", "Translation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemOptionsList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemOptionsList"),
    :schema_element => [
      ["itemOptions", "RecordRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemVendor,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemVendor"),
    :schema_element => [
      ["vendor", "RecordRef", [0, 1]],
      ["vendorCode", "SOAP::SOAPString", [0, 1]],
      ["vendorCurrencyName", "SOAP::SOAPString", [0, 1]],
      ["purchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["preferredVendor", "SOAP::SOAPBoolean", [0, 1]],
      ["schedule", "RecordRef", [0, 1]],
      ["subsidiary", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemVendorList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemVendorList"),
    :schema_element => [
      ["itemVendor", "ItemVendor[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SiteCategory_,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SiteCategory"),
    :schema_element => [
      ["website", "RecordRef", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["categoryDescription", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SiteCategoryList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SiteCategoryList"),
    :schema_element => [
      ["siteCategory", "SiteCategory_[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ProductFeedList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ProductFeedList"),
    :schema_element => [
      ["productFeed", "ItemProductFeed[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemMember,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemMember"),
    :schema_element => [
      ["memberDescr", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["memberUnit", "SOAP::SOAPString", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["taxcode", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["taxrate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemMemberList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemMemberList"),
    :schema_element => [
      ["itemMember", "ItemMember[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["dateConvertedToInv", "SOAP::SOAPDateTime", [0, 1]],
      ["originalItemType", "ItemType", [0, 1]],
      ["originalItemSubtype", "ItemSubType", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["costingMethod", "ItemCostingMethod", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommittedUnits", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["quantityAvailableUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["quantityOnOrderUnits", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["locationsList", "InventoryItemLocationsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => MatrixOptionList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "MatrixOptionList"),
    :schema_element => [
      ["matrixOption", "SelectCustomFieldRef[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryItemBinNumber,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryItemBinNumber"),
    :schema_element => [
      ["binNumber", "RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPString", [0, 1]],
      ["onHandAvail", "SOAP::SOAPString", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["preferredBin", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryItemBinNumberList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryItemBinNumberList"),
    :schema_element => [
      ["binNumber", "InventoryItemBinNumber[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "RecordRef", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryItemLocationsList"),
    :schema_element => [
      ["locations", "InventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => PresentationItemList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PresentationItemList"),
    :schema_element => [
      ["presentationItem", "PresentationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => DescriptionItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DescriptionItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => DiscountItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DiscountItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => DownloadItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DownloadItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["numOfAllowedDownloads", "SOAP::SOAPLong", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["immediateDownload", "SOAP::SOAPBoolean", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => MarkupItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "MarkupItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PaymentItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SubtotalItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubtotalItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NonInventoryPurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NonInventoryPurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NonInventorySaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NonInventorySaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NonInventoryResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NonInventoryResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => OtherChargeResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherChargeResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => OtherChargePurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherChargePurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ServiceResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServiceResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["billingRatesMatrix", "BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ServicePurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServicePurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ServiceSaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServiceSaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["billingRatesMatrix", "BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => OtherChargeSaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherChargeSaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => Currency,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Currency"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["symbol", "SOAP::SOAPString", [0, 1]],
      ["isBaseCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["locale", "CurrencyLocale", [0, 1]],
      ["formatSample", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["fxRateUpdateTimezone", "CurrencyFxRateUpdateTimezone", [0, 1]],
      ["inclInFxRateUpdates", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyPrecision", "CurrencyCurrencyPrecision", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ExpenseCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ExpenseCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["expenseAcct", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => Account,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Account"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["acctType", "AccountType", [0, 1]],
      ["acctNumber", "SOAP::SOAPString", [0, 1]],
      ["acctName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPString", [0, 1]],
      ["generalRate", "ConsolidatedRate", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["cashFlowRate", "ConsolidatedRate", [0, 1]],
      ["billableExpensesAcct", "RecordRef", [0, 1]],
      ["deferralAcct", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["curDocNum", "SOAP::SOAPLong", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["inventory", "SOAP::SOAPBoolean", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["category1099misc", "RecordRef", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revalue", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "AccountTranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AccountTranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountTranslationList"),
    :schema_element => [
      ["translation", "ClassTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => AccountSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "AccountSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AccountSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "AccountSearch", [0, 1]],
      ["columns", "AccountSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AccountSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "AccountSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Department,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Department"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => DepartmentSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DepartmentSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "DepartmentSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => DepartmentSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DepartmentSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "DepartmentSearch", [0, 1]],
      ["columns", "DepartmentSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => DepartmentSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DepartmentSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "DepartmentSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Classification,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Classification"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ClassificationSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ClassificationSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ClassificationSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ClassificationSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ClassificationSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ClassificationSearch", [0, 1]],
      ["columns", "ClassificationSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ClassificationSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ClassificationSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ClassificationSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Location,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Location"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["logo", "RecordRef", [0, 1]],
      ["makeInventoryAvailable", "SOAP::SOAPBoolean", [0, 1]],
      ["makeInventoryAvailableStore", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => LocationSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LocationSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "LocationSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => LocationSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LocationSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "LocationSearch", [0, 1]],
      ["columns", "LocationSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => LocationSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LocationSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "LocationSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UnitsType,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["uomList", "UnitsTypeUomList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => UnitsTypeUom,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsTypeUom"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["unitName", "SOAP::SOAPString", [0, 1]],
      ["pluralName", "SOAP::SOAPString", [0, 1]],
      ["abbreviation", "SOAP::SOAPString", [0, 1]],
      ["pluralAbbreviation", "SOAP::SOAPString", [0, 1]],
      ["conversionRate", "SOAP::SOAPDouble", [0, 1]],
      ["baseUnit", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UnitsTypeUomList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsTypeUomList"),
    :schema_element => [
      ["uom", "UnitsTypeUom[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ItemSearchBasic", [0, 1]],
      ["binNumberJoin", "BinSearchBasic", [0, 1]],
      ["correlatedItemJoin", "ItemSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "InventoryDetailSearchBasic", [0, 1]],
      ["inventoryLocationJoin", "LocationSearchBasic", [0, 1]],
      ["inventoryNumberJoin", "InventoryNumberSearchBasic", [0, 1]],
      ["memberItemJoin", "ItemSearchBasic", [0, 1]],
      ["parentJoin", "ItemSearchBasic", [0, 1]],
      ["preferredLocationJoin", "LocationSearchBasic", [0, 1]],
      ["preferredVendorJoin", "VendorSearchBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ItemSearch", [0, 1]],
      ["columns", "ItemSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ItemSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ItemSearchRowBasic", [0, 1]],
      ["binNumberJoin", "BinSearchRowBasic", [0, 1]],
      ["correlatedItemJoin", "ItemSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["inventoryDetailJoin", "InventoryDetailSearchRowBasic", [0, 1]],
      ["inventoryLocationJoin", "LocationSearchRowBasic", [0, 1]],
      ["inventoryNumberJoin", "InventoryNumberSearchRowBasic", [0, 1]],
      ["memberItemJoin", "ItemSearchRowBasic", [0, 1]],
      ["parentJoin", "ItemSearchRowBasic", [0, 1]],
      ["preferredLocationJoin", "LocationSearchRowBasic", [0, 1]],
      ["preferredVendorJoin", "VendorSearchRowBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "VendorSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactRole,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactRole"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => Bin,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Bin"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["binNumber", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => BinSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BinSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "BinSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BinSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BinSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "BinSearch", [0, 1]],
      ["columns", "BinSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => BinSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BinSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "BinSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SalesTaxItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesTaxItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["taxType", "RecordRef", [0, 1]],
      ["taxAgency", "RecordRef", [0, 1]],
      ["purchaseAccount", "RecordRef", [0, 1]],
      ["saleAccount", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["validUntil", "SOAP::SOAPDateTime", [0, 1]],
      ["eccode", "SOAP::SOAPBoolean", [0, 1]],
      ["reverseCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["exempt", "SOAP::SOAPBoolean", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeFromTaxReports", "SOAP::SOAPBoolean", [0, 1]],
      ["available", "SalesTaxItemAvailable", [0, 1]],
      ["export", "SOAP::SOAPBoolean", [0, 1]],
      ["taxAccount", "RecordRef", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TaxGroup,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["taxitem1", "RecordRef", [0, 1]],
      ["unitprice1", "SOAP::SOAPString", [0, 1]],
      ["taxitem2", "RecordRef", [0, 1]],
      ["unitprice2", "SOAP::SOAPString", [0, 1]],
      ["piggyback", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["taxType", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItemList", "TaxGroupTaxItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TaxGroupTaxItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxGroupTaxItem"),
    :schema_element => [
      ["taxName", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["basis", "SOAP::SOAPDouble", [0, 1]],
      ["taxType", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TaxGroupTaxItemList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxGroupTaxItemList"),
    :schema_element => [
      ["taxItem", "TaxGroupTaxItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => TaxType,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nexusesTaxList", "TaxTypeNexusesTaxList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TaxTypeNexusesTax,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxTypeNexusesTax"),
    :schema_element => [
      ["nexus", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["saleTaxAcct", "RecordRef", [0, 1]],
      ["purchTaxAcct", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TaxTypeNexusesTaxList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxTypeNexusesTaxList"),
    :schema_element => [
      ["nexusesTax", "TaxTypeNexusesTax[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SerializedInventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedInventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["numbersList", "SerializedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["locationsList", "SerializedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SerializedInventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "RecordRef", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SerializedInventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocationsList"),
    :schema_element => [
      ["locations", "SerializedInventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SerializedInventoryItemNumbers,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbers"),
    :schema_element => [
      ["serialNumber", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SerializedInventoryItemNumbersList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbersList"),
    :schema_element => [
      ["numbers", "SerializedInventoryItemNumbers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => LotNumberedInventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["numbersList", "LotNumberedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["locationsList", "LotNumberedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => LotNumberedInventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "RecordRef", [0, 1]],
      ["locationlookup", "RecordRef", [0, 1]],
      ["location_display", "SOAP::SOAPString", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => LotNumberedInventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocationsList"),
    :schema_element => [
      ["locations", "LotNumberedInventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => LotNumberedInventoryItemNumbers,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbers"),
    :schema_element => [
      ["serialNumber", "RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => LotNumberedInventoryItemNumbersList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbersList"),
    :schema_element => [
      ["numbers", "LotNumberedInventoryItemNumbers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => GiftCertificateItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["liabilityAccount", "RecordRef", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["authCodesList", "GiftCertificateItemAuthCodesList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => GiftCertificateItemAuthCodes,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodes"),
    :schema_element => [
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["used", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GiftCertificateItemAuthCodesList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodesList"),
    :schema_element => [
      ["authCodes", "GiftCertificateItemAuthCodes[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => Subsidiary,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Subsidiary"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["showSubsidiaryName", "SOAP::SOAPBoolean", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["logo", "RecordRef", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["pageLogo", "RecordRef", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddr", "SOAP::SOAPString", [0, 1]],
      ["returnAddr", "SOAP::SOAPString", [0, 1]],
      ["companyNameForSupportMessages", "SOAP::SOAPString", [0, 1]],
      ["mainSupportEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["anonymousCustomerInboundEmail", "RecordRef", [0, 1]],
      ["anonymousCustomerOnlineForms", "RecordRef", [0, 1]],
      ["caseCreationTemplate", "RecordRef", [0, 1]],
      ["caseUpdateTemplate", "RecordRef", [0, 1]],
      ["caseAutomaticClosureTemplate", "RecordRef", [0, 1]],
      ["caseAssignmentTemplate", "RecordRef", [0, 1]],
      ["employeeCaseUpdateTemplate", "RecordRef", [0, 1]],
      ["caseCopyEmployeeTemplate", "RecordRef", [0, 1]],
      ["caseEscalationTemplate", "RecordRef", [0, 1]],
      ["returnAddress1", "SOAP::SOAPString", [0, 1]],
      ["returnAddress2", "SOAP::SOAPString", [0, 1]],
      ["returnCity", "SOAP::SOAPString", [0, 1]],
      ["returnState", "SOAP::SOAPString", [0, 1]],
      ["returnCountry", "Country", [0, 1]],
      ["returnZip", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["isElimination", "SOAP::SOAPBoolean", [0, 1]],
      ["allowPayroll", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["edition", "SOAP::SOAPString", [0, 1]],
      ["federalIdNumber", "SOAP::SOAPString", [0, 1]],
      ["addrLanguage", "SOAP::SOAPString", [0, 1]],
      ["nonConsol", "SOAP::SOAPString", [0, 1]],
      ["consol", "SOAP::SOAPString", [0, 1]],
      ["shipAddress1", "SOAP::SOAPString", [0, 1]],
      ["shipAddress2", "SOAP::SOAPString", [0, 1]],
      ["shipCity", "SOAP::SOAPString", [0, 1]],
      ["shipState", "SOAP::SOAPString", [0, 1]],
      ["shipCountry", "Country", [0, 1]],
      ["shipZip", "SOAP::SOAPString", [0, 1]],
      ["state1TaxNumber", "SOAP::SOAPString", [0, 1]],
      ["ssnOrTin", "SOAP::SOAPString", [0, 1]],
      ["interCoAccount", "RecordRef", [0, 1]],
      ["nexusList", "SubsidiaryNexusList", [0, 1]],
      ["checkLayout", "RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SubsidiaryNexus,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubsidiaryNexus"),
    :schema_element => [
      ["nexusId", "RecordRef", [0, 1]],
      ["country", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SubsidiaryNexusList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubsidiaryNexusList"),
    :schema_element => [
      ["nexus", "SubsidiaryNexus[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SubsidiarySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubsidiarySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "SubsidiarySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SubsidiarySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubsidiarySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "SubsidiarySearch", [0, 1]],
      ["columns", "SubsidiarySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SubsidiarySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubsidiarySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "SubsidiarySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GiftCertificate,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificate"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["giftCertCode", "SOAP::SOAPString", [0, 1]],
      ["sender", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => GiftCertificateSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "GiftCertificateSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GiftCertificateSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "GiftCertificateSearch", [0, 1]],
      ["columns", "GiftCertificateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => GiftCertificateSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "GiftCertificateSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PartnerCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PartnerCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => VendorCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "VendorCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isTaxAgency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => KitItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "KitItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethod", "ItemCostingMethod", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["prodQtyVarianceAcct", "RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["locationsList", "InventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SerializedAssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedAssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["locationsList", "SerializedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "SerializedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => LotNumberedAssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedAssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["locationsList", "LotNumberedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "LotNumberedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ServiceItemTaskTemplates,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServiceItemTaskTemplates"),
    :schema_element => [
      ["taskName", "SOAP::SOAPString", [0, 1]],
      ["taskStartOffset", "SOAP::SOAPLong", [0, 1]],
      ["taskDuration", "Duration", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ServiceItemTaskTemplatesList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServiceItemTaskTemplatesList"),
    :schema_element => [
      ["taskTemplates", "ServiceItemTaskTemplates[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => State,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "State"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "Country", [0, 1]],
      ["fullName", "SOAP::SOAPString", [0, 1]],
      ["shortname", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AccountingPeriod,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountingPeriod"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["periodName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["closedOnDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isAdjust", "SOAP::SOAPBoolean", [0, 1]],
      ["isQuarter", "SOAP::SOAPBoolean", [0, 1]],
      ["isYear", "SOAP::SOAPBoolean", [0, 1]],
      ["closed", "SOAP::SOAPBoolean", [0, 1]],
      ["apLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["arLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allowNonGLChanges", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => BudgetCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BudgetCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["budgetType", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AccountingPeriodSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountingPeriodSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "AccountingPeriodSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AccountingPeriodSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountingPeriodSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "AccountingPeriodSearch", [0, 1]],
      ["columns", "AccountingPeriodSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AccountingPeriodSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountingPeriodSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "AccountingPeriodSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ContactCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ContactCategorySearch", [0, 1]],
      ["columns", "ContactCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ContactCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ContactCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactRoleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactRoleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ContactRoleSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ContactRoleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactRoleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ContactRoleSearch", [0, 1]],
      ["columns", "ContactRoleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ContactRoleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactRoleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ContactRoleSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomerCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CustomerCategorySearch", [0, 1]],
      ["columns", "CustomerCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomerCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomerCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ExpenseCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ExpenseCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ExpenseCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ExpenseCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ExpenseCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ExpenseCategorySearch", [0, 1]],
      ["columns", "ExpenseCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ExpenseCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ExpenseCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ExpenseCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NoteTypeSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NoteTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NoteTypeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NoteTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NoteTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NoteTypeSearch", [0, 1]],
      ["columns", "NoteTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NoteTypeSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NoteTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NoteTypeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PartnerCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PartnerCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PartnerCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PartnerCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PartnerCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PartnerCategorySearch", [0, 1]],
      ["columns", "PartnerCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PartnerCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PartnerCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PartnerCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PaymentMethodSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentMethodSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PaymentMethodSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PaymentMethodSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentMethodSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PaymentMethodSearch", [0, 1]],
      ["columns", "PaymentMethodSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PaymentMethodSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentMethodSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PaymentMethodSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PriceLevelSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PriceLevelSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PriceLevelSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PriceLevelSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PriceLevelSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PriceLevelSearch", [0, 1]],
      ["columns", "PriceLevelSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PriceLevelSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PriceLevelSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PriceLevelSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SalesRoleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesRoleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "SalesRoleSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SalesRoleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesRoleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "SalesRoleSearch", [0, 1]],
      ["columns", "SalesRoleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SalesRoleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesRoleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "SalesRoleSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TermSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TermSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "TermSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TermSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TermSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "TermSearch", [0, 1]],
      ["columns", "TermSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TermSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TermSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "TermSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "VendorCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "VendorCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "VendorCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "VendorCategorySearch", [0, 1]],
      ["columns", "VendorCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => VendorCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "VendorCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "VendorCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => WinLossReasonSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "WinLossReasonSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "WinLossReasonSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => WinLossReasonSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "WinLossReasonSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "WinLossReasonSearch", [0, 1]],
      ["columns", "WinLossReasonSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => WinLossReasonSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "WinLossReasonSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "WinLossReasonSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UnitsTypeSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "UnitsTypeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => UnitsTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "UnitsTypeSearch", [0, 1]],
      ["columns", "UnitsTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => UnitsTypeSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "UnitsTypeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PricingGroup,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PricingGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PricingGroupSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PricingGroupSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PricingGroupSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PricingGroupSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PricingGroupSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PricingGroupSearch", [0, 1]],
      ["columns", "PricingGroupSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PricingGroupSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PricingGroupSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PricingGroupSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryNumber,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumber"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["inventoryNumber", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["units", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["locationsList", "InventoryNumberLocationsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => InventoryNumberLocations,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumberLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityInTransit", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryNumberLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumberLocationsList"),
    :schema_element => [
      ["locations", "InventoryNumberLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InventoryNumberSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumberSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "InventoryNumberSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryNumberSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumberSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "InventoryNumberSearch", [0, 1]],
      ["columns", "InventoryNumberSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => InventoryNumberSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumberSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "InventoryNumberSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RevRecSchedule,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecSchedule"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "RevRecScheduleRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => RevRecScheduleRecurrence,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrence"),
    :schema_element => [
      ["incomeaccount", "RecordRef", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["recamount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RevRecScheduleRecurrenceList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrenceList"),
    :schema_element => [
      ["revRecScheduleRecurrence", "RevRecScheduleRecurrence[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => RevRecTemplate,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplate"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "RevRecTemplateRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => RevRecTemplateRecurrence,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplateRecurrence"),
    :schema_element => [
      ["incomeaccount", "RecordRef", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["recamount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RevRecTemplateRecurrenceList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplateRecurrenceList"),
    :schema_element => [
      ["revRecTemplateRecurrence", "RevRecTemplateRecurrence[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => RevRecScheduleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "RevRecScheduleSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RevRecScheduleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "RevRecScheduleSearch", [0, 1]],
      ["columns", "RevRecScheduleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => RevRecScheduleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "RevRecScheduleSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RevRecTemplateSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "RevRecTemplateSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RevRecTemplateSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "RevRecTemplateSearch", [0, 1]],
      ["columns", "RevRecTemplateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => RevRecTemplateSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "RevRecTemplateSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CostCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CostCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["itemCostType", "CostCategoryItemCostType", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => Nexus,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Nexus"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "Country", [0, 1]],
      ["state", "RecordRef", [0, 1]],
      ["taxAgency", "RecordRef", [0, 1]],
      ["taxAgencyPst", "RecordRef", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NexusSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NexusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NexusSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => NexusSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NexusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NexusSearch", [0, 1]],
      ["columns", "NexusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => NexusSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NexusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NexusSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerMessage,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerMessage"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => OtherNameCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherNameCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => OtherNameCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherNameCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "OtherNameCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OtherNameCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherNameCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "OtherNameCategorySearch", [0, 1]],
      ["columns", "OtherNameCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => OtherNameCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherNameCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "OtherNameCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerMessageSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerMessageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomerMessageSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerMessageSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerMessageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CustomerMessageSearch", [0, 1]],
      ["columns", "CustomerMessageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomerMessageSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerMessageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomerMessageSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Opportunity,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "Opportunity"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["daysOpen", "SOAP::SOAPLong", [0, 1]],
      ["forecastType", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["projectedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["rangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["rangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["projAltSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["weightedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["actionItem", "SOAP::SOAPString", [0, 1]],
      ["winLossReason", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["salesReadiness", "RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["buyingTimeFrame", "RecordRef", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["buyingReason", "RecordRef", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["closeDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "OpportunitySalesTeamList", [0, 1]],
      ["partnersList", "OpportunityPartnersList", [0, 1]],
      ["itemList", "OpportunityItemList", [0, 1]],
      ["competitorsList", "OpportunityCompetitorsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => OpportunitySalesTeam,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OpportunitySalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeamList"),
    :schema_element => [
      ["salesTeam", "OpportunitySalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => OpportunityItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OpportunityItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityItemList"),
    :schema_element => [
      ["item", "OpportunityItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => OpportunityCompetitors,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityCompetitors"),
    :schema_element => [
      ["competitor", "RecordRef", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["notes", "SOAP::SOAPString", [0, 1]],
      ["strategy", "SOAP::SOAPString", [0, 1]],
      ["winner", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OpportunityCompetitorsList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityCompetitorsList"),
    :schema_element => [
      ["competitors", "OpportunityCompetitors[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => OpportunitySearch,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunitySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "OpportunitySearchBasic", [0, 1]],
      ["actualJoin", "TransactionSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["decisionMakerJoin", "ContactSearchBasic", [0, 1]],
      ["estimateJoin", "TransactionSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["orderJoin", "TransactionSearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OpportunitySearchAdvanced,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunitySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "OpportunitySearch", [0, 1]],
      ["columns", "OpportunitySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => OpportunitySearchRow,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunitySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "OpportunitySearchRowBasic", [0, 1]],
      ["actualJoin", "TransactionSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["decisionMakerJoin", "ContactSearchRowBasic", [0, 1]],
      ["estimateJoin", "TransactionSearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["orderJoin", "TransactionSearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchRowBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OpportunityPartnersList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SalesOrder,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["orderStatus", "SalesOrderOrderStatus", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["actualShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["isMultiShipTo", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["shopperIpAddress", "SOAP::SOAPString", [0, 1]],
      ["saveOnAuthDecline", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "RevenueCommitStatus", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["getAuth", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentEventResult", "TransactionPaymentEventResult", [0, 1]],
      ["paymentEventHoldReason", "TransactionPaymentEventHoldReason", [0, 1]],
      ["paymentEventType", "TransactionPaymentEventType", [0, 1]],
      ["paymentEventDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paymentEventUpdatedBy", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "SalesOrderSalesTeamList", [0, 1]],
      ["partnersList", "SalesOrderPartnersList", [0, 1]],
      ["giftCertRedemptionList", "GiftCertRedemptionList", [0, 1]],
      ["itemList", "SalesOrderItemList", [0, 1]],
      ["shipGroupList", "SalesOrderShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SalesOrderSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SalesOrderSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeamList"),
    :schema_element => [
      ["salesTeam", "SalesOrderSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SalesOrderItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["commitInventory", "SalesOrderItemCommitInventory", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["createPo", "SalesOrderItemCreatePo", [0, 1]],
      ["createdPo", "RecordRef", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["createWo", "SOAP::SOAPBoolean", [0, 1]],
      ["poVendor", "RecordRef", [0, 1]],
      ["poCurrency", "SOAP::SOAPString", [0, 1]],
      ["poRate", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPacked", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPicked", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "RecordRef", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SalesOrderItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemList"),
    :schema_element => [
      ["item", "SalesOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SalesOrderPartnersList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SalesOrderShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderShipGroupList"),
    :schema_element => [
      ["shipGroup", "TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => TransactionSearch,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "TransactionSearchBasic", [0, 1]],
      ["accountJoin", "AccountSearchBasic", [0, 1]],
      ["accountingPeriodJoin", "AccountingPeriodSearchBasic", [0, 1]],
      ["appliedToTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["applyingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["billingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["binNumberJoin", "BinSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["classJoin", "ClassificationSearchBasic", [0, 1]],
      ["cogsPurchaseJoin", "TransactionSearchBasic", [0, 1]],
      ["cogsSaleJoin", "TransactionSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["createdFromJoin", "TransactionSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["customerMainJoin", "CustomerSearchBasic", [0, 1]],
      ["departmentJoin", "DepartmentSearchBasic", [0, 1]],
      ["depositTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["expenseCategoryJoin", "ExpenseCategorySearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["fulfillingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "InventoryDetailSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["itemNumberJoin", "InventoryNumberSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["jobMainJoin", "JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchBasic", [0, 1]],
      ["locationJoin", "LocationSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["paidTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["payingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["purchaseOrderJoin", "TransactionSearchBasic", [0, 1]],
      ["requestorJoin", "EmployeeSearchBasic", [0, 1]],
      ["revCommittingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["rgPostingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["salesOrderJoin", "TransactionSearchBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchBasic", [0, 1]],
      ["subsidiaryJoin", "SubsidiarySearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TransactionSearchAdvanced,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "TransactionSearch", [0, 1]],
      ["columns", "TransactionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TransactionSearchRow,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "TransactionSearchRowBasic", [0, 1]],
      ["accountJoin", "AccountSearchRowBasic", [0, 1]],
      ["accountingPeriodJoin", "AccountingPeriodSearchRowBasic", [0, 1]],
      ["appliedToTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["applyingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["billingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["binNumberJoin", "BinSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["classJoin", "ClassificationSearchRowBasic", [0, 1]],
      ["cogsPurchaseJoin", "TransactionSearchRowBasic", [0, 1]],
      ["cogsSaleJoin", "TransactionSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchRowBasic", [0, 1]],
      ["createdFromJoin", "TransactionSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["customerMainJoin", "CustomerSearchRowBasic", [0, 1]],
      ["departmentJoin", "DepartmentSearchRowBasic", [0, 1]],
      ["depositTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["expenseCategoryJoin", "ExpenseCategorySearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["fulfillingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["inventoryDetailJoin", "InventoryDetailSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["itemNumberJoin", "InventoryNumberSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["jobMainJoin", "JobSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchRowBasic", [0, 1]],
      ["locationJoin", "LocationSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["paidTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["payingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["purchaseOrderJoin", "TransactionSearchRowBasic", [0, 1]],
      ["requestorJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["revCommittingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["rgPostingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["salesOrderJoin", "TransactionSearchRowBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["subsidiaryJoin", "SubsidiarySearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "VendorSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemFulfillment,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillment"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["createdFromShipGroup", "SOAP::SOAPLong", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["shipStatus", "ItemFulfillmentShipStatus", [0, 1]],
      ["saturdayDeliveryUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailAddress2Ups", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailMessageUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcodeUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryUps", "Country", [0, 1]],
      ["thirdPartyTypeUps", "ItemFulfillmentThirdPartyTypeUps", [0, 1]],
      ["partiesToTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["exportTypeUps", "ItemFulfillmentExportTypeUps", [0, 1]],
      ["methodOfTransportUps", "ItemFulfillmentMethodOfTransportUps", [0, 1]],
      ["carrierIdUps", "SOAP::SOAPString", [0, 1]],
      ["entryNumberUps", "SOAP::SOAPString", [0, 1]],
      ["inbondCodeUps", "SOAP::SOAPString", [0, 1]],
      ["isRoutedExportTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["licenseNumberUps", "SOAP::SOAPString", [0, 1]],
      ["licenseDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["licenseExceptionUps", "ItemFulfillmentLicenseExceptionUps", [0, 1]],
      ["eccNumberUps", "SOAP::SOAPString", [0, 1]],
      ["recipientTaxIdUps", "SOAP::SOAPString", [0, 1]],
      ["blanketStartDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["blanketEndDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["shipmentWeightUps", "SOAP::SOAPDouble", [0, 1]],
      ["saturdayDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["saturdayPickupFedex", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["signatureHomeDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["shipDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["homeDeliveryTypeFedEx", "ItemFulfillmentHomeDeliveryTypeFedEx", [0, 1]],
      ["homeDeliveryDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["bookingConfirmationNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["intlExemptionNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["b13aFilingOptionFedEx", "ItemFulfillmentB13AFilingOptionFedEx", [0, 1]],
      ["b13aStatementDataFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryFedEx", "Country", [0, 1]],
      ["thirdPartyTypeFedEx", "ItemFulfillmentThirdPartyTypeFedEx", [0, 1]],
      ["shipmentWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsOfSaleFedEx", "ItemFulfillmentTermsOfSaleFedEx", [0, 1]],
      ["termsFreightChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsInsuranceChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["generateIntegratedShipperLabel", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["packageList", "ItemFulfillmentPackageList", [0, 1]],
      ["packageUpsList", "ItemFulfillmentPackageUpsList", [0, 1]],
      ["packageUspsList", "ItemFulfillmentPackageUspsList", [0, 1]],
      ["packageFedExList", "ItemFulfillmentPackageFedExList", [0, 1]],
      ["itemList", "ItemFulfillmentItemList", [0, 1]],
      ["shipGroupList", "ItemFulfillmentShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItem"),
    :schema_element => [
      ["jobName", "SOAP::SOAPString", [0, 1]],
      ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
      ["createPo", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["poNum", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "RecordRef", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItemList"),
    :schema_element => [
      ["item", "ItemFulfillmentItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackage,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackage"),
    :schema_element => [
      ["packageWeight", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescr", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumber", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageList"),
    :schema_element => [
      ["package", "ItemFulfillmentPackage[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageUps,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUps"),
    :schema_element => [
      ["packageWeightUps", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescrUps", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumberUps", "SOAP::SOAPString", [0, 1]],
      ["packagingUps", "ItemFulfillmentPackageUpsPackagingUps", [0, 1]],
      ["useInsuredValueUps", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueUps", "SOAP::SOAPDouble", [0, 1]],
      ["reference1Ups", "SOAP::SOAPString", [0, 1]],
      ["reference2Ups", "SOAP::SOAPString", [0, 1]],
      ["packageLengthUps", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthUps", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightUps", "SOAP::SOAPLong", [0, 1]],
      ["additionalHandlingUps", "SOAP::SOAPBoolean", [0, 1]],
      ["useCodUps", "SOAP::SOAPBoolean", [0, 1]],
      ["codAmountUps", "SOAP::SOAPDouble", [0, 1]],
      ["codMethodUps", "ItemFulfillmentPackageUpsCodMethodUps", [0, 1]],
      ["deliveryConfUps", "ItemFulfillmentPackageUpsDeliveryConfUps", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageUpsList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsList"),
    :schema_element => [
      ["packageUps", "ItemFulfillmentPackageUps[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageUsps,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUsps"),
    :schema_element => [
      ["packageWeightUsps", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescrUsps", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumberUsps", "SOAP::SOAPString", [0, 1]],
      ["packagingUsps", "ItemFulfillmentPackageUspsPackagingUsps", [0, 1]],
      ["useInsuredValueUsps", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueUsps", "SOAP::SOAPDouble", [0, 1]],
      ["reference1Usps", "SOAP::SOAPString", [0, 1]],
      ["reference2Usps", "SOAP::SOAPString", [0, 1]],
      ["packageLengthUsps", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthUsps", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightUsps", "SOAP::SOAPLong", [0, 1]],
      ["deliveryConfUsps", "ItemFulfillmentPackageUspsDeliveryConfUsps", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageUspsList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsList"),
    :schema_element => [
      ["packageUsps", "ItemFulfillmentPackageUsps[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageFedEx,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedEx"),
    :schema_element => [
      ["packageWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["packageTrackingNumberFedEx", "SOAP::SOAPString", [0, 1]],
      ["packagingFedEx", "ItemFulfillmentPackageFedExPackagingFedEx", [0, 1]],
      ["admPackageTypeFedEx", "ItemFulfillmentPackageFedExAdmPackageTypeFedEx", [0, 1]],
      ["isNonStandardContainerFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["useInsuredValueFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["reference1FedEx", "SOAP::SOAPString", [0, 1]],
      ["packageLengthFedEx", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthFedEx", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightFedEx", "SOAP::SOAPLong", [0, 1]],
      ["useCodFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["codAmountFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["codMethodFedEx", "ItemFulfillmentPackageFedExCodMethodFedEx", [0, 1]],
      ["codFreightTypeFedEx", "ItemFulfillmentPackageFedExCodFreightTypeFedEx", [0, 1]],
      ["deliveryConfFedEx", "ItemFulfillmentPackageFedExDeliveryConfFedEx", [0, 1]],
      ["signatureOptionsFedEx", "ItemFulfillmentPackageFedExSignatureOptionsFedEx", [0, 1]],
      ["signatureReleaseFedEx", "SOAP::SOAPString", [0, 1]],
      ["authorizationNumberFedEx", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageFedExList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExList"),
    :schema_element => [
      ["packageFedEx", "ItemFulfillmentPackageFedEx[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentShipGroupList"),
    :schema_element => [
      ["shipGroup", "TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => Invoice,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "Invoice"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscount", "RecordRef", [0, 1]],
      ["itemCostDiscount", "RecordRef", [0, 1]],
      ["timeDiscount", "RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxCode", "RecordRef", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxCode", "RecordRef", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxCode", "RecordRef", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "InvoiceSalesTeamList", [0, 1]],
      ["partnersList", "InvoicePartnersList", [0, 1]],
      ["itemList", "InvoiceItemList", [0, 1]],
      ["itemCostList", "InvoiceItemCostList", [0, 1]],
      ["giftCertRedemptionList", "GiftCertRedemptionList", [0, 1]],
      ["expCostList", "InvoiceExpCostList", [0, 1]],
      ["timeList", "InvoiceTimeList", [0, 1]],
      ["shipGroupList", "InvoiceShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => InvoiceSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InvoiceSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeamList"),
    :schema_element => [
      ["salesTeam", "InvoiceSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InvoiceItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "RecordRef", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InvoiceItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceItemList"),
    :schema_element => [
      ["item", "InvoiceItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InvoiceItemCost,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceItemCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["itemCostCount", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InvoiceItemCostList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceItemCostList"),
    :schema_element => [
      ["itemCost", "InvoiceItemCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InvoiceExpCost,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceExpCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["categoryDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxableDisp", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InvoiceExpCostList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceExpCostList"),
    :schema_element => [
      ["expCost", "InvoiceExpCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InvoiceTime,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceTime"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InvoiceTimeList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceTimeList"),
    :schema_element => [
      ["time", "InvoiceTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InvoicePartnersList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoicePartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InvoiceShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceShipGroupList"),
    :schema_element => [
      ["shipGroup", "TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CashSale,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSale"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscount", "RecordRef", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxCode", "RecordRef", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscount", "RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscprint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscount", "RecordRef", [0, 1]],
      ["expCostTaxCode", "RecordRef", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxCode", "RecordRef", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "CashSaleSalesTeamList", [0, 1]],
      ["partnersList", "CashSalePartnersList", [0, 1]],
      ["itemList", "CashSaleItemList", [0, 1]],
      ["itemCostList", "CashSaleItemCostList", [0, 1]],
      ["giftCertRedemptionList", "GiftCertRedemptionList", [0, 1]],
      ["expCostList", "CashSaleExpCostList", [0, 1]],
      ["timeList", "CashSaleTimeList", [0, 1]],
      ["shipGroupList", "CashSaleShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CashSaleSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CashSaleSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeamList"),
    :schema_element => [
      ["salesTeam", "CashSaleSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CashSaleItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "RecordRef", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CashSaleItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleItemList"),
    :schema_element => [
      ["item", "CashSaleItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CashSaleItemCost,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleItemCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["itemCostCount", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CashSaleItemCostList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleItemCostList"),
    :schema_element => [
      ["itemCost", "CashSaleItemCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CashSaleExpCost,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleExpCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["categoryDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxableDisp", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CashSaleExpCostList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleExpCostList"),
    :schema_element => [
      ["expCost", "CashSaleExpCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CashSaleTime,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleTime"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CashSaleTimeList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleTimeList"),
    :schema_element => [
      ["time", "CashSaleTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CashSalePartnersList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSalePartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CashSaleShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleShipGroupList"),
    :schema_element => [
      ["shipGroup", "TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => Estimate,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "Estimate"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["includeInForecast", "SOAP::SOAPBoolean", [0, 1]],
      ["forecastType", "RecordRef", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["visibleToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "EstimateItemList", [0, 1]],
      ["salesTeamList", "EstimateSalesTeamList", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["partnersList", "EstimatePartnersList", [0, 1]],
      ["shipGroupList", "EstimateShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => EstimateItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimateItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "RecordRef", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EstimateItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimateItemList"),
    :schema_element => [
      ["item", "EstimateItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EstimateSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimateSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EstimateSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimateSalesTeamList"),
    :schema_element => [
      ["salesTeam", "EstimateSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EstimatePartnersList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimatePartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EstimateShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimateShipGroupList"),
    :schema_element => [
      ["shipGroup", "TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => GiftCertRedemption,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "GiftCertRedemption"),
    :schema_element => [
      ["authCode", "RecordRef", [0, 1]],
      ["authCodeApplied", "SOAP::SOAPDouble", [0, 1]],
      ["authCodeAmtRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GiftCertRedemptionList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "GiftCertRedemptionList"),
    :schema_element => [
      ["giftCertRedemption", "GiftCertRedemption[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => TransactionShipGroup,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionShipGroup"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["isFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["sourceAddressRef", "RecordRef", [0, 1]],
      ["sourceAddress", "SOAP::SOAPString", [0, 1]],
      ["destinationAddressRef", "RecordRef", [0, 1]],
      ["destinationAddress", "SOAP::SOAPString", [0, 1]],
      ["shippingMethodRef", "RecordRef", [0, 1]],
      ["shippingMethod", "SOAP::SOAPString", [0, 1]],
      ["isHandlingTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxRate", "SOAP::SOAPString", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingRate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTaxAmt", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Amt", "SOAP::SOAPDouble", [0, 1]],
      ["isShippingTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["shippingTaxRate", "SOAP::SOAPString", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingRate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxAmt", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Amt", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PurchLandedCostList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchLandedCostList"),
    :schema_element => [
      ["landedCost", "LandedCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorBill,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorBill"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["approvalStatus", "RecordRef", [0, 1]],
      ["nextApprover", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["landedCostMethod", "LandedCostMethod", [0, 1]],
      ["expenseList", "VendorBillExpenseList", [0, 1]],
      ["itemList", "VendorBillItemList", [0, 1]],
      ["landedCostsList", "PurchLandedCostList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => VendorBillExpense,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorBillExpense"),
    :schema_element => [
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorBillExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorBillExpenseList"),
    :schema_element => [
      ["expense", "VendorBillExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorBillItem,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorBillItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["landedCostCategory", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "TransactionBillVarianceStatus", [0, 1]],
      ["billreceiptsList", "RecordRefList", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorBillItemList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorBillItemList"),
    :schema_element => [
      ["item", "VendorBillItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => PurchaseOrder,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["shipTo", "RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "PurchaseOrderOrderStatus", [0, 1]],
      ["itemList", "PurchaseOrderItemList", [0, 1]],
      ["expenseList", "PurchaseOrderExpenseList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PurchaseOrderExpense,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PurchaseOrderExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpenseList"),
    :schema_element => [
      ["expense", "PurchaseOrderExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => PurchaseOrderItem,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["landedCostCategory", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "TransactionBillVarianceStatus", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["expectedReceiptDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PurchaseOrderItemList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderItemList"),
    :schema_element => [
      ["item", "PurchaseOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemReceipt,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "ItemReceipt"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["landedCostMethod", "LandedCostMethod", [0, 1]],
      ["itemList", "ItemReceiptItemList", [0, 1]],
      ["expenseList", "ItemReceiptExpenseList", [0, 1]],
      ["landedCostsList", "PurchLandedCostList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ItemReceiptItem,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "ItemReceiptItem"),
    :schema_element => [
      ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
      ["jobName", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitCostOverride", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["restock", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "TransactionBillVarianceStatus", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemReceiptItemList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "ItemReceiptItemList"),
    :schema_element => [
      ["item", "ItemReceiptItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemReceiptExpense,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "ItemReceiptExpense"),
    :schema_element => [
      ["markReceived", "SOAP::SOAPBoolean", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["account", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemReceiptExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "ItemReceiptExpenseList"),
    :schema_element => [
      ["expense", "ItemReceiptExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorPayment,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorPayment"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["apAcct", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toAch", "SOAP::SOAPBoolean", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["printVoucher", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "VendorPaymentApplyList", [0, 1]],
      ["creditList", "VendorPaymentCreditList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => VendorPaymentApply,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorPaymentApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["discDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discAmt", "SOAP::SOAPDouble", [0, 1]],
      ["disc", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorPaymentApplyList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorPaymentApplyList"),
    :schema_element => [
      ["apply", "VendorPaymentApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorPaymentCredit,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorPaymentCredit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["creditDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["appliedTo", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorPaymentCreditList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorPaymentCreditList"),
    :schema_element => [
      ["credit", "VendorPaymentCredit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorCredit,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCredit"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["unApplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["expenseList", "VendorCreditExpenseList", [0, 1]],
      ["itemList", "VendorCreditItemList", [0, 1]],
      ["applyList", "VendorCreditApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => VendorCreditExpense,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditExpense"),
    :schema_element => [
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorCreditExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditExpenseList"),
    :schema_element => [
      ["expense", "VendorCreditExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorCreditItem,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbersList", "RecordRefList", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorCreditItemList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditItemList"),
    :schema_element => [
      ["item", "VendorCreditItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorCreditApply,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorCreditApplyList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditApplyList"),
    :schema_element => [
      ["apply", "VendorCreditApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorReturnAuthorization,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorization"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["orderStatus", "VendorReturnAuthorizationOrderStatus", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["expenseList", "VendorReturnAuthorizationExpenseList", [0, 1]],
      ["itemList", "VendorReturnAuthorizationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => VendorReturnAuthorizationExpense,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationExpense"),
    :schema_element => [
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorReturnAuthorizationExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationExpenseList"),
    :schema_element => [
      ["expense", "VendorReturnAuthorizationExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => VendorReturnAuthorizationItem,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbersList", "RecordRefList", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => VendorReturnAuthorizationItemList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationItemList"),
    :schema_element => [
      ["item", "VendorReturnAuthorizationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CashRefund,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefund"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refundCheck", "SOAP::SOAPBoolean", [0, 1]],
      ["toPrint2", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["giftCert", "RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "CashRefundItemList", [0, 1]],
      ["salesTeamList", "CashRefundSalesTeamList", [0, 1]],
      ["partnersList", "CashRefundPartnersList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CashRefundItem,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefundItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPString", [0, 1]],
      ["taxRate2", "SOAP::SOAPString", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CashRefundItemList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefundItemList"),
    :schema_element => [
      ["item", "CashRefundItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CashRefundSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CashRefundSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeamList"),
    :schema_element => [
      ["salesTeam", "CashRefundSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CashRefundPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefundPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerPayment,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPayment"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["arAcct", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["pending", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "CustomerPaymentApplyList", [0, 1]],
      ["creditList", "CustomerPaymentCreditList", [0, 1]],
      ["depositList", "CustomerPaymentDepositList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomerPaymentApply,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["discDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discAmt", "SOAP::SOAPDouble", [0, 1]],
      ["disc", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerPaymentApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentApplyList"),
    :schema_element => [
      ["apply", "CustomerPaymentApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerPaymentCredit,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentCredit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["creditDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["appliedTo", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerPaymentCreditList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentCreditList"),
    :schema_element => [
      ["credit", "CustomerPaymentCredit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerPaymentDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentDeposit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["depositDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["remaining", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerPaymentDepositList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentDepositList"),
    :schema_element => [
      ["deposit", "CustomerPaymentDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ReturnAuthorization,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorization"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "RevenueCommitStatus", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["orderStatus", "ReturnAuthorizationOrderStatus", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["giftCert", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "ReturnAuthorizationItemList", [0, 1]],
      ["salesTeamList", "ReturnAuthorizationSalesTeamList", [0, 1]],
      ["partnersList", "ReturnAuthorizationPartnersList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ReturnAuthorizationItem,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ReturnAuthorizationItemList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItemList"),
    :schema_element => [
      ["item", "ReturnAuthorizationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ReturnAuthorizationSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ReturnAuthorizationSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeamList"),
    :schema_element => [
      ["salesTeam", "ReturnAuthorizationSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ReturnAuthorizationPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CreditMemo,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemo"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["giftCert", "RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "CreditMemoSalesTeamList", [0, 1]],
      ["itemList", "CreditMemoItemList", [0, 1]],
      ["partnersList", "CreditMemoPartnersList", [0, 1]],
      ["applyList", "CreditMemoApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CreditMemoSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CreditMemoSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeamList"),
    :schema_element => [
      ["salesTeam", "CreditMemoSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CreditMemoItem,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CreditMemoItemList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoItemList"),
    :schema_element => [
      ["item", "CreditMemoItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CreditMemoApply,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CreditMemoApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoApplyList"),
    :schema_element => [
      ["apply", "CreditMemoApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CreditMemoPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerRefund,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerRefund"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["arAcct", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "CustomerRefundApplyList", [0, 1]],
      ["depositList", "CustomerRefundDepositList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomerRefundApply,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerRefundApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerRefundApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerRefundApplyList"),
    :schema_element => [
      ["apply", "CustomerRefundApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerRefundDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerRefundDeposit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["depositDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["remaining", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerRefundDepositList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerRefundDepositList"),
    :schema_element => [
      ["customerRefundDeposit", "CustomerRefundDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomerDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerDeposit"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["salesOrder", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "CustomerDepositApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomerDepositApply,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerDepositApply"),
    :schema_element => [
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomerDepositApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerDepositApplyList"),
    :schema_element => [
      ["customerDepositApply", "CustomerDepositApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => DepositApplication,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "DepositApplication"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["arAcct", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["deposit", "RecordRef", [0, 1]],
      ["depDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["applyList", "DepositApplicationApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => DepositApplicationApply,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "DepositApplicationApply"),
    :schema_element => [
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => DepositApplicationApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "DepositApplicationApplyList"),
    :schema_element => [
      ["apply", "DepositApplicationApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => Budget,
    :schema_type => XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "Budget"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["year", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["budgetType", "BudgetBudgetType", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["periodAmount1", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount2", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount3", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount4", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount5", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount6", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount7", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount8", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount9", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount10", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount11", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount12", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => BudgetSearch,
    :schema_type => XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "BudgetSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "BudgetSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BudgetSearchAdvanced,
    :schema_type => XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "BudgetSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "BudgetSearch", [0, 1]],
      ["columns", "BudgetSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => BudgetSearchRow,
    :schema_type => XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "BudgetSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "BudgetSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CheckLandedCostList,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "CheckLandedCostList"),
    :schema_element => [
      ["landedCost", "LandedCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => Check,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "Check"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["voidJournal", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["landedCostMethod", "LandedCostMethod", [0, 1]],
      ["expenseList", "CheckExpenseList", [0, 1]],
      ["itemList", "CheckItemList", [0, 1]],
      ["landedCostsList", "CheckLandedCostList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CheckExpense,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "CheckExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CheckExpenseList,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "CheckExpenseList"),
    :schema_element => [
      ["expense", "CheckExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CheckItem,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "CheckItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CheckItemList,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "CheckItemList"),
    :schema_element => [
      ["item", "CheckItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InventoryAdjustment,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustment"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["estimatedTotalValue", "SOAP::SOAPDouble", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["adjLocation", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["inventoryList", "InventoryAdjustmentInventoryList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => InventoryAdjustmentInventory,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventory"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["currentValue", "SOAP::SOAPDouble", [0, 1]],
      ["adjustQtyBy", "SOAP::SOAPDouble", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["newQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitCost", "SOAP::SOAPDouble", [0, 1]],
      ["foreignCurrencyUnitCost", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryAdjustmentInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventoryList"),
    :schema_element => [
      ["inventory", "InventoryAdjustmentInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => AssemblyBuild,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "AssemblyBuild"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "AssemblyComponentList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AssemblyUnbuild,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "AssemblyUnbuild"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "AssemblyComponentList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AssemblyComponent,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "AssemblyComponent"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["componentInventoryDetail", "InventoryDetail", [0, 1]],
      ["componentNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AssemblyComponentList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "AssemblyComponentList"),
    :schema_element => [
      ["component", "AssemblyComponent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => TransferOrder,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "TransferOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "TransferOrderItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TransferOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "TransferOrderItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["commitInventory", "TransferOrderItemCommitInventory", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expectedReceiptDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TransferOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "TransferOrderItemList"),
    :schema_element => [
      ["item", "TransferOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InterCompanyTransferOrder,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "InterCompanyTransferOrderItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => InterCompanyTransferOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrderItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["commitInventory", "TransferOrderItemCommitInventory", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InterCompanyTransferOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrderItemList"),
    :schema_element => [
      ["item", "InterCompanyTransferOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => WorkOrder,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "WorkOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["assemblyItem", "RecordRef", [0, 1]],
      ["expandAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["itemList", "WorkOrderItemList", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["salesTeamList", "SalesTeamList", [0, 1]],
      ["partnersList", "PartnersList", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => WorkOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "WorkOrderItem"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["poVendor", "RecordRef", [0, 1]],
      ["poRate", "SOAP::SOAPDouble", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["commit", "WorkOrderItemItemCommitInventory", [0, 1]],
      ["createPo", "WorkOrderItemItemCreatePo", [0, 1]],
      ["createWo", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => WorkOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "WorkOrderItemList"),
    :schema_element => [
      ["item", "WorkOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SalesTeamList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "SalesTeamList"),
    :schema_element => [
      ["salesTeam", "CustomerSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => PartnersList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "PartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InventoryTransfer,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryTransfer"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["inventoryList", "InventoryTransferInventoryList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => InventoryTransferInventory,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryTransferInventory"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["adjustQtyBy", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["fromBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["toBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InventoryTransferInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryTransferInventoryList"),
    :schema_element => [
      ["inventory", "InventoryTransferInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => BinTransfer,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinTransfer"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["inventoryList", "BinTransferInventoryList", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => BinTransferInventory,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinTransferInventory"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["preferredBin", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["itemUnitsLabel", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["fromBins", "SOAP::SOAPString", [0, 1]],
      ["toBins", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BinTransferInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinTransferInventoryList"),
    :schema_element => [
      ["inventory", "BinTransferInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => BinWorksheet,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinWorksheet"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["itemList", "BinWorksheetItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => BinWorksheetItem,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinWorksheetItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["itemOnHand", "SOAP::SOAPString", [0, 1]],
      ["itemUnitsLabel", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["itemBins", "SOAP::SOAPString", [0, 1]],
      ["itemBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["itemBinList", "SOAP::SOAPString", [0, 1]],
      ["itemPreferBin", "SOAP::SOAPString", [0, 1]],
      ["itemBlank", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => BinWorksheetItemList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinWorksheetItemList"),
    :schema_element => [
      ["item", "BinWorksheetItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => JournalEntry,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "JournalEntry"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["lineList", "JournalEntryLineList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => JournalEntryLine,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "JournalEntryLine"),
    :schema_element => [
      ["account", "RecordRef", [0, 1]],
      ["debit", "SOAP::SOAPDouble", [0, 1]],
      ["credit", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["schedule", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["scheduleNum", "RecordRef", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Acct", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => JournalEntryLineList,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "JournalEntryLineList"),
    :schema_element => [
      ["line", "JournalEntryLine[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => InterCompanyJournalEntry,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntry"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lineList", "InterCompanyJournalEntryLineList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => InterCompanyJournalEntryLine,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLine"),
    :schema_element => [
      ["lineSubsidiary", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["debit", "SOAP::SOAPDouble", [0, 1]],
      ["credit", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["schedule", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["scheduleNum", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Acct", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => InterCompanyJournalEntryLineList,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLineList"),
    :schema_element => [
      ["line", "InterCompanyJournalEntryLine[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecord,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecord"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customRecordId", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["created", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModified", "SOAP::SOAPDateTime", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["recType", "RecordRef", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enablEmailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordSearch,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomRecordSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["ownerJoin", "EmployeeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CustomRecordSearch", [0, 1]],
      ["columns", "CustomRecordSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomRecordSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["ownerJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomList"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isMatrixOption", "SOAP::SOAPBoolean", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["convertToCustomRecord", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customValueList", "CustomListCustomValueList", [0, 1]],
      ["translationsList", "CustomListTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomListCustomValue,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListCustomValue"),
    :schema_element => [
      ["value", "SOAP::SOAPString", [0, 1]],
      ["abbreviation", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["valueId", "SOAP::SOAPLong", [0, 1]],
      ["valueLanguageValueList", "LanguageValueList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomListCustomValueList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListCustomValueList"),
    :schema_element => [
      ["customValue", "CustomListCustomValue[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomListTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListTranslations"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomListTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListTranslationsList"),
    :schema_element => [
      ["translations", "CustomListTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordType,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["accessType", "CustomRecordTypeAccessType", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enableMailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["tabsList", "CustomRecordTypeTabsList", [0, 1]],
      ["sublistsList", "CustomRecordTypeSublistsList", [0, 1]],
      ["formsList", "CustomRecordTypeFormsList", [0, 1]],
      ["onlineFormsList", "CustomRecordTypeOnlineFormsList", [0, 1]],
      ["permissionsList", "CustomRecordTypePermissionsList", [0, 1]],
      ["linksList", "CustomRecordTypeLinksList", [0, 1]],
      ["managersList", "CustomRecordTypeManagersList", [0, 1]],
      ["childrenList", "CustomRecordTypeChildrenList", [0, 1]],
      ["parentsList", "CustomRecordTypeParentsList", [0, 1]],
      ["translationsList", "CustomRecordTypeTranslationsList", [0, 1]],
      ["customFieldList", "CustomRecordTypeFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeFieldList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeFieldList"),
    :schema_element => [
      ["customField", "CustomRecordCustomField[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeTabs,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTabs"),
    :schema_element => [
      ["tabTitle", "SOAP::SOAPString", [0, 1]],
      ["tabParent", "RecordRef", [0, 1]],
      ["tabTitleLanguageValueList", "LanguageValueList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeTabsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTabsList"),
    :schema_element => [
      ["tabs", "CustomRecordTypeTabs[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeForms,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeForms"),
    :schema_element => [
      ["formEdit", "SOAP::SOAPString", [0, 1]],
      ["formName", "SOAP::SOAPString", [0, 1]],
      ["formPref", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeFormsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeFormsList"),
    :schema_element => [
      ["forms", "CustomRecordTypeForms[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeOnlineForms,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineForms"),
    :schema_element => [
      ["onlineFormName", "SOAP::SOAPString", [0, 1]],
      ["isOnline", "SOAP::SOAPString", [0, 1]],
      ["templateName", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeOnlineFormsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineFormsList"),
    :schema_element => [
      ["onlineForms", "CustomRecordTypeOnlineForms[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordTypePermissions,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissions"),
    :schema_element => [
      ["permittedRole", "RecordRef", [0, 1]],
      ["permittedLevel", "CustomRecordTypePermissionsPermittedLevel", [0, 1]],
      ["restriction", "CustomRecordTypePermissionsRestriction", [0, 1]],
      ["defaultForm", "RecordRef", [0, 1]],
      ["restrictForm", "SOAP::SOAPBoolean", [0, 1]],
      ["searchForm", "RecordRef", [0, 1]],
      ["searchResults", "RecordRef", [0, 1]],
      ["listView", "RecordRef", [0, 1]],
      ["listViewRestricted", "SOAP::SOAPBoolean", [0, 1]],
      ["dashboardView", "RecordRef", [0, 1]],
      ["restrictDashboardView", "SOAP::SOAPBoolean", [0, 1]],
      ["sublistView", "RecordRef", [0, 1]],
      ["restrictSublistView", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordTypePermissionsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsList"),
    :schema_element => [
      ["permissions", "CustomRecordTypePermissions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeLinks,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeLinks"),
    :schema_element => [
      ["linkCenter", "RecordRef", [0, 1]],
      ["linkSection", "RecordRef", [0, 1]],
      ["linkLabel", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeLinksList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeLinksList"),
    :schema_element => [
      ["links", "CustomRecordTypeLinks[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeManagers,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeManagers"),
    :schema_element => [
      ["managerEmp", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeManagersList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeManagersList"),
    :schema_element => [
      ["managers", "CustomRecordTypeManagers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeChildren,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeChildren"),
    :schema_element => [
      ["childDescr", "SOAP::SOAPString", [0, 1]],
      ["childTab", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeChildrenList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeChildrenList"),
    :schema_element => [
      ["children", "CustomRecordTypeChildren[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeParents,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeParents"),
    :schema_element => [
      ["childDescr", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeParentsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeParentsList"),
    :schema_element => [
      ["parents", "CustomRecordTypeParents[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTranslations"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTranslationsList"),
    :schema_element => [
      ["translations", "CustomRecordTypeTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeSublists,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeSublists"),
    :schema_element => [
      ["recordSearch", "RecordRef", [0, 1]],
      ["recordDescr", "SOAP::SOAPString", [0, 1]],
      ["recordDescrLanguageValueList", "LanguageValueList", [0, 1]],
      ["recordTab", "RecordRef", [0, 1]],
      ["recordId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeSublistsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeSublistsList"),
    :schema_element => [
      ["sublists", "CustomRecordTypeSublists[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EntityCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "EntityCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["appliesToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProject", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToVendor", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEmployee", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherName", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToContact", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPartner", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToWebSite", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "EntityCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["appliesToStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => EntityCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "EntityCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EntityCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "EntityCustomFieldFilterList"),
    :schema_element => [
      ["filter", "EntityCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => FldFilterSelList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "FldFilterSelList"),
    :schema_element => [
      ["fldFilterSel", "RecordRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => CrmCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CrmCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["appliesToTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProjectTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPhoneCall", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCase", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCampaign", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesPerKeyword", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSolution", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToIssue", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["showIssueChanges", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "CrmCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CrmCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CrmCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CrmCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CrmCustomFieldFilterList"),
    :schema_element => [
      ["filter", "CrmCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => OtherCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "OtherCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["recType", "RecordRef", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["filterList", "OtherCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => OtherCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "OtherCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => OtherCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "OtherCustomFieldFilterList"),
    :schema_element => [
      ["filter", "OtherCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["itemMatrix", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["appliesToInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToNonInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToService", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToKit", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToItemAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["itemSubType", "ItemCustomFieldItemSubType", [0, 1]],
      ["filterList", "ItemCustomFieldFilterList", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ItemCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemCustomFieldFilterList"),
    :schema_element => [
      ["filter", "ItemCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => TransactionBodyCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["bodyPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["bodySale", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyStore", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyInventoryAdjustment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBTegata", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyAssemblyBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyCustomerPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyVendorPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBom", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "TransactionBodyCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TransactionBodyCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TransactionBodyCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilterList"),
    :schema_element => [
      ["filter", "TransactionBodyCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => TransactionColumnCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["colExpense", "SOAP::SOAPBoolean", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["colBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["colExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["colTime", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colTimeGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["colPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["colPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["colReturnForm", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreWithGroups", "SOAP::SOAPBoolean", [0, 1]],
      ["colGroupOnInvoices", "SOAP::SOAPBoolean", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "TransactionColumnCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TransactionColumnCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TransactionColumnCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilterList"),
    :schema_element => [
      ["filter", "TransactionColumnCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemOptionCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemOptionCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "ItemsList", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "ItemOptionCustomFieldFilterList", [0, 1]],
      ["colOptionLabel", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ItemsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemsList"),
    :schema_element => [
      ["items", "RecordRef[]", [1, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemOptionCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemOptionCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilterList"),
    :schema_element => [
      ["filter", "ItemOptionCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourcefilterby", "RecordRef", [0, 1]],
      ["recType", "SOAP::SOAPString", [0, 1]],
      ["roleRestrict", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "CustomRecordCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CustomRecordCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomRecordCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilterList"),
    :schema_element => [
      ["filter", "CustomRecordCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomFieldRoleAccess,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldRoleAccess"),
    :schema_element => [
      ["role", "RecordRef", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomFieldRoleAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldRoleAccessList"),
    :schema_element => [
      ["roleAccess", "CustomFieldRoleAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomFieldDepartmentAccess,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldDepartmentAccess"),
    :schema_element => [
      ["dept", "RecordRef", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomFieldDepartmentAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldDepartmentAccessList"),
    :schema_element => [
      ["deptAccess", "CustomFieldDepartmentAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomFieldSubAccess,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldSubAccess"),
    :schema_element => [
      ["sub", "RecordRef", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomFieldSubAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldSubAccessList"),
    :schema_element => [
      ["subAccess", "CustomFieldSubAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => LanguageValue,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "LanguageValue"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["value", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => LanguageValueList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "LanguageValueList"),
    :schema_element => [
      ["languageValue", "LanguageValue[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomFieldTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldTranslations"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomFieldTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldTranslationsList"),
    :schema_element => [
      ["translations", "CustomFieldTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemNumberCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemNumberCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["filterList", "ItemNumberCustomFieldFilterList", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["appliesToAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSerialized", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToLots", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGiftCerts", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "RecordRefList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ItemNumberCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemNumberCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]],
      ["fldfilterNull", "SOAP::SOAPBoolean", [0, 1]],
      ["fldCompareField", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemNumberCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemNumberCustomFieldFilterList"),
    :schema_element => [
      ["filter", "ItemNumberCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CustomListSearch,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomListSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CustomListSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomListSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AppDefinition,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinition"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["packagesList", "AppDefinitionPackagesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AppDefinitionPackages,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinitionPackages"),
    :schema_element => []
  )

  EncodedRegistry.register(
    :class => AppDefinitionPackagesList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinitionPackagesList"),
    :schema_element => [
      ["packages", "AppDefinitionPackages[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => AppDefinitionSearch,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinitionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "AppDefinitionSearchBasic", [0, 1]],
      ["appPackageJoin", "AppPackageSearchBasic", [0, 1]],
      ["creatorJoin", "EmployeeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AppDefinitionSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinitionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "AppDefinitionSearch", [0, 1]],
      ["columns", "AppDefinitionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AppDefinitionSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinitionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "AppDefinitionSearchRowBasic", [0, 1]],
      ["appPackageJoin", "AppPackageSearchRowBasic", [0, 1]],
      ["creatorJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AppPackage,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppPackage"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["appDefinition", "RecordRef", [0, 1]],
      ["version", "SOAP::SOAPString", [0, 1]],
      ["packageFile", "RecordRef", [0, 1]],
      ["bundle", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AppPackageSearch,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppPackageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "AppPackageSearchBasic", [0, 1]],
      ["appDefinitionJoin", "AppDefinitionSearchBasic", [0, 1]],
      ["creatorJoin", "EmployeeSearchBasic", [0, 1]],
      ["packageFileJoin", "FileSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AppPackageSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppPackageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "AppPackageSearch", [0, 1]],
      ["columns", "AppPackageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => AppPackageSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppPackageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "AppPackageSearchRowBasic", [0, 1]],
      ["appDefinitionJoin", "AppDefinitionSearchRowBasic", [0, 1]],
      ["creatorJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["packageFileJoin", "FileSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Employee,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "Employee"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["template", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["initials", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["billingClass", "RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["payFrequency", "EmployeePayFrequency", [0, 1]],
      ["lastPaidDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["useTimeData", "EmployeeUseTimeData", [0, 1]],
      ["usePerquest", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "RecordRef", [0, 1]],
      ["adpId", "SOAP::SOAPString", [0, 1]],
      ["directDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderApprovalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["socialSecurityNumber", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "RecordRef", [0, 1]],
      ["approver", "RecordRef", [0, 1]],
      ["approvalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["timeApprover", "RecordRef", [0, 1]],
      ["employeeType", "RecordRef", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResource", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["birthDate", "SOAP::SOAPDateTime", [0, 1]],
      ["hireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["releaseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["employeeStatus", "RecordRef", [0, 1]],
      ["jobDescription", "SOAP::SOAPString", [0, 1]],
      ["maritalStatus", "RecordRef", [0, 1]],
      ["ethnicity", "RecordRef", [0, 1]],
      ["gender", "Gender", [0, 1]],
      ["purchaseOrderApprover", "RecordRef", [0, 1]],
      ["workCalendar", "RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["concurrentWebServicesUser", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["hasOfflineAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["inheritIPRules", "SOAP::SOAPBoolean", [0, 1]],
      ["iPAddressRule", ["SOAP::SOAPString", XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "IPAddressRule")], [0, 1]],
      ["commissionPaymentPreference", "EmployeeCommissionPaymentPreference", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["subscriptionsList", "EmployeeSubscriptionsList", [0, 1]],
      ["addressbookList", "EmployeeAddressbookList", [0, 1]],
      ["rolesList", "EmployeeRolesList", [0, 1]],
      ["hrEducationList", "EmployeeHrEducationList", [0, 1]],
      ["accruedTimeList", "EmployeeAccruedTimeList", [0, 1]],
      ["directDepositList", "EmployeeDirectDepositList", [0, 1]],
      ["companyContributionList", "EmployeeCompanyContributionList", [0, 1]],
      ["earningList", "EmployeeEarningList", [0, 1]],
      ["emergencyContactList", "EmployeeEmergencyContactList", [0, 1]],
      ["deductionList", "EmployeeDeductionList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => EmployeeSubscriptions,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeSubscriptions"),
    :schema_element => [
      ["subscribed", "SOAP::SOAPString", [0, 1]],
      ["subscription", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeSubscriptionsList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeSubscriptionsList"),
    :schema_element => [
      ["subscriptions", "EmployeeSubscriptions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EmployeeAddressbook,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeAddressbookList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeAddressbookList"),
    :schema_element => [
      ["addressbook", "EmployeeAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EmployeeRoles,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeRoles"),
    :schema_element => [
      ["selectedRole", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeRolesList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeRolesList"),
    :schema_element => [
      ["roles", "EmployeeRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EmployeeSearch,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "EmployeeSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["departmentJoin", "DepartmentSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["locationJoin", "LocationSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["subsidiaryJoin", "SubsidiarySearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeSearchAdvanced,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "EmployeeSearch", [0, 1]],
      ["columns", "EmployeeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => EmployeeSearchRow,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "EmployeeSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchRowBasic", [0, 1]],
      ["departmentJoin", "DepartmentSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["locationJoin", "LocationSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchRowBasic", [0, 1]],
      ["subsidiaryJoin", "SubsidiarySearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeEmergencyContact,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeEmergencyContact"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["contact", "SOAP::SOAPString", [0, 1]],
      ["relationship", "SOAP::SOAPString", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeEmergencyContactList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeEmergencyContactList"),
    :schema_element => [
      ["employeeEmergencyContact", "EmployeeEmergencyContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EmployeeHrEducation,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeHrEducation"),
    :schema_element => [
      ["education", "RecordRef", [0, 1]],
      ["degree", "SOAP::SOAPString", [0, 1]],
      ["degreeDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeHrEducationList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeHrEducationList"),
    :schema_element => [
      ["employeeHrEducation", "EmployeeHrEducation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EmployeeAccruedTime,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeAccruedTime"),
    :schema_element => [
      ["payrollItem", "RecordRef", [0, 1]],
      ["accruedHours", "SOAP::SOAPDouble", [0, 1]],
      ["accrualRate", "SOAP::SOAPDouble", [0, 1]],
      ["monetaryRate", "SOAP::SOAPDouble", [0, 1]],
      ["resetAccruedHoursAtYearEnd", "SOAP::SOAPBoolean", [0, 1]],
      ["accrualMethod", "EmployeeAccruedTimeAccrualMethod", [0, 1]],
      ["maximumAccruedHours", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeAccruedTimeList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeAccruedTimeList"),
    :schema_element => [
      ["employeeAccruedTime", "EmployeeAccruedTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EmployeeDeduction,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeDeduction"),
    :schema_element => [
      ["payrollItem", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["limit", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeDeductionList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeDeductionList"),
    :schema_element => [
      ["employeeDeduction", "EmployeeDeduction[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EmployeeCompanyContribution,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeCompanyContribution"),
    :schema_element => [
      ["payrollItem", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["limit", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeCompanyContributionList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeCompanyContributionList"),
    :schema_element => [
      ["employeeCompanyContribution", "EmployeeCompanyContribution[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EmployeeEarning,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeEarning"),
    :schema_element => [
      ["payrollItem", "RecordRef", [0, 1]],
      ["payRate", "SOAP::SOAPString", [0, 1]],
      ["primaryEarning", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultHours", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultEarning", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeEarningList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeEarningList"),
    :schema_element => [
      ["employeeEarning", "EmployeeEarning[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => EmployeeDirectDeposit,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeDirectDeposit"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["netAccount", "SOAP::SOAPBoolean", [0, 1]],
      ["savingsAccount", "SOAP::SOAPBoolean", [0, 1]],
      ["accountPrenoted", "SOAP::SOAPBoolean", [0, 1]],
      ["accountStatus", "EmployeeDirectDepositAccountStatus", [0, 1]],
      ["bankName", "SOAP::SOAPString", [0, 1]],
      ["bankId", "SOAP::SOAPString", [0, 1]],
      ["bankNumber", "SOAP::SOAPString", [0, 1]],
      ["bankRoutingNumber", "SOAP::SOAPString", [0, 1]],
      ["bankAccountNumber", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => EmployeeDirectDepositList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeDirectDepositList"),
    :schema_element => [
      ["employeeDirectDeposit", "EmployeeDirectDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SiteCategory,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["website", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["parentCategory", "RecordRef", [0, 1]],
      ["categoryListLayout", "RecordRef", [0, 1]],
      ["itemListLayout", "RecordRef", [0, 1]],
      ["relatedItemsListLayout", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["presentationItemList", "SiteCategoryPresentationItemList", [0, 1]],
      ["translationsList", "SiteCategoryTranslationList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SiteCategoryTranslation,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategoryTranslation"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SiteCategoryTranslationList,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategoryTranslationList"),
    :schema_element => [
      ["translation", "SiteCategoryTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SiteCategoryPresentationItemList,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategoryPresentationItemList"),
    :schema_element => [
      ["presentationItem", "PresentationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => SiteCategorySearch,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "SiteCategorySearchBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => SiteCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "SiteCategorySearch", [0, 1]],
      ["columns", "SiteCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => SiteCategorySearchRow,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "SiteCategorySearchRowBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TimeBill,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "TimeBill"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["caseTaskEvent", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollItem", "RecordRef", [0, 1]],
      ["paidExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["hours", "Duration", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["timeType", "TimeBillTimeType", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["overrideRate", "SOAP::SOAPBoolean", [0, 1]],
      ["temporaryLocalJurisdiction", "RecordRef", [0, 1]],
      ["temporaryStateJurisdiction", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TimeBillSearch,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "TimeBillSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "TimeBillSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["projectTaskJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => TimeBillSearchAdvanced,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "TimeBillSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "TimeBillSearch", [0, 1]],
      ["columns", "TimeBillSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => TimeBillSearchRow,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "TimeBillSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "TimeBillSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["projectTaskJoin", "ProjectTaskSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ExpenseReport,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "ExpenseReport"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["advance", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["complete", "SOAP::SOAPBoolean", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["accountingApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["useMultiCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Amt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["expenseList", "ExpenseReportExpenseList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => ExpenseReportExpense,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "ExpenseReportExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["expenseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["foreignAmount", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["receipt", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ExpenseReportExpenseList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "ExpenseReportExpenseList"),
    :schema_element => [
      ["expense", "ExpenseReportExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => Campaign,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "Campaign"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["campaignId", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["baseCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["expectedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["local", "SOAP::SOAPBoolean", [0, 1]],
      ["totalRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["roi", "SOAP::SOAPDouble", [0, 1]],
      ["profit", "SOAP::SOAPDouble", [0, 1]],
      ["costPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["convCostPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["conversions", "SOAP::SOAPLong", [0, 1]],
      ["leadsGenerated", "SOAP::SOAPLong", [0, 1]],
      ["uniqueVisitors", "SOAP::SOAPLong", [0, 1]],
      ["vertical", "RecordRef", [0, 1]],
      ["audience", "RecordRef", [0, 1]],
      ["offer", "RecordRef", [0, 1]],
      ["promotionCode", "RecordRef", [0, 1]],
      ["itemList", "RecordRefList", [0, 1]],
      ["family", "RecordRef", [0, 1]],
      ["searchEngine", "RecordRef", [0, 1]],
      ["keyword", "SOAP::SOAPString", [0, 1]],
      ["campaignEmailList", "CampaignEmailList", [0, 1]],
      ["campaignDirectMailList", "CampaignDirectMailList", [0, 1]],
      ["campaignEventList", "CampaignEventList", [0, 1]],
      ["eventResponseList", "CampaignEventResponseList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CampaignEmail,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEmail"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "RecordRef", [0, 1]],
      ["template", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "RecordRef", [0, 1]],
      ["channel", "RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "CampaignCampaignEmailStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CampaignEmailList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEmailList"),
    :schema_element => [
      ["campaignEmail", "CampaignEmail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CampaignDirectMail,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignDirectMail"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "RecordRef", [0, 1]],
      ["template", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "RecordRef", [0, 1]],
      ["channel", "RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "CampaignCampaignDirectMailStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CampaignDirectMailList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignDirectMailList"),
    :schema_element => [
      ["campaignDirectMail", "CampaignDirectMail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CampaignEvent,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEvent"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "RecordRef", [0, 1]],
      ["channel", "RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "CampaignCampaignEventStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CampaignEventList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEventList"),
    :schema_element => [
      ["campaignEvent", "CampaignEvent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CampaignEventResponse,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEventResponse"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["dateSent", "SOAP::SOAPDateTime", [0, 1]],
      ["sent", "SOAP::SOAPDouble", [0, 1]],
      ["opened", "SOAP::SOAPDouble", [0, 1]],
      ["openedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["clickedThru", "SOAP::SOAPDouble", [0, 1]],
      ["clickedThruRatio", "SOAP::SOAPDouble", [0, 1]],
      ["responded", "SOAP::SOAPLong", [0, 1]],
      ["respondedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["unsubscribed", "SOAP::SOAPLong", [0, 1]],
      ["unsubscribedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["bounced", "SOAP::SOAPLong", [0, 1]],
      ["bouncedRatio", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CampaignEventResponseList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEventResponseList"),
    :schema_element => [
      ["eventResponse", "CampaignEventResponse[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CampaignSearch,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CampaignSearchBasic", [0, 1]],
      ["campaignRecipientJoin", "EntitySearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["promotionCodeJoin", "PromotionCodeSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CampaignSearchAdvanced,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CampaignSearch", [0, 1]],
      ["columns", "CampaignSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CampaignSearchRow,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CampaignSearchRowBasic", [0, 1]],
      ["campaignRecipientJoin", "EntitySearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["promotionCodeJoin", "PromotionCodeSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CampaignCategory,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isexternal", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CampaignAudience,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignAudience"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CampaignFamily,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignFamily"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CampaignSearchEngine,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSearchEngine"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CampaignChannel,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignChannel"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["eventType", "CampaignChannelEventType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CampaignOffer,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignOffer"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CampaignResponse,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponse"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["campaignEvent", "RecordRef", [0, 1]],
      ["campaignResponseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["channel", "SOAP::SOAPString", [0, 1]],
      ["response", "CampaignResponseResponse", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["responsesList", "CampaignResponseResponsesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CampaignResponseResponses,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponseResponses"),
    :schema_element => [
      ["response", "SOAP::SOAPString", [0, 1]],
      ["responseDate", "SOAP::SOAPString", [0, 1]],
      ["author", "SOAP::SOAPString", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => CampaignResponseResponsesList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponseResponsesList"),
    :schema_element => [
      ["responses", "CampaignResponseResponses[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => CampaignVertical,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignVertical"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => CampaignSubscription,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSubscription"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscribedByDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["unsubscribed", "SOAP::SOAPBoolean", [0, 1]],
      ["externalName", "SOAP::SOAPString", [0, 1]],
      ["externalDescription", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PromotionCode,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCode"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["implementation", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["displayLineDiscounts", "SOAP::SOAPBoolean", [0, 1]],
      ["code", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["discount", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["discountType", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDiscountTo", "PromotionCodeApplyDiscountTo", [0, 1]],
      ["freeShipMethod", "RecordRef", [0, 1]],
      ["minimumOrderAmount", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isPublic", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyList", "PromotionCodeCurrencyList", [0, 1]],
      ["excludeItems", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "PromotionCodeItemsList", [0, 1]],
      ["partnersList", "PromotionCodePartnersList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PromotionCodePartners,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodePartners"),
    :schema_element => [
      ["partner", "RecordRef", [0, 1]],
      ["code", "SOAP::SOAPString", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PromotionCodePartnersList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodePartnersList"),
    :schema_element => [
      ["partners", "PromotionCodePartners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => PromotionCodeItems,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeItems"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PromotionCodeItemsList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeItemsList"),
    :schema_element => [
      ["items", "PromotionCodeItems[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => PromotionCodeSearch,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PromotionCodeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PromotionCodeSearchAdvanced,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PromotionCodeSearch", [0, 1]],
      ["columns", "PromotionCodeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => PromotionCodeSearchRow,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PromotionCodeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PromotionCodeCurrency,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeCurrency"),
    :schema_element => [
      ["currency", "RecordRef", [0, 1]],
      ["minimumOrderAmount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => PromotionCodeCurrencyList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeCurrencyList"),
    :schema_element => [
      ["currency", "PromotionCodeCurrency[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => ItemDemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "ItemDemandPlan"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["year", "SOAP::SOAPLong", [0, 1]],
      ["month", "DemandPlanMonth", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["demandPlanCalendarType", "DemandPlanCalendarType", [0, 1]],
      ["demandPlanMatrix", "DemandPlanMatrix", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  EncodedRegistry.register(
    :class => DemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "DemandPlan"),
    :schema_element => [
      ["startDate", "SOAP::SOAPDateTime"],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["calculatedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["periodDemandPlanList", "PeriodDemandPlanList", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => DemandPlanMatrix,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "DemandPlanMatrix"),
    :schema_element => [
      ["demandPlan", "DemandPlan[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  EncodedRegistry.register(
    :class => PeriodDemandPlanList,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "PeriodDemandPlanList"),
    :schema_element => [
      ["periodDemandPlan", "PeriodDemandPlan[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => PeriodDemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "PeriodDemandPlan"),
    :schema_element => [
      ["quantity", "SOAP::SOAPDouble"],
      ["dayOfTheWeek", "DayOfTheWeek", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemDemandPlanSearch,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "ItemDemandPlanSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ItemDemandPlanSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["lastAlternateSourceItemJoin", "ItemSearchBasic", [0, 1]],
      ["locationJoin", "LocationSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ItemDemandPlanSearchRow,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "ItemDemandPlanSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ItemDemandPlanSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["lastAlternateSourceItemJoin", "ItemSearchRowBasic", [0, 1]],
      ["locationJoin", "LocationSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "RecordType")
  )

  EncodedRegistry.register(
    :class => SearchRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecordType")
  )

  EncodedRegistry.register(
    :class => GetAllRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "GetAllRecordType")
  )

  EncodedRegistry.register(
    :class => GetCustomizationType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "GetCustomizationType")
  )

  EncodedRegistry.register(
    :class => InitializeType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeType")
  )

  EncodedRegistry.register(
    :class => InitializeRefType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeRefType")
  )

  EncodedRegistry.register(
    :class => InitializeAuxRefType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeAuxRefType")
  )

  EncodedRegistry.register(
    :class => DeletedRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "DeletedRecordType")
  )

  EncodedRegistry.register(
    :class => AsyncStatusType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "AsyncStatusType")
  )

  EncodedRegistry.register(
    :class => SearchStringFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchStringFieldOperator")
  )

  EncodedRegistry.register(
    :class => SearchLongFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchLongFieldOperator")
  )

  EncodedRegistry.register(
    :class => SearchTextNumberFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchTextNumberFieldOperator")
  )

  EncodedRegistry.register(
    :class => SearchDoubleFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDoubleFieldOperator")
  )

  EncodedRegistry.register(
    :class => SearchDateFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDateFieldOperator")
  )

  EncodedRegistry.register(
    :class => SearchEnumMultiSelectFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectFieldOperator")
  )

  EncodedRegistry.register(
    :class => SearchMultiSelectFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectFieldOperator")
  )

  EncodedRegistry.register(
    :class => SearchDate,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDate")
  )

  EncodedRegistry.register(
    :class => DurationUnit,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "DurationUnit")
  )

  EncodedRegistry.register(
    :class => CalendarEventAttendeeResponse,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "CalendarEventAttendeeResponse")
  )

  EncodedRegistry.register(
    :class => GetSelectValueFilterOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectValueFilterOperator")
  )

  EncodedRegistry.register(
    :class => StatusDetailType,
    :schema_type => XSD::QName.new(NsTypesFaults_2012_1PlatformWebservicesNetsuiteCom, "StatusDetailType")
  )

  EncodedRegistry.register(
    :class => StatusDetailCodeType,
    :schema_type => XSD::QName.new(NsTypesFaults_2012_1PlatformWebservicesNetsuiteCom, "StatusDetailCodeType")
  )

  EncodedRegistry.register(
    :class => FaultCodeType,
    :schema_type => XSD::QName.new(NsTypesFaults_2012_1PlatformWebservicesNetsuiteCom, "FaultCodeType")
  )

  EncodedRegistry.register(
    :class => Country,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "Country")
  )

  EncodedRegistry.register(
    :class => Language,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "Language")
  )

  EncodedRegistry.register(
    :class => AvsMatchCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "AvsMatchCode")
  )

  EncodedRegistry.register(
    :class => CscMatchCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "CscMatchCode")
  )

  EncodedRegistry.register(
    :class => CostingMethod,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "CostingMethod")
  )

  EncodedRegistry.register(
    :class => VsoeSopGroup,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "VsoeSopGroup")
  )

  EncodedRegistry.register(
    :class => VsoeDeferral,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "VsoeDeferral")
  )

  EncodedRegistry.register(
    :class => VsoePermitDiscount,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "VsoePermitDiscount")
  )

  EncodedRegistry.register(
    :class => RevenueStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "RevenueStatus")
  )

  EncodedRegistry.register(
    :class => RevenueCommitStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "RevenueCommitStatus")
  )

  EncodedRegistry.register(
    :class => PostingPeriodDate,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "PostingPeriodDate")
  )

  EncodedRegistry.register(
    :class => PermissionLevel,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "PermissionLevel")
  )

  EncodedRegistry.register(
    :class => Source,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "Source")
  )

  EncodedRegistry.register(
    :class => GlobalSubscriptionStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "GlobalSubscriptionStatus")
  )

  EncodedRegistry.register(
    :class => ItemCostEstimateType,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "ItemCostEstimateType")
  )

  EncodedRegistry.register(
    :class => PresentationItemType,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "PresentationItemType")
  )

  EncodedRegistry.register(
    :class => LandedCostSource,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "LandedCostSource")
  )

  EncodedRegistry.register(
    :class => LandedCostMethod,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "LandedCostMethod")
  )

  EncodedRegistry.register(
    :class => SitemapPriority,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "SitemapPriority")
  )

  EncodedRegistry.register(
    :class => TimeItemTimeType,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "TimeItemTimeType")
  )

  EncodedRegistry.register(
    :class => PermissionCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "PermissionCode")
  )

  EncodedRegistry.register(
    :class => IntercoStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "IntercoStatus")
  )

  EncodedRegistry.register(
    :class => CalendarEventAccessLevel,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAccessLevel")
  )

  EncodedRegistry.register(
    :class => CalendarEventAttendeeAttendance,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeAttendance")
  )

  EncodedRegistry.register(
    :class => CalendarEventFrequency,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventFrequency")
  )

  EncodedRegistry.register(
    :class => CalendarEventDow,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventDow")
  )

  EncodedRegistry.register(
    :class => CalendarEventDowim,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventDowim")
  )

  EncodedRegistry.register(
    :class => CalendarEventReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderMinutes")
  )

  EncodedRegistry.register(
    :class => CalendarEventReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderType")
  )

  EncodedRegistry.register(
    :class => CalendarEventStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventStatus")
  )

  EncodedRegistry.register(
    :class => TaskPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskPriority")
  )

  EncodedRegistry.register(
    :class => TaskReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskReminderMinutes")
  )

  EncodedRegistry.register(
    :class => TaskReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskReminderType")
  )

  EncodedRegistry.register(
    :class => TaskStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskStatus")
  )

  EncodedRegistry.register(
    :class => PhoneCallPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallPriority")
  )

  EncodedRegistry.register(
    :class => PhoneCallReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderMinutes")
  )

  EncodedRegistry.register(
    :class => PhoneCallReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderType")
  )

  EncodedRegistry.register(
    :class => PhoneCallStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallStatus")
  )

  EncodedRegistry.register(
    :class => ProjectTaskPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskPriority")
  )

  EncodedRegistry.register(
    :class => ProjectTaskStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskStatus")
  )

  EncodedRegistry.register(
    :class => ProjectTaskConstraintType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskConstraintType")
  )

  EncodedRegistry.register(
    :class => ProjectTaskPredecessorPredecessorType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessorPredecessorType")
  )

  EncodedRegistry.register(
    :class => NoteDirection,
    :schema_type => XSD::QName.new(NsTypesCommunication_2012_1GeneralWebservicesNetsuiteCom, "NoteDirection")
  )

  EncodedRegistry.register(
    :class => MessageMessageType,
    :schema_type => XSD::QName.new(NsTypesCommunication_2012_1GeneralWebservicesNetsuiteCom, "MessageMessageType")
  )

  EncodedRegistry.register(
    :class => MediaType,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "MediaType")
  )

  EncodedRegistry.register(
    :class => FileAttachFrom,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileAttachFrom")
  )

  EncodedRegistry.register(
    :class => FileEncoding,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileEncoding")
  )

  EncodedRegistry.register(
    :class => TextFileEncoding,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "TextFileEncoding")
  )

  EncodedRegistry.register(
    :class => EntityType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityType")
  )

  EncodedRegistry.register(
    :class => CustomerStatusStage,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStatusStage")
  )

  EncodedRegistry.register(
    :class => ContactType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactType")
  )

  EncodedRegistry.register(
    :class => CustomerStage,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStage")
  )

  EncodedRegistry.register(
    :class => CustomerCreditHoldOverride,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerCreditHoldOverride")
  )

  EncodedRegistry.register(
    :class => CustomerMonthlyClosing,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerMonthlyClosing")
  )

  EncodedRegistry.register(
    :class => EmailPreference,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EmailPreference")
  )

  EncodedRegistry.register(
    :class => EntityGroupType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupType")
  )

  EncodedRegistry.register(
    :class => EntityGroupDailyTime,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupDailyTime")
  )

  EncodedRegistry.register(
    :class => EntityGroupDefView,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupDefView")
  )

  EncodedRegistry.register(
    :class => EntityGroupPeriodSize,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupPeriodSize")
  )

  EncodedRegistry.register(
    :class => TaxFractionUnit,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "TaxFractionUnit")
  )

  EncodedRegistry.register(
    :class => TaxRounding,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "TaxRounding")
  )

  EncodedRegistry.register(
    :class => JobBillingType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "JobBillingType")
  )

  EncodedRegistry.register(
    :class => PartnerOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerOtherRelationships")
  )

  EncodedRegistry.register(
    :class => CustomerOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerOtherRelationships")
  )

  EncodedRegistry.register(
    :class => VendorOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorOtherRelationships")
  )

  EncodedRegistry.register(
    :class => SupportCaseStatusStage,
    :schema_type => XSD::QName.new(NsTypesSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseStatusStage")
  )

  EncodedRegistry.register(
    :class => SupportCaseStage,
    :schema_type => XSD::QName.new(NsTypesSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseStage")
  )

  EncodedRegistry.register(
    :class => SolutionStatus,
    :schema_type => XSD::QName.new(NsTypesSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionStatus")
  )

  EncodedRegistry.register(
    :class => IssueEventStatus,
    :schema_type => XSD::QName.new(NsTypesSupport_2012_1ListsWebservicesNetsuiteCom, "IssueEventStatus")
  )

  EncodedRegistry.register(
    :class => IssueTrackCode,
    :schema_type => XSD::QName.new(NsTypesSupport_2012_1ListsWebservicesNetsuiteCom, "IssueTrackCode")
  )

  EncodedRegistry.register(
    :class => CurrencyLocale,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "CurrencyLocale")
  )

  EncodedRegistry.register(
    :class => AccountType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountType")
  )

  EncodedRegistry.register(
    :class => ItemCostingMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemCostingMethod")
  )

  EncodedRegistry.register(
    :class => ItemProductFeed,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemProductFeed")
  )

  EncodedRegistry.register(
    :class => ItemType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemType")
  )

  EncodedRegistry.register(
    :class => ItemWeightUnit,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemWeightUnit")
  )

  EncodedRegistry.register(
    :class => ItemPreferenceCriterion,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemPreferenceCriterion")
  )

  EncodedRegistry.register(
    :class => ItemOverallQuantityPricingType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemOverallQuantityPricingType")
  )

  EncodedRegistry.register(
    :class => ScheduleBCode,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ScheduleBCode")
  )

  EncodedRegistry.register(
    :class => ItemSubType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSubType")
  )

  EncodedRegistry.register(
    :class => CurrencyCurrencyPrecision,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "CurrencyCurrencyPrecision")
  )

  EncodedRegistry.register(
    :class => CurrencyFxRateUpdateTimezone,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "CurrencyFxRateUpdateTimezone")
  )

  EncodedRegistry.register(
    :class => SalesTaxItemAvailable,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesTaxItemAvailable")
  )

  EncodedRegistry.register(
    :class => ItemEbayAuctionDuration,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemEbayAuctionDuration")
  )

  EncodedRegistry.register(
    :class => ItemOutOfStockBehavior,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemOutOfStockBehavior")
  )

  EncodedRegistry.register(
    :class => ItemEbayRelistingOption,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemEbayRelistingOption")
  )

  EncodedRegistry.register(
    :class => ConsolidatedRate,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ConsolidatedRate")
  )

  EncodedRegistry.register(
    :class => CashFlowRateType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "CashFlowRateType")
  )

  EncodedRegistry.register(
    :class => GeneralRateType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "GeneralRateType")
  )

  EncodedRegistry.register(
    :class => ItemMatrixType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemMatrixType")
  )

  EncodedRegistry.register(
    :class => ItemDemandSource,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemDemandSource")
  )

  EncodedRegistry.register(
    :class => ItemSupplyLotSizingMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSupplyLotSizingMethod")
  )

  EncodedRegistry.register(
    :class => ItemSupplyType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSupplyType")
  )

  EncodedRegistry.register(
    :class => ItemSupplyReplenishmentMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSupplyReplenishmentMethod")
  )

  EncodedRegistry.register(
    :class => RevRecScheduleRecogIntervalSrc,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleRecogIntervalSrc")
  )

  EncodedRegistry.register(
    :class => RevRecScheduleRecurrenceType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrenceType")
  )

  EncodedRegistry.register(
    :class => RevRecScheduleAmortizationType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleAmortizationType")
  )

  EncodedRegistry.register(
    :class => CostCategoryItemCostType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "CostCategoryItemCostType")
  )

  EncodedRegistry.register(
    :class => ItemAtpMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemAtpMethod")
  )

  EncodedRegistry.register(
    :class => SalesOrderItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemCommitInventory")
  )

  EncodedRegistry.register(
    :class => SalesOrderItemCreatePo,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemCreatePo")
  )

  EncodedRegistry.register(
    :class => SalesOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderOrderStatus")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentExportTypeUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentExportTypeUps")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentLicenseExceptionUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentLicenseExceptionUps")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentMethodOfTransportUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentMethodOfTransportUps")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentThirdPartyTypeUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeUps")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageUpsCodMethodUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsCodMethodUps")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageUpsDeliveryConfUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsDeliveryConfUps")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageUpsPackagingUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsPackagingUps")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageUspsDeliveryConfUsps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsDeliveryConfUsps")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageUspsPackagingUsps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsPackagingUsps")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentB13AFilingOptionFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentB13AFilingOptionFedEx")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentHomeDeliveryTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentHomeDeliveryTypeFedEx")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentThirdPartyTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeFedEx")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageFedExAdmPackageTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExAdmPackageTypeFedEx")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageFedExCodMethodFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodMethodFedEx")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageFedExDeliveryConfFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExDeliveryConfFedEx")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageFedExPackagingFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExPackagingFedEx")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageFedExSignatureOptionsFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExSignatureOptionsFedEx")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentTermsOfSaleFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentTermsOfSaleFedEx")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentShipStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentShipStatus")
  )

  EncodedRegistry.register(
    :class => OpportunityStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityStatus")
  )

  EncodedRegistry.register(
    :class => TransactionType,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionType")
  )

  EncodedRegistry.register(
    :class => TransactionStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionStatus")
  )

  EncodedRegistry.register(
    :class => TransactionPaymentEventResult,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventResult")
  )

  EncodedRegistry.register(
    :class => TransactionPaymentEventType,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventType")
  )

  EncodedRegistry.register(
    :class => TransactionPaymentEventHoldReason,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventHoldReason")
  )

  EncodedRegistry.register(
    :class => ItemFulfillmentPackageFedExCodFreightTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodFreightTypeFedEx")
  )

  EncodedRegistry.register(
    :class => TransactionLinkType,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionLinkType")
  )

  EncodedRegistry.register(
    :class => ForecastType,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ForecastType")
  )

  EncodedRegistry.register(
    :class => TransactionLineType,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionLineType")
  )

  EncodedRegistry.register(
    :class => TransactionApprovalStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionApprovalStatus")
  )

  EncodedRegistry.register(
    :class => PurchaseOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderOrderStatus")
  )

  EncodedRegistry.register(
    :class => TransactionBillVarianceStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2012_1TransactionsWebservicesNetsuiteCom, "TransactionBillVarianceStatus")
  )

  EncodedRegistry.register(
    :class => VendorReturnAuthorizationOrderStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationOrderStatus")
  )

  EncodedRegistry.register(
    :class => ReturnAuthorizationOrderStatus,
    :schema_type => XSD::QName.new(NsTypesCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationOrderStatus")
  )

  EncodedRegistry.register(
    :class => BudgetBudgetType,
    :schema_type => XSD::QName.new(NsTypesFinancial_2012_1TransactionsWebservicesNetsuiteCom, "BudgetBudgetType")
  )

  EncodedRegistry.register(
    :class => TransferOrderItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesInventory_2012_1TransactionsWebservicesNetsuiteCom, "TransferOrderItemCommitInventory")
  )

  EncodedRegistry.register(
    :class => TransferOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesInventory_2012_1TransactionsWebservicesNetsuiteCom, "TransferOrderOrderStatus")
  )

  EncodedRegistry.register(
    :class => WorkOrderItemItemCreatePo,
    :schema_type => XSD::QName.new(NsTypesInventory_2012_1TransactionsWebservicesNetsuiteCom, "WorkOrderItemItemCreatePo")
  )

  EncodedRegistry.register(
    :class => WorkOrderItemItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesInventory_2012_1TransactionsWebservicesNetsuiteCom, "WorkOrderItemItemCommitInventory")
  )

  EncodedRegistry.register(
    :class => CustomizationFieldType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationFieldType")
  )

  EncodedRegistry.register(
    :class => CustomizationDynamicDefault,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationDynamicDefault")
  )

  EncodedRegistry.register(
    :class => CustomizationDisplayType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationDisplayType")
  )

  EncodedRegistry.register(
    :class => CustomizationFilterCompareType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationFilterCompareType")
  )

  EncodedRegistry.register(
    :class => CustomRecordTypePermissionsPermittedLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsPermittedLevel")
  )

  EncodedRegistry.register(
    :class => CustomRecordTypePermissionsRestriction,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsRestriction")
  )

  EncodedRegistry.register(
    :class => ItemCustomFieldItemSubType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemCustomFieldItemSubType")
  )

  EncodedRegistry.register(
    :class => CustomizationAccessLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationAccessLevel")
  )

  EncodedRegistry.register(
    :class => CustomizationSearchLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationSearchLevel")
  )

  EncodedRegistry.register(
    :class => CustomRecordTypeAccessType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeAccessType")
  )

  EncodedRegistry.register(
    :class => EmployeePayFrequency,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeePayFrequency")
  )

  EncodedRegistry.register(
    :class => EmployeeUseTimeData,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeUseTimeData")
  )

  EncodedRegistry.register(
    :class => EmployeeCommissionPaymentPreference,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeCommissionPaymentPreference")
  )

  EncodedRegistry.register(
    :class => Gender,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "Gender")
  )

  EncodedRegistry.register(
    :class => EmployeeAccruedTimeAccrualMethod,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeAccruedTimeAccrualMethod")
  )

  EncodedRegistry.register(
    :class => EmployeeDirectDepositAccountStatus,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeDirectDepositAccountStatus")
  )

  EncodedRegistry.register(
    :class => TimeBillTimeType,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1TransactionsWebservicesNetsuiteCom, "TimeBillTimeType")
  )

  EncodedRegistry.register(
    :class => CampaignCampaignDirectMailStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignCampaignDirectMailStatus")
  )

  EncodedRegistry.register(
    :class => CampaignCampaignEmailStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignCampaignEmailStatus")
  )

  EncodedRegistry.register(
    :class => CampaignCampaignEventStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignCampaignEventStatus")
  )

  EncodedRegistry.register(
    :class => CampaignChannelEventType,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignChannelEventType")
  )

  EncodedRegistry.register(
    :class => CampaignResponseResponse,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponseResponse")
  )

  EncodedRegistry.register(
    :class => CampaignCampaignEventType,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignCampaignEventType")
  )

  EncodedRegistry.register(
    :class => CampaignResponse_,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponse")
  )

  EncodedRegistry.register(
    :class => CampaignStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignStatus")
  )

  EncodedRegistry.register(
    :class => PromotionCodeApplyDiscountTo,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeApplyDiscountTo")
  )

  EncodedRegistry.register(
    :class => CampaignResponseCategory,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponseCategory")
  )

  EncodedRegistry.register(
    :class => DemandPlanCalendarType,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "DemandPlanCalendarType")
  )

  EncodedRegistry.register(
    :class => DemandPlanMonth,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "DemandPlanMonth")
  )

  EncodedRegistry.register(
    :class => DayOfTheWeek,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "DayOfTheWeek")
  )

  EncodedRegistry.register(
    :class => ItemDemandPlanProjectionMethod,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "ItemDemandPlanProjectionMethod")
  )

  LiteralRegistry.register(
    :class => Passport,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Passport"),
    :schema_element => [
      ["email", "SOAP::SOAPString"],
      ["password", "SOAP::SOAPString"],
      ["account", "SOAP::SOAPString"],
      ["role", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SsoPassport,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SsoPassport"),
    :schema_element => [
      ["authenticationToken", "SOAP::SOAPString"],
      ["partnerId", "SOAP::SOAPString"],
      ["partnerAccount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SsoCredentials,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SsoCredentials"),
    :schema_element => [
      ["email", "SOAP::SOAPString"],
      ["password", "SOAP::SOAPString"],
      ["account", "SOAP::SOAPString"],
      ["role", "RecordRef", [0, 1]],
      ["authenticationToken", "SOAP::SOAPString"],
      ["partnerId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => ChangePasswordOrEmailCredentials,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailCredentials"),
    :schema_element => [
      ["currentPassword", "SOAP::SOAPString"],
      ["newEmail", "SOAP::SOAPString"],
      ["newEmail2", "SOAP::SOAPString"],
      ["newPassword", "SOAP::SOAPString", [0, 1]],
      ["newPassword2", "SOAP::SOAPString", [0, 1]],
      ["justThisAccount", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => StatusDetail,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "StatusDetail"),
    :schema_element => [
      ["code", "StatusDetailCodeType"],
      ["message", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Status,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Status"),
    :schema_element => [
      ["statusDetail", "StatusDetail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "isSuccess") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => WsRole,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "WsRole"),
    :schema_element => [
      ["role", "RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isLoggedInRole", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => WsRoleList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "WsRoleList"),
    :schema_element => [
      ["wsRole", "WsRole[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NullField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "NullField"),
    :schema_element => [
      ["name", "SOAP::SOAPString[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["searchId", "SOAP::SOAPString", [0, 1]],
      ["recordList", "RecordList", [0, 1]],
      ["searchRowList", "SearchRowList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncStatusResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "AsyncStatusResult"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["status", "AsyncStatusType"],
      ["percentCompleted", "SOAP::SOAPDouble"],
      ["estRemainingDuration", "SOAP::SOAPDouble"]
    ]
  )

  LiteralRegistry.register(
    :class => GetAllResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetAllResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordList", "RecordList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetSavedSearchResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSavedSearchResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordRefList", "RecordRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetCustomizationIdResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetCustomizationIdResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["customizationRefList", "CustomizationRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetSelectValueResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectValueResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["baseRefList", "BaseRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RecordList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "RecordList"),
    :schema_element => [
      ["record", "Record[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchRowList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRowList"),
    :schema_element => [
      ["searchRow", "SearchRow[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => RecordRefList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "RecordRefList"),
    :schema_element => [
      ["recordRef", "RecordRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => BaseRefList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRefList"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => RecordRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "RecordRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "type") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Duration,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Duration"),
    :schema_element => [
      ["timeSpan", "SOAP::SOAPDouble"],
      ["unit", "DurationUnit"]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomRecordRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomizationRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomizationRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "scriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "type") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomizationRefList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomizationRefList"),
    :schema_element => [
      ["customizationRef", "CustomizationRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => InitializeRecord,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeRecord"),
    :schema_element => [
      ["type", "InitializeType"],
      ["reference", "InitializeRef"],
      ["auxReference", "InitializeAuxRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InitializeRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString",
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InitializeAuxRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeAuxRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BaseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "type") => "SOAP::SOAPString",
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => UpdateInviteeStatusReference,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusReference"),
    :schema_element => [
      ["eventId", "RecordRef"],
      ["responseCode", "CalendarEventAttendeeResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => GetAllRecord,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetAllRecord"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "recordType") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => GetSavedSearchRecord,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSavedSearchRecord"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "searchType") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomizationType,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomizationType"),
    :schema_element => [],
    :schema_attribute => {
      XSD::QName.new(nil, "getCustomizationType") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ListOrRecordRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ListOrRecordRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => LongCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "LongCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPLong"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DoubleCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DoubleCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BooleanCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BooleanCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPBoolean"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => StringCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "StringCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPString"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DateCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DateCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "SOAP::SOAPDateTime"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SelectCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SelectCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "ListOrRecordRef"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => MultiSelectCustomFieldRef,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "MultiSelectCustomFieldRef"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
    :schema_element => [
      ["value", "ListOrRecordRef[]", [1, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "CustomFieldList"),
    :schema_element => [
      ["customField", "CustomFieldRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchBooleanField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchBooleanField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchStringField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchStringField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchLongField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchLongField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPLong", [0, 1]],
      ["searchValue2", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchTextNumberField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchTextNumberField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]],
      ["searchValue2", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchDoubleField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDoubleField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPDouble", [0, 1]],
      ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchDateField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDateField"),
    :schema_element => [
      ["predefinedSearchValue", "SearchDate", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
      ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchEnumMultiSelectField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchMultiSelectField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectField"),
    :schema_element => [
      ["searchValue", "RecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchBooleanCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchBooleanCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchStringCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchStringCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchLongCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchLongCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPLong", [0, 1]],
      ["searchValue2", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchDoubleCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDoubleCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPDouble", [0, 1]],
      ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchDateCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDateCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["predefinedSearchValue", "SearchDate", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
      ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchEnumMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
    :schema_element => [
      ["searchValue", "ListOrRecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchCustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchCustomFieldList"),
    :schema_element => [
      ["customField", "SearchCustomField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchColumnBooleanField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnBooleanField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchColumnStringField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnStringField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchColumnLongField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnLongField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchColumnTextNumberField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnTextNumberField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchColumnDoubleField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnDoubleField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchColumnDateField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnDateField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchColumnEnumSelectField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnEnumSelectField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchColumnSelectField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnSelectField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchColumnBooleanCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnBooleanCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchColumnStringCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnStringCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchColumnLongCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnLongCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPLong", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchColumnDoubleCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnDoubleCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchColumnDateCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnDateCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPDateTime", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchColumnEnumMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnEnumMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "SOAP::SOAPString[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchColumnSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "ListOrRecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchColumnMultiSelectCustomField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnMultiSelectCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomField"),
    :schema_element => [
      ["customLabel", "SOAP::SOAPString", [0, 1]],
      ["searchValue", "ListOrRecordRef[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SearchColumnCustomFieldList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchColumnCustomFieldList"),
    :schema_element => [
      ["customField", "SearchColumnCustomField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemAvailabilityFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ItemAvailabilityFilter"),
    :schema_element => [
      ["item", "RecordRefList"],
      ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemAvailability,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ItemAvailability"),
    :schema_element => [
      ["item", "RecordRef"],
      ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]],
      ["locationId", "RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemAvailabilityList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ItemAvailabilityList"),
    :schema_element => [
      ["itemAvailability", "ItemAvailability[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetItemAvailabilityResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResult"),
    :schema_element => [
      ["status", "Status"],
      ["itemAvailabilityList", "ItemAvailabilityList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BudgetExchangeRateFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BudgetExchangeRateFilter"),
    :schema_element => [
      ["period", "RecordRef"],
      ["fromSubsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BudgetExchangeRate,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BudgetExchangeRate"),
    :schema_element => [
      ["period", "RecordRef"],
      ["fromSubsidiary", "RecordRef"],
      ["toSubsidiary", "RecordRef"],
      ["currentRate", "SOAP::SOAPDouble", [0, 1]],
      ["averageRate", "SOAP::SOAPDouble", [0, 1]],
      ["historicalRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BudgetExchangeRateList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "BudgetExchangeRateList"),
    :schema_element => [
      ["budgetExchangeRate", "BudgetExchangeRate[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetBudgetExchangeRateResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateResult"),
    :schema_element => [
      ["status", "Status"],
      ["budgetExchangeRateList", "BudgetExchangeRateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ConsolidatedExchangeRateFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRateFilter"),
    :schema_element => [
      ["period", "RecordRef"],
      ["fromSubsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ConsolidatedExchangeRate,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRate"),
    :schema_element => [
      ["period", "RecordRef"],
      ["fromSubsidiary", "RecordRef"],
      ["toSubsidiary", "RecordRef"],
      ["currentRate", "SOAP::SOAPDouble", [0, 1]],
      ["averageRate", "SOAP::SOAPDouble", [0, 1]],
      ["historicalRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ConsolidatedExchangeRateList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "ConsolidatedExchangeRateList"),
    :schema_element => [
      ["consolidatedExchangeRate", "ConsolidatedExchangeRate[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetConsolidatedExchangeRateResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateResult"),
    :schema_element => [
      ["status", "Status"],
      ["consolidatedExchangeRateList", "ConsolidatedExchangeRateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PostingTransactionSummaryField,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryField"),
    :schema_element => [
      ["period", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "SOAP::SOAPBoolean", [0, 1]],
      ["parentItem", "SOAP::SOAPBoolean", [0, 1]],
      ["item", "SOAP::SOAPBoolean", [0, 1]],
      ["customer", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["SOAP::SOAPBoolean", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiary", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PostingTransactionSummaryFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryFilter"),
    :schema_element => [
      ["period", "RecordRefList", [0, 1]],
      ["account", "RecordRefList", [0, 1]],
      ["parentItem", "RecordRefList", [0, 1]],
      ["item", "RecordRefList", [0, 1]],
      ["customer", "RecordRefList", [0, 1]],
      ["department", "RecordRefList", [0, 1]],
      ["v_class", ["RecordRefList", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRefList", [0, 1]],
      ["subsidiary", "RecordRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PostingTransactionSummary,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "PostingTransactionSummary"),
    :schema_element => [
      ["period", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["parentItem", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble"]
    ]
  )

  LiteralRegistry.register(
    :class => PostingTransactionSummaryList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "PostingTransactionSummaryList"),
    :schema_element => [
      ["postingTransactionSummary", "PostingTransactionSummary[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetPostingTransactionSummaryResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["postingTransactionSummaryList", "PostingTransactionSummaryList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetSelectValueFieldDescription,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectValueFieldDescription"),
    :schema_element => [
      ["recordType", "RecordType", [0, 1]],
      ["customRecordType", "RecordRef", [0, 1]],
      ["sublist", "SOAP::SOAPString", [0, 1]],
      ["field", "SOAP::SOAPString"],
      ["customForm", "RecordRef", [0, 1]],
      ["filter", "GetSelectValueFilter", [0, 1]],
      ["filterByValueList", "GetSelectFilterByFieldValueList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetSelectValueFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectValueFilter"),
    :schema_element => [
      ["filterValue", "SOAP::SOAPString"]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => GetSelectFilterByFieldValueList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectFilterByFieldValueList"),
    :schema_element => [
      ["filterBy", "GetSelectFilterByFieldValue[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetSelectFilterByFieldValue,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectFilterByFieldValue"),
    :schema_element => [
      ["sublist", "SOAP::SOAPString", [0, 1]],
      ["field", "SOAP::SOAPString"],
      ["internalId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => GetServerTimeResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetServerTimeResult"),
    :schema_element => [
      ["status", "Status"],
      ["serverTime", "SOAP::SOAPDateTime"]
    ]
  )

  LiteralRegistry.register(
    :class => DeletedRecord,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DeletedRecord"),
    :schema_element => [
      ["deletedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["record", "BaseRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => DeletedRecordList,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DeletedRecordList"),
    :schema_element => [
      ["deletedRecord", "DeletedRecord[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetDeletedResult,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetDeletedResult"),
    :schema_element => [
      ["status", "Status"],
      ["deletedRecordList", "DeletedRecordList"]
    ]
  )

  LiteralRegistry.register(
    :class => GetDeletedFilter,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "GetDeletedFilter"),
    :schema_element => [
      ["deletedDate", "SearchDateField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AttachContactReference,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "AttachContactReference"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "AttachReference"),
    :schema_element => [
      ["attachTo", "BaseRef"],
      ["contact", "RecordRef"],
      ["contactRole", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AttachBasicReference,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "AttachBasicReference"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "AttachReference"),
    :schema_element => [
      ["attachTo", "BaseRef"],
      ["attachedRecord", "BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => DetachBasicReference,
    :schema_type => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DetachBasicReference"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "DetachReference"),
    :schema_element => [
      ["detachFrom", "BaseRef"],
      ["detachedRecord", "BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => SoapFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => InsufficientPermissionFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "InsufficientPermissionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => InvalidAccountFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "InvalidAccountFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => InvalidCredentialsFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "InvalidCredentialsFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => InvalidSessionFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "InvalidSessionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => ExceededRequestLimitFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "ExceededRequestLimitFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => ExceededUsageLimitFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "ExceededUsageLimitFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => ExceededRecordCountFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "ExceededRecordCountFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => InvalidVersionFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "InvalidVersionFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => ExceededRequestSizeFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "ExceededRequestSizeFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "AsyncFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => UnexpectedErrorFault,
    :schema_type => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "UnexpectedErrorFault"),
    :schema_basetype => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "SoapFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => ApplicationInfo,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ApplicationInfo"),
    :schema_element => [
      ["applicationId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerInfo,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "PartnerInfo"),
    :schema_element => [
      ["partnerId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => DocumentInfo,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DocumentInfo"),
    :schema_element => [
      ["nsId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => Preferences,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "Preferences"),
    :schema_element => [
      ["warningAsError", "SOAP::SOAPBoolean", [0, 1]],
      ["disableMandatoryCustomFieldValidation", "SOAP::SOAPBoolean", [0, 1]],
      ["disableSystemNotesForCustomFields", "SOAP::SOAPBoolean", [0, 1]],
      ["ignoreReadOnlyFields", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchPreferences,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchPreferences"),
    :schema_element => [
      ["bodyFieldsOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["returnSearchColumns", "SOAP::SOAPBoolean", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SessionResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SessionResponse"),
    :schema_element => [
      ["status", ["Status", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "status")]],
      ["userId", "RecordRef", [0, 1]],
      ["wsRoleList", ["WsRoleList", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "wsRoleList")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => WriteResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "WriteResponse"),
    :schema_element => [
      ["status", ["Status", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "status")]],
      ["baseRef", "BaseRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ReadResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ReadResponse"),
    :schema_element => [
      ["status", ["Status", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "status")]],
      ["record", "Record", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => WriteResponseList,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "WriteResponseList"),
    :schema_element => [
      ["writeResponse", "WriteResponse[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ReadResponseList,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ReadResponseList"),
    :schema_element => [
      ["readResponse", "ReadResponse[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => LoginResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "LoginResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => SsoLoginResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SsoLoginResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => MapSsoResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "MapSsoResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => ChangePasswordOrEmailResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => LogoutResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "LogoutResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => AddResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AddResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => AddListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AddListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => UpsertResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpsertResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => UpsertListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpsertListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => DeleteResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DeleteResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => DeleteListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DeleteListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => SearchResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchMoreResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchMoreResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchMoreWithIdResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchMoreWithIdResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchNextResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchNextResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetResponse"),
    :schema_element => [
      ["readResponse", "ReadResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => GetListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetListResponse"),
    :schema_element => [
      ["readResponseList", "ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => GetAllResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetAllResponse"),
    :schema_element => [
      ["getAllResult", ["GetAllResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getAllResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetSavedSearchResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetSavedSearchResponse"),
    :schema_element => [
      ["getSavedSearchResult", ["GetSavedSearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getSavedSearchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetCustomizationIdResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetCustomizationIdResponse"),
    :schema_element => [
      ["getCustomizationIdResult", ["GetCustomizationIdResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getCustomizationIdResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => InitializeResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "InitializeResponse"),
    :schema_element => [
      ["readResponse", "ReadResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => InitializeListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "InitializeListResponse"),
    :schema_element => [
      ["readResponseList", "ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => GetSelectValueResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getSelectValueResponse"),
    :schema_element => [
      ["getSelectValueResult", ["GetSelectValueResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getSelectValueResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetItemAvailabilityResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResponse"),
    :schema_element => [
      ["getItemAvailabilityResult", ["GetItemAvailabilityResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetBudgetExchangeRateResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateResponse"),
    :schema_element => [
      ["getBudgetExchangeRateResult", ["GetBudgetExchangeRateResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getBudgetExchangeRateResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetConsolidatedExchangeRateResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateResponse"),
    :schema_element => [
      ["getConsolidatedExchangeRateResult", ["GetConsolidatedExchangeRateResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRateResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetPostingTransactionSummaryResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryResponse"),
    :schema_element => [
      ["getPostingTransactionSummaryResult", ["GetPostingTransactionSummaryResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getPostingTransactionSummaryResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetServerTimeResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetServerTimeResponse"),
    :schema_element => [
      ["getServerTimeResult", ["GetServerTimeResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getServerTimeResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => AttachResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AttachResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => DetachResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DetachResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateInviteeStatusResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateInviteeStatusListResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncStatusResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncStatusResponse"),
    :schema_element => [
      ["asyncStatusResult", ["AsyncStatusResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAsyncResultResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetAsyncResultResponse"),
    :schema_element => [
      ["asyncResult", "AsyncResult"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncAddListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncAddListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncUpdateListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncUpdateListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncUpsertListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncUpsertListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncDeleteListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncDeleteListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncGetListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncGetListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["readResponseList", "ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncSearchResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncSearchResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncInitializeListResult,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncInitializeListResult"),
    :schema_basetype => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => GetDeletedResponse,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetDeletedResponse"),
    :schema_element => [
      ["getDeletedResult", ["GetDeletedResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getDeletedResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => LoginRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "LoginRequest"),
    :schema_element => [
      ["passport", "Passport"]
    ]
  )

  LiteralRegistry.register(
    :class => SsoLoginRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SsoLoginRequest"),
    :schema_element => [
      ["ssoPassport", "SsoPassport"]
    ]
  )

  LiteralRegistry.register(
    :class => MapSsoRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "MapSsoRequest"),
    :schema_element => [
      ["ssoCredentials", "SsoCredentials"]
    ]
  )

  LiteralRegistry.register(
    :class => ChangePasswordOrEmailRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailRequest"),
    :schema_element => [
      ["changePasswordOrEmailCredentials", "ChangePasswordOrEmailCredentials"]
    ]
  )

  LiteralRegistry.register(
    :class => LogoutRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "LogoutRequest"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => AddRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AddRequest"),
    :schema_element => [
      ["record", "Record"]
    ]
  )

  LiteralRegistry.register(
    :class => DeleteRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DeleteRequest"),
    :schema_element => [
      ["baseRef", "BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => SearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchRequest"),
    :schema_element => [
      ["searchRecord", "SearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => SearchMoreRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchMoreRequest"),
    :schema_element => [
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => SearchMoreWithIdRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchMoreWithIdRequest"),
    :schema_element => [
      ["searchId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => SearchNextRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "SearchNextRequest"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => UpdateRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateRequest"),
    :schema_element => [
      ["record", "Record"]
    ]
  )

  LiteralRegistry.register(
    :class => UpsertRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpsertRequest"),
    :schema_element => [
      ["record", "Record"]
    ]
  )

  LiteralRegistry.register(
    :class => AddListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AddListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => DeleteListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DeleteListRequest"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UpsertListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpsertListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetRequest"),
    :schema_element => [
      ["baseRef", "BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => GetListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetListRequest"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAllRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetAllRequest"),
    :schema_element => [
      ["record", "GetAllRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => GetSavedSearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetSavedSearchRequest"),
    :schema_element => [
      ["record", "GetSavedSearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => GetCustomizationIdRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetCustomizationIdRequest"),
    :schema_element => [
      ["customizationType", "CustomizationType"],
      ["includeInactives", "SOAP::SOAPBoolean"]
    ]
  )

  LiteralRegistry.register(
    :class => InitializeRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "InitializeRequest"),
    :schema_element => [
      ["initializeRecord", "InitializeRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => InitializeListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "InitializeListRequest"),
    :schema_element => [
      ["initializeRecord", "InitializeRecord[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetSelectValueRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getSelectValueRequest"),
    :schema_element => [
      ["fieldDescription", "GetSelectValueFieldDescription"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => GetItemAvailabilityRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityRequest"),
    :schema_element => [
      ["itemAvailabilityFilter", "ItemAvailabilityFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => GetBudgetExchangeRateRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetBudgetExchangeRateRequest"),
    :schema_element => [
      ["budgetExchangeRateFilter", "BudgetExchangeRateFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => GetConsolidatedExchangeRateRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetConsolidatedExchangeRateRequest"),
    :schema_element => [
      ["consolidatedExchangeRateFilter", "ConsolidatedExchangeRateFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => GetPostingTransactionSummaryRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetPostingTransactionSummaryRequest"),
    :schema_element => [
      ["fields", "PostingTransactionSummaryField"],
      ["filters", "PostingTransactionSummaryFilter", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => GetServerTimeRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetServerTimeRequest"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => AttachRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AttachRequest"),
    :schema_element => [
      ["attachReference", "AttachReference"]
    ]
  )

  LiteralRegistry.register(
    :class => DetachRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "DetachRequest"),
    :schema_element => [
      ["detachReference", "DetachReference"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncAddListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncAddListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateInviteeStatusRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusRequest"),
    :schema_element => [
      ["updateInviteeStatusReference", "UpdateInviteeStatusReference"]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateInviteeStatusListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "UpdateInviteeStatusListRequest"),
    :schema_element => [
      ["updateInviteeStatusReference", "UpdateInviteeStatusReference[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncUpdateListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncUpdateListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncUpsertListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncUpsertListRequest"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncDeleteListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncDeleteListRequest"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncGetListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncGetListRequest"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncInitializeListRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncInitializeListRequest"),
    :schema_element => [
      ["initializeRecord", "InitializeRecord[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncSearchRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "AsyncSearchRequest"),
    :schema_element => [
      ["searchRecord", "SearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => CheckAsyncStatusRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "CheckAsyncStatusRequest"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => GetAsyncResultRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetAsyncResultRequest"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => GetDeletedRequest,
    :schema_type => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "GetDeletedRequest"),
    :schema_element => [
      ["getDeletedFilter", "GetDeletedFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => ShipAddress,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ShipAddress"),
    :schema_element => [
      ["shipAttention", "SOAP::SOAPString", [0, 1]],
      ["shipAddressee", "SOAP::SOAPString", [0, 1]],
      ["shipPhone", "SOAP::SOAPString", [0, 1]],
      ["shipAddr1", "SOAP::SOAPString", [0, 1]],
      ["shipAddr2", "SOAP::SOAPString", [0, 1]],
      ["shipAddr3", "SOAP::SOAPString", [0, 1]],
      ["shipCity", "SOAP::SOAPString", [0, 1]],
      ["shipState", "SOAP::SOAPString", [0, 1]],
      ["shipZip", "SOAP::SOAPString", [0, 1]],
      ["shipCountry", "Country", [0, 1]],
      ["shipIsResidential", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BillAddress,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "BillAddress"),
    :schema_element => [
      ["billAttention", "SOAP::SOAPString", [0, 1]],
      ["billAddressee", "SOAP::SOAPString", [0, 1]],
      ["billPhone", "SOAP::SOAPString", [0, 1]],
      ["billAddr1", "SOAP::SOAPString", [0, 1]],
      ["billAddr2", "SOAP::SOAPString", [0, 1]],
      ["billAddr3", "SOAP::SOAPString", [0, 1]],
      ["billCity", "SOAP::SOAPString", [0, 1]],
      ["billState", "SOAP::SOAPString", [0, 1]],
      ["billZip", "SOAP::SOAPString", [0, 1]],
      ["billCountry", "Country", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PresentationItem,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PresentationItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["itemType", "PresentationItemType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["onlinePrice", "SOAP::SOAPDouble", [0, 1]],
      ["basePrice", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Partners,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "Partners"),
    :schema_element => [
      ["partner", "RecordRef", [0, 1]],
      ["partnerRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => LandedCost,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "LandedCost"),
    :schema_element => [
      ["category", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["source", "LandedCostSource", [0, 1]],
      ["transaction", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerSalesTeam,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TimeItem,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TimeItem"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["timeType", "TimeItemTimeType", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollItem", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["temporaryLocalJurisdiction", "RecordRef", [0, 1]],
      ["temporaryStateJurisdiction", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["hours", "Duration", [0, 1]],
      ["hoursTotal", "Duration", [0, 1]],
      ["caseTaskEvent", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isUtilized", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductive", "SOAP::SOAPBoolean", [0, 1]],
      ["isExempt", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryDetail,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryDetail"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["inventoryAssignmentList", "InventoryAssignmentList", [0, 1]],
      ["customForm", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryAssignmentList,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryAssignmentList"),
    :schema_element => [
      ["inventoryAssignment", "InventoryAssignment[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InventoryAssignment,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryAssignment"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["issueInventoryNumber", "RecordRef", [0, 1]],
      ["receiptInventoryNumber", "SOAP::SOAPString", [0, 1]],
      ["binNumber", "RecordRef", [0, 1]],
      ["toBinNumber", "RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryDetailSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryDetailSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["binNumber", "SearchMultiSelectField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["inventoryNumber", "SearchMultiSelectField", [0, 1]],
      ["quantity", "SearchDoubleField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryDetailSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryDetailSearchRowBasic"),
    :schema_element => [
      ["binNumber", "SearchColumnSelectField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["inventoryNumber", "SearchColumnSelectField[]", [0, nil]],
      ["quantity", "SearchColumnDoubleField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => EntitySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EntitySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EntitySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EntitySearchRowBasic"),
    :schema_element => [
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["availableOffline", "SearchBooleanField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["company", "SearchMultiSelectField", [0, 1]],
      ["contactRole", "SearchMultiSelectField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["employer", "SearchStringField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "SearchBooleanField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isPrivate", "SearchBooleanField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactSearchRowBasic"),
    :schema_element => [
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "SearchColumnBooleanField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["contactRole", "SearchColumnSelectField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["accountNumber", "SearchStringField", [0, 1]],
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["availableOffline", "SearchBooleanField", [0, 1]],
      ["balance", "SearchDoubleField", [0, 1]],
      ["billAddress", "SearchStringField", [0, 1]],
      ["boughtAmount", "SearchDoubleField", [0, 1]],
      ["boughtDate", "SearchDateField", [0, 1]],
      ["buyingReason", "SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "SearchMultiSelectField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["ccCustomerCode", "SearchStringField", [0, 1]],
      ["ccDefault", "SearchBooleanField", [0, 1]],
      ["ccExpDate", "SearchDateField", [0, 1]],
      ["ccHolderName", "SearchStringField", [0, 1]],
      ["ccNumber", "SearchStringField", [0, 1]],
      ["ccType", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["classBought", "SearchMultiSelectField", [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["companyName", "SearchStringField", [0, 1]],
      ["consolBalance", "SearchDoubleField", [0, 1]],
      ["consolDaysOverdue", "SearchLongField", [0, 1]],
      ["consolDepositBalance", "SearchDoubleField", [0, 1]],
      ["consolOverdueBalance", "SearchDoubleField", [0, 1]],
      ["consolUnbilledOrders", "SearchDoubleField", [0, 1]],
      ["contact", "SearchStringField", [0, 1]],
      ["contribution", "SearchLongField", [0, 1]],
      ["conversionDate", "SearchDateField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["creditHold", "SearchEnumMultiSelectField", [0, 1]],
      ["creditHoldOverride", "SearchBooleanField", [0, 1]],
      ["creditLimit", "SearchDoubleField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["custStage", "SearchMultiSelectField", [0, 1]],
      ["custStatus", "SearchMultiSelectField", [0, 1]],
      ["dateClosed", "SearchDateField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["daysOverdue", "SearchLongField", [0, 1]],
      ["depositBalance", "SearchDoubleField", [0, 1]],
      ["deptBought", "SearchMultiSelectField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["emailPreference", "SearchEnumMultiSelectField", [0, 1]],
      ["emailTransactions", "SearchBooleanField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["entityStatus", "SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "SearchDoubleField", [0, 1]],
      ["explicitConversion", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["faxTransactions", "SearchBooleanField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["firstOrderDate", "SearchDateField", [0, 1]],
      ["firstSaleDate", "SearchDateField", [0, 1]],
      ["fxBalance", "SearchDoubleField", [0, 1]],
      ["fxConsolBalance", "SearchDoubleField", [0, 1]],
      ["fxConsolUnbilledOrders", "SearchDoubleField", [0, 1]],
      ["fxUnbilledOrders", "SearchDoubleField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["groupPricingLevel", "SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "SearchBooleanField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isBudgetApproved", "SearchBooleanField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isPerson", "SearchBooleanField", [0, 1]],
      ["isReportedLead", "SearchBooleanField", [0, 1]],
      ["isShipAddress", "SearchBooleanField", [0, 1]],
      ["itemPricingLevel", "SearchMultiSelectField", [0, 1]],
      ["itemPricingUnitPrice", "SearchDoubleField", [0, 1]],
      ["itemsBought", "SearchMultiSelectField", [0, 1]],
      ["itemsOrdered", "SearchMultiSelectField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["lastOrderDate", "SearchDateField", [0, 1]],
      ["lastSaleDate", "SearchDateField", [0, 1]],
      ["leadDate", "SearchDateField", [0, 1]],
      ["leadSource", "SearchMultiSelectField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["locationBought", "SearchMultiSelectField", [0, 1]],
      ["manualCreditHold", "SearchBooleanField", [0, 1]],
      ["merchantAccount", "SearchMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["monthlyClosing", "SearchEnumMultiSelectField", [0, 1]],
      ["onCreditHold", "SearchBooleanField", [0, 1]],
      ["orderedAmount", "SearchDoubleField", [0, 1]],
      ["orderedDate", "SearchDateField", [0, 1]],
      ["otherRelationships", "SearchEnumMultiSelectField", [0, 1]],
      ["overdueBalance", "SearchDoubleField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["parentItemsBought", "SearchMultiSelectField", [0, 1]],
      ["parentItemsOrdered", "SearchMultiSelectField", [0, 1]],
      ["partner", "SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "SearchLongField", [0, 1]],
      ["partnerRole", "SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "SearchMultiSelectField", [0, 1]],
      ["pec", "SearchStringField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["priceLevel", "SearchMultiSelectField", [0, 1]],
      ["pricingGroup", "SearchMultiSelectField", [0, 1]],
      ["pricingItem", "SearchMultiSelectField", [0, 1]],
      ["printTransactions", "SearchBooleanField", [0, 1]],
      ["prospectDate", "SearchDateField", [0, 1]],
      ["pstExempt", "SearchBooleanField", [0, 1]],
      ["receivablesAccount", "SearchMultiSelectField", [0, 1]],
      ["reminderDate", "SearchDateField", [0, 1]],
      ["resaleNumber", "SearchStringField", [0, 1]],
      ["role", "SearchMultiSelectField", [0, 1]],
      ["salesReadiness", "SearchMultiSelectField", [0, 1]],
      ["salesRep", "SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "SearchMultiSelectField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["shipAddress", "SearchStringField", [0, 1]],
      ["shipComplete", "SearchBooleanField", [0, 1]],
      ["shippingItem", "SearchMultiSelectField", [0, 1]],
      ["stage", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidBought", "SearchMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["taxable", "SearchBooleanField", [0, 1]],
      ["terms", "SearchMultiSelectField", [0, 1]],
      ["territory", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["unbilledOrders", "SearchDoubleField", [0, 1]],
      ["url", "SearchStringField", [0, 1]],
      ["vatRegNumber", "SearchStringField", [0, 1]],
      ["webLead", "SearchBooleanField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerSearchRowBasic"),
    :schema_element => [
      ["accountNumber", "SearchColumnStringField[]", [0, nil]],
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["altContact", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "SearchColumnBooleanField[]", [0, nil]],
      ["balance", "SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["buyingReason", "SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["ccCustomerCode", "SearchColumnStringField[]", [0, nil]],
      ["ccDefault", "SearchColumnBooleanField[]", [0, nil]],
      ["ccExpDate", "SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "SearchColumnStringField[]", [0, nil]],
      ["ccInternalId", "SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "SearchColumnStringField[]", [0, nil]],
      ["ccType", "SearchColumnSelectField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["companyName", "SearchColumnStringField[]", [0, nil]],
      ["consolBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["consolDaysOverdue", "SearchColumnLongField[]", [0, nil]],
      ["consolDepositBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["consolOverdueBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["consolUnbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["contact", "SearchColumnStringField[]", [0, nil]],
      ["contribution", "SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "SearchColumnDoubleField[]", [0, nil]],
      ["conversionDate", "SearchColumnDateField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["creditHold", "SearchColumnEnumSelectField[]", [0, nil]],
      ["creditHoldOverride", "SearchColumnBooleanField[]", [0, nil]],
      ["creditLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["dateClosed", "SearchColumnDateField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["daysOverdue", "SearchColumnLongField[]", [0, nil]],
      ["depositBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "SearchColumnEnumSelectField[]", [0, nil]],
      ["emailTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["entityStatus", "SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "SearchColumnDoubleField[]", [0, nil]],
      ["explicitConversion", "SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["faxTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["firstOrderDate", "SearchColumnDateField[]", [0, nil]],
      ["firstSaleDate", "SearchColumnDateField[]", [0, nil]],
      ["fxBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["fxConsolBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["fxConsolUnbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["fxUnbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["groupPricingLevel", "SearchColumnStringField[]", [0, nil]],
      ["hasDuplicates", "SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isBudgetApproved", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "SearchColumnBooleanField[]", [0, nil]],
      ["itemPricingLevel", "SearchColumnStringField[]", [0, nil]],
      ["itemPricingUnitPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["jobEndDate", "SearchColumnDateField[]", [0, nil]],
      ["jobProjectedEnd", "SearchColumnDateField[]", [0, nil]],
      ["jobStartDate", "SearchColumnDateField[]", [0, nil]],
      ["jobType", "SearchColumnSelectField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["lastOrderDate", "SearchColumnDateField[]", [0, nil]],
      ["lastSaleDate", "SearchColumnDateField[]", [0, nil]],
      ["leadDate", "SearchColumnDateField[]", [0, nil]],
      ["leadSource", "SearchColumnSelectField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["manualCreditHold", "SearchColumnBooleanField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["monthlyClosing", "SearchColumnEnumSelectField[]", [0, nil]],
      ["onCreditHold", "SearchColumnBooleanField[]", [0, nil]],
      ["overdueBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["partner", "SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "SearchColumnStringField[]", [0, nil]],
      ["partnerTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["pec", "SearchColumnStringField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["prefCCProcessor", "SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "SearchColumnSelectField[]", [0, nil]],
      ["pricingGroup", "SearchColumnStringField[]", [0, nil]],
      ["pricingItem", "SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["prospectDate", "SearchColumnDateField[]", [0, nil]],
      ["receivablesAccount", "SearchColumnStringField[]", [0, nil]],
      ["reminderDays", "SearchColumnLongField[]", [0, nil]],
      ["resaleNumber", "SearchColumnStringField[]", [0, nil]],
      ["role", "SearchColumnStringField[]", [0, nil]],
      ["salesReadiness", "SearchColumnStringField[]", [0, nil]],
      ["salesRep", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "SearchColumnSelectField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "SearchColumnBooleanField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shippingItem", "SearchColumnSelectField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["stage", "SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["taxable", "SearchColumnBooleanField[]", [0, nil]],
      ["taxItem", "SearchColumnSelectField[]", [0, nil]],
      ["terms", "SearchColumnSelectField[]", [0, nil]],
      ["territory", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "SearchColumnStringField[]", [0, nil]],
      ["webLead", "SearchColumnBooleanField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CalendarEventSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CalendarEventSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["attendee", "SearchMultiSelectField", [0, 1]],
      ["calendar", "SearchMultiSelectField", [0, 1]],
      ["completedDate", "SearchDateField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["instanceStart", "SearchDateField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isUpcomingEvent", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["location", "SearchStringField", [0, 1]],
      ["message", "SearchStringField", [0, 1]],
      ["organizer", "SearchMultiSelectField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["resource", "SearchMultiSelectField", [0, 1]],
      ["response", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CalendarEventSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CalendarEventSearchRowBasic"),
    :schema_element => [
      ["attendee", "SearchColumnSelectField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "SearchColumnDateField[]", [0, nil]],
      ["contact", "SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["endTime", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["instanceEnd", "SearchColumnDateField[]", [0, nil]],
      ["instanceStart", "SearchColumnDateField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["location", "SearchColumnStringField[]", [0, nil]],
      ["markdone", "SearchColumnStringField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["organizer", "SearchColumnSelectField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["recurrence", "SearchColumnStringField[]", [0, nil]],
      ["resource", "SearchColumnSelectField[]", [0, nil]],
      ["response", "SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "SearchColumnStringField[]", [0, nil]],
      ["startTime", "SearchColumnStringField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["transaction", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TaskSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TaskSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["actualTime", "SearchDoubleField", [0, 1]],
      ["assigned", "SearchMultiSelectField", [0, 1]],
      ["company", "SearchMultiSelectField", [0, 1]],
      ["completedDate", "SearchDateField", [0, 1]],
      ["contact", "SearchMultiSelectField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["estimatedTime", "SearchDoubleField", [0, 1]],
      ["estimatedTimeOverride", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isJobSummaryTask", "SearchBooleanField", [0, 1]],
      ["isJobTask", "SearchBooleanField", [0, 1]],
      ["isPrivate", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["milestone", "SearchLongField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["percentComplete", "SearchLongField", [0, 1]],
      ["percentTimeComplete", "SearchLongField", [0, 1]],
      ["priority", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["timeRemaining", "SearchDoubleField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TaskSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TaskSearchRowBasic"),
    :schema_element => [
      ["accessLevel", "SearchColumnStringField[]", [0, nil]],
      ["actualTime", "SearchColumnDoubleField[]", [0, nil]],
      ["assigned", "SearchColumnSelectField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "SearchColumnDateField[]", [0, nil]],
      ["contact", "SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["dueDate", "SearchColumnDateField[]", [0, nil]],
      ["estimatedTime", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverride", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isJobSummaryTask", "SearchColumnBooleanField[]", [0, nil]],
      ["isJobTask", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["markdone", "SearchColumnStringField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["milestone", "SearchColumnSelectField[]", [0, nil]],
      ["order", "SearchColumnLongField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["percentComplete", "SearchColumnDoubleField[]", [0, nil]],
      ["percentTimeComplete", "SearchColumnDoubleField[]", [0, nil]],
      ["priority", "SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["startTime", "SearchColumnStringField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["timeRemaining", "SearchColumnDoubleField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["transaction", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OpportunitySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OpportunitySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["amount", "SearchDoubleField", [0, 1]],
      ["availableOffline", "SearchBooleanField", [0, 1]],
      ["buyingReason", "SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "SearchMultiSelectField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["closeDate", "SearchDateField", [0, 1]],
      ["competitor", "SearchMultiSelectField", [0, 1]],
      ["contribution", "SearchLongField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["custType", "SearchMultiSelectField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["daysOpen", "SearchLongField", [0, 1]],
      ["daysToClose", "SearchLongField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["entity", "SearchMultiSelectField", [0, 1]],
      ["entityStatus", "SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "SearchDoubleField", [0, 1]],
      ["expectedCloseDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["forecastType", "SearchEnumMultiSelectField", [0, 1]],
      ["foreignProjectedAmount", "SearchDoubleField", [0, 1]],
      ["foreignRangeHigh", "SearchDoubleField", [0, 1]],
      ["foreignRangeLow", "SearchDoubleField", [0, 1]],
      ["fxTranCostEstimate", "SearchDoubleField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isBudgetApproved", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["leadSource", "SearchMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["partner", "SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "SearchLongField", [0, 1]],
      ["partnerRole", "SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "SearchMultiSelectField", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["postingPeriodRelative", "PostingPeriodDate", [0, 1]],
      ["probability", "SearchLongField", [0, 1]],
      ["projAltSalesAmt", "SearchDoubleField", [0, 1]],
      ["projectedTotal", "SearchDoubleField", [0, 1]],
      ["rangeHigh", "SearchDoubleField", [0, 1]],
      ["rangeHighAlt", "SearchDoubleField", [0, 1]],
      ["rangeLow", "SearchDoubleField", [0, 1]],
      ["rangeLowAlt", "SearchDoubleField", [0, 1]],
      ["salesReadiness", "SearchMultiSelectField", [0, 1]],
      ["salesRep", "SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "SearchMultiSelectField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["taxPeriod", "RecordRef", [0, 1]],
      ["taxPeriodRelative", "PostingPeriodDate", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["tranCostEstimate", "SearchDoubleField", [0, 1]],
      ["tranDate", "SearchDateField", [0, 1]],
      ["tranEstGrossProfit", "SearchDoubleField", [0, 1]],
      ["tranEstGrossProfitPct", "SearchDoubleField", [0, 1]],
      ["tranFxEstGrossProfit", "SearchDoubleField", [0, 1]],
      ["tranId", "SearchStringField", [0, 1]],
      ["winLossReason", "SearchMultiSelectField", [0, 1]],
      ["wonBy", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OpportunitySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OpportunitySearchRowBasic"),
    :schema_element => [
      ["actionItem", "SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "SearchColumnBooleanField[]", [0, nil]],
      ["buyingReason", "SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["closeDate", "SearchColumnDateField[]", [0, nil]],
      ["competitor", "SearchColumnSelectField[]", [0, nil]],
      ["contribution", "SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "SearchColumnDoubleField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["custType", "SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["daysOpen", "SearchColumnLongField[]", [0, nil]],
      ["daysToClose", "SearchColumnLongField[]", [0, nil]],
      ["decisionMaker", "SearchColumnSelectField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["entity", "SearchColumnSelectField[]", [0, nil]],
      ["entityStatus", "SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "SearchColumnDoubleField[]", [0, nil]],
      ["expectedCloseDate", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["forecastType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["foreignProjectedAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["foreignRangeHigh", "SearchColumnDoubleField[]", [0, nil]],
      ["foreignRangeLow", "SearchColumnDoubleField[]", [0, nil]],
      ["fxTranCostEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isBudgetApproved", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["leadSource", "SearchColumnSelectField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["partner", "SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "SearchColumnSelectField[]", [0, nil]],
      ["partnerTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["period", "SearchColumnStringField[]", [0, nil]],
      ["probability", "SearchColumnDoubleField[]", [0, nil]],
      ["projAltSalesAmt", "SearchColumnDoubleField[]", [0, nil]],
      ["projectedTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["rangeHigh", "SearchColumnDoubleField[]", [0, nil]],
      ["rangeHighAlt", "SearchColumnDoubleField[]", [0, nil]],
      ["rangeLow", "SearchColumnDoubleField[]", [0, nil]],
      ["rangeLowAlt", "SearchColumnDoubleField[]", [0, nil]],
      ["salesReadiness", "SearchColumnStringField[]", [0, nil]],
      ["salesRep", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "SearchColumnSelectField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["taxPeriod", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["total", "SearchColumnDoubleField[]", [0, nil]],
      ["tranCostEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["tranDate", "SearchColumnDateField[]", [0, nil]],
      ["tranEstGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["tranEstGrossProfitPct", "SearchColumnDoubleField[]", [0, nil]],
      ["tranFxEstGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["tranId", "SearchColumnStringField[]", [0, nil]],
      ["weightedTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["winLossReason", "SearchColumnSelectField[]", [0, nil]],
      ["wonBy", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EmployeeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["alienNumber", "SearchStringField", [0, 1]],
      ["anniversary", "SearchDateField", [0, 1]],
      ["approvalLimit", "SearchDoubleField", [0, 1]],
      ["approver", "SearchMultiSelectField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["authWorkDate", "SearchDateField", [0, 1]],
      ["billAddress", "SearchStringField", [0, 1]],
      ["billingClass", "SearchMultiSelectField", [0, 1]],
      ["birthDate", "SearchDateField", [0, 1]],
      ["birthDay", "SearchDateField", [0, 1]],
      ["cContribution", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["commissionPlan", "SearchMultiSelectField", [0, 1]],
      ["concurrentWebServicesUser", "SearchBooleanField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["deduction", "SearchMultiSelectField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["earning", "SearchMultiSelectField", [0, 1]],
      ["education", "SearchMultiSelectField", [0, 1]],
      ["eligibleForCommission", "SearchBooleanField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["employeeStatus", "SearchMultiSelectField", [0, 1]],
      ["employeeType", "SearchMultiSelectField", [0, 1]],
      ["employeeTypeKpi", "SearchBooleanField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["ethnicity", "SearchMultiSelectField", [0, 1]],
      ["expenseLimit", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["gender", "SearchEnumMultiSelectField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["hireDate", "SearchDateField", [0, 1]],
      ["i9Verified", ["SearchBooleanField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "I9Verified")], [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isJobResource", "SearchBooleanField", [0, 1]],
      ["isTemplate", "SearchBooleanField", [0, 1]],
      ["jobDescription", "SearchStringField", [0, 1]],
      ["laborCost", "SearchDoubleField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["lastPaidDate", "SearchDateField", [0, 1]],
      ["lastReviewDate", "SearchDateField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["maritalStatus", "SearchMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["nextReviewDate", "SearchDateField", [0, 1]],
      ["offlineAccess", "SearchBooleanField", [0, 1]],
      ["payFrequency", "SearchEnumMultiSelectField", [0, 1]],
      ["permChangeDate", "SearchDateField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["permissionChange", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["primaryEarningAmount", "SearchDoubleField", [0, 1]],
      ["primaryEarningItem", "SearchStringField", [0, 1]],
      ["primaryEarningType", "SearchStringField", [0, 1]],
      ["purchaseOrderApprovalLimit", "SearchDoubleField", [0, 1]],
      ["purchaseOrderApprover", "SearchMultiSelectField", [0, 1]],
      ["purchaseOrderLimit", "SearchDoubleField", [0, 1]],
      ["releaseDate", "SearchDateField", [0, 1]],
      ["residentStatus", "SearchMultiSelectField", [0, 1]],
      ["role", "SearchMultiSelectField", [0, 1]],
      ["roleChange", "SearchMultiSelectField", [0, 1]],
      ["roleChangeDate", "SearchDateField", [0, 1]],
      ["salesRep", "SearchBooleanField", [0, 1]],
      ["salesRole", "SearchMultiSelectField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["socialSecurityNumber", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["supervisor", "SearchMultiSelectField", [0, 1]],
      ["supportRep", "SearchBooleanField", [0, 1]],
      ["timeApprover", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["type", "SearchMultiSelectField", [0, 1]],
      ["usePerquest", "SearchBooleanField", [0, 1]],
      ["useTimeData", "SearchBooleanField", [0, 1]],
      ["visaExpDate", "SearchDateField", [0, 1]],
      ["visaType", "SearchMultiSelectField", [0, 1]],
      ["withholding", "SearchMultiSelectField", [0, 1]],
      ["workCalendar", "SearchMultiSelectField", [0, 1]],
      ["workplace", "SearchMultiSelectField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EmployeeSearchRowBasic"),
    :schema_element => [
      ["accountNumber", "SearchColumnStringField[]", [0, nil]],
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["alienNumber", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["approvalLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["approver", "SearchColumnSelectField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["authWorkDate", "SearchColumnDateField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billingClass", "SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["birthDate", "SearchColumnDateField[]", [0, nil]],
      ["birthDay", "SearchColumnDateField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["concurrentWebServicesUser", "SearchColumnBooleanField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["eligibleForCommission", "SearchColumnBooleanField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["employeeStatus", "SearchColumnSelectField[]", [0, nil]],
      ["employeeType", "SearchColumnSelectField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["ethnicity", "SearchColumnSelectField[]", [0, nil]],
      ["expenseLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["gender", "SearchColumnEnumSelectField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["hireDate", "SearchColumnDateField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["i9Verified", "SearchColumnBooleanField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isJobResource", "SearchColumnBooleanField[]", [0, nil]],
      ["isSalesRep", "SearchColumnBooleanField[]", [0, nil]],
      ["isSupportRep", "SearchColumnBooleanField[]", [0, nil]],
      ["isTemplate", "SearchColumnBooleanField[]", [0, nil]],
      ["laborCost", "SearchColumnDoubleField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["lastPaidDate", "SearchColumnDateField[]", [0, nil]],
      ["lastReviewDate", "SearchColumnDateField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["maritalStatus", "SearchColumnSelectField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["nextReviewDate", "SearchColumnDateField[]", [0, nil]],
      ["offlineAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["payFrequency", "SearchColumnEnumSelectField[]", [0, nil]],
      ["permChangeDate", "SearchColumnDateField[]", [0, nil]],
      ["permChangeLevel", "SearchColumnStringField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["permissionChange", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["primaryEarningAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["primaryEarningItem", "SearchColumnStringField[]", [0, nil]],
      ["primaryEarningType", "SearchColumnStringField[]", [0, nil]],
      ["purchaseOrderApprovalLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["purchaseOrderApprover", "SearchColumnSelectField[]", [0, nil]],
      ["purchaseOrderLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["releaseDate", "SearchColumnDateField[]", [0, nil]],
      ["residentStatus", "SearchColumnSelectField[]", [0, nil]],
      ["role", "SearchColumnSelectField[]", [0, nil]],
      ["roleChange", "SearchColumnStringField[]", [0, nil]],
      ["roleChangeAction", "SearchColumnStringField[]", [0, nil]],
      ["roleChangeDate", "SearchColumnDateField[]", [0, nil]],
      ["salesRole", "SearchColumnSelectField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["socialSecurityNumber", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnEnumSelectField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["supervisor", "SearchColumnSelectField[]", [0, nil]],
      ["timeApprover", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["type", "SearchColumnSelectField[]", [0, nil]],
      ["usePerquest", "SearchColumnBooleanField[]", [0, nil]],
      ["useTimeData", "SearchColumnBooleanField[]", [0, nil]],
      ["visaExpDate", "SearchColumnDateField[]", [0, nil]],
      ["visaType", "SearchColumnSelectField[]", [0, nil]],
      ["workCalendar", "SearchColumnStringField[]", [0, nil]],
      ["workplace", "SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PhoneCallSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PhoneCallSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["assigned", "SearchMultiSelectField", [0, 1]],
      ["company", "SearchMultiSelectField", [0, 1]],
      ["completedDate", "SearchDateField", [0, 1]],
      ["contact", "SearchMultiSelectField", [0, 1]],
      ["createdBy", "SearchMultiSelectField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isPrivate", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["owner", "SearchBooleanField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["priority", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PhoneCallSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PhoneCallSearchRowBasic"),
    :schema_element => [
      ["accessLevel", "SearchColumnStringField[]", [0, nil]],
      ["assigned", "SearchColumnSelectField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["completedDate", "SearchColumnDateField[]", [0, nil]],
      ["contact", "SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["markdone", "SearchColumnStringField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["priority", "SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["startTime", "SearchColumnDateField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["transaction", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SupportCaseSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SupportCaseSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["assigned", "SearchMultiSelectField", [0, 1]],
      ["awaitingReply", "SearchBooleanField", [0, 1]],
      ["caseNumber", "SearchStringField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["closedDate", "SearchDateField", [0, 1]],
      ["company", "SearchStringField", [0, 1]],
      ["contact", "SearchStringField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["escalateTo", "SearchMultiSelectField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["helpDesk", "SearchBooleanField", [0, 1]],
      ["inboundEmail", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["issue", "SearchMultiSelectField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["lastMessage", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastReopenedDate", "SearchDateField", [0, 1]],
      ["locked", "SearchBooleanField", [0, 1]],
      ["message", "SearchStringField", [0, 1]],
      ["messageAuthor", "SearchMultiSelectField", [0, 1]],
      ["messageDate", "SearchDateField", [0, 1]],
      ["messageType", "SearchBooleanField", [0, 1]],
      ["v_module", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["origin", "SearchMultiSelectField", [0, 1]],
      ["priority", "SearchMultiSelectField", [0, 1]],
      ["product", "SearchMultiSelectField", [0, 1]],
      ["serialNumber", "SearchStringField", [0, 1]],
      ["stage", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SupportCaseSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SupportCaseSearchRowBasic"),
    :schema_element => [
      ["assigned", "SearchColumnSelectField[]", [0, nil]],
      ["awaitingReply", "SearchColumnBooleanField[]", [0, nil]],
      ["caseNumber", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["contact", "SearchColumnSelectField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["customerStage", "SearchColumnEnumSelectField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["escalatee", "SearchColumnSelectField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["helpDesk", "SearchColumnBooleanField[]", [0, nil]],
      ["inboundEmail", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["issue", "SearchColumnSelectField[]", [0, nil]],
      ["issueNumber", "SearchColumnStringField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["lastMessageDate", "SearchColumnDateField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastReopenedDate", "SearchColumnDateField[]", [0, nil]],
      ["locked", "SearchColumnBooleanField[]", [0, nil]],
      ["v_module", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "module")], [0, nil]],
      ["origin", "SearchColumnSelectField[]", [0, nil]],
      ["priority", "SearchColumnSelectField[]", [0, nil]],
      ["product", "SearchColumnSelectField[]", [0, nil]],
      ["serialNumber", "SearchColumnStringField[]", [0, nil]],
      ["stage", "SearchColumnEnumSelectField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["status", "SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => MessageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "MessageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["author", "SearchMultiSelectField", [0, 1]],
      ["authorEmail", "SearchStringField", [0, 1]],
      ["bcc", "SearchStringField", [0, 1]],
      ["cc", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["hasAttachment", "SearchBooleanField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["internalOnly", "SearchBooleanField", [0, 1]],
      ["message", "SearchStringField", [0, 1]],
      ["messageDate", "SearchDateField", [0, 1]],
      ["messageType", "SearchEnumMultiSelectField", [0, 1]],
      ["recipient", "SearchMultiSelectField", [0, 1]],
      ["recipientEmail", "SearchStringField", [0, 1]],
      ["subject", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => MessageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "MessageSearchRowBasic"),
    :schema_element => [
      ["author", "SearchColumnSelectField[]", [0, nil]],
      ["authorEmail", "SearchColumnStringField[]", [0, nil]],
      ["bcc", "SearchColumnStringField[]", [0, nil]],
      ["cc", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["hasAttachment", "SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalOnly", "SearchColumnBooleanField[]", [0, nil]],
      ["isEmailed", "SearchColumnBooleanField[]", [0, nil]],
      ["isIncoming", "SearchColumnBooleanField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["messageDate", "SearchColumnDateField[]", [0, nil]],
      ["messageType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["recipient", "SearchColumnSelectField[]", [0, nil]],
      ["recipientEmail", "SearchColumnStringField[]", [0, nil]],
      ["subject", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NoteSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NoteSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["author", "SearchMultiSelectField", [0, 1]],
      ["direction", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["note", "SearchStringField", [0, 1]],
      ["noteDate", "SearchDateField", [0, 1]],
      ["noteType", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NoteSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NoteSearchRowBasic"),
    :schema_element => [
      ["author", "SearchColumnSelectField[]", [0, nil]],
      ["direction", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["note", "SearchColumnStringField[]", [0, nil]],
      ["noteDate", "SearchColumnDateField[]", [0, nil]],
      ["noteType", "SearchColumnStringField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomRecordSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["recType", "RecordRef"],
      ["availableOffline", "SearchBooleanField", [0, 1]],
      ["created", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["id", "SearchLongField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["lastModified", "SearchDateField", [0, 1]],
      ["lastModifiedBy", "SearchMultiSelectField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomRecordSearchRowBasic"),
    :schema_element => [
      ["recType", "RecordRef"],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "SearchColumnBooleanField[]", [0, nil]],
      ["created", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["id", "SearchColumnLongField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModified", "SearchColumnDateField[]", [0, nil]],
      ["lastModifiedBy", "SearchColumnSelectField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AccountSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AccountSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["balance", "SearchDoubleField", [0, 1]],
      ["cashFlowRateType", "SearchEnumMultiSelectField", [0, 1]],
      ["category1099Misc", "SearchMultiSelectField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["generalRateType", "SearchEnumMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["number", "SearchStringField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AccountSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AccountSearchRowBasic"),
    :schema_element => [
      ["balance", "SearchColumnDoubleField[]", [0, nil]],
      ["cashFlowRateType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["category1099Misc", "SearchColumnSelectField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["generalRateType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["number", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecScheduleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "RevRecScheduleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["amount", "SearchDoubleField", [0, 1]],
      ["defRev", "SearchMultiSelectField", [0, 1]],
      ["entity", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["incomeAcct", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["jeDoc", "SearchMultiSelectField", [0, 1]],
      ["name", "SearchMultiSelectField", [0, 1]],
      ["postPeriod", "SearchMultiSelectField", [0, 1]],
      ["srcDoc", "SearchMultiSelectField", [0, 1]],
      ["srcDocDate", "SearchDateField", [0, 1]],
      ["srcTranPostPeriod", "SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecScheduleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "RevRecScheduleSearchRowBasic"),
    :schema_element => [
      ["amount", "SearchColumnDoubleField[]", [0, nil]],
      ["defRev", "SearchColumnStringField[]", [0, nil]],
      ["entity", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["incomeAcct", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["jeDoc", "SearchColumnStringField[]", [0, nil]],
      ["jeDocUrl", "SearchColumnStringField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["nameUrl", "SearchColumnStringField[]", [0, nil]],
      ["postPeriod", "SearchColumnStringField[]", [0, nil]],
      ["srcDoc", "SearchColumnStringField[]", [0, nil]],
      ["srcDocLine", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecTemplateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "RevRecTemplateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["amorMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["amorPeriod", "SearchLongField", [0, 1]],
      ["amorStartOffset", "SearchLongField", [0, 1]],
      ["amorTermSrc", "SearchEnumMultiSelectField", [0, 1]],
      ["amorType", "SearchEnumMultiSelectField", [0, 1]],
      ["contraAccount", "SearchMultiSelectField", [0, 1]],
      ["deferralAccount", "SearchMultiSelectField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["periodOffset", "SearchLongField", [0, 1]],
      ["targetAccount", "SearchMultiSelectField", [0, 1]],
      ["useForeignAmounts", "SearchBooleanField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecTemplateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "RevRecTemplateSearchRowBasic"),
    :schema_element => [
      ["amorInactive", "SearchColumnStringField[]", [0, nil]],
      ["amorMethod", "SearchColumnStringField[]", [0, nil]],
      ["amorPeriod", "SearchColumnStringField[]", [0, nil]],
      ["amorStartOffset", "SearchColumnStringField[]", [0, nil]],
      ["amorTermSrc", "SearchColumnStringField[]", [0, nil]],
      ["amorType", "SearchColumnStringField[]", [0, nil]],
      ["contraAccount", "SearchColumnStringField[]", [0, nil]],
      ["deferralAccount", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnLongField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["periodOffset", "SearchColumnStringField[]", [0, nil]],
      ["targetAccount", "SearchColumnStringField[]", [0, nil]],
      ["useForeignAmounts", "SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => BinSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "BinSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["binNumber", "SearchStringField", [0, 1]],
      ["inactive", "SearchBooleanField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BinSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "BinSearchRowBasic"),
    :schema_element => [
      ["binNumber", "SearchColumnStringField[]", [0, nil]],
      ["inactive", "SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["location", "SearchColumnStringField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => DepartmentSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "DepartmentSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["nameNoHierarchy", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => DepartmentSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "DepartmentSearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => LocationSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "LocationSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isOffice", "SearchBooleanField", [0, 1]],
      ["makeInventoryAvailable", "SearchBooleanField", [0, 1]],
      ["makeInventoryAvailableStore", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["nameNoHierarchy", "SearchStringField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["tranprefix", "SearchStringField", [0, 1]],
      ["zip", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => LocationSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "LocationSearchRowBasic"),
    :schema_element => [
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isOffice", "SearchColumnBooleanField[]", [0, nil]],
      ["makeInventoryAvailable", "SearchColumnBooleanField[]", [0, nil]],
      ["makeInventoryAvailableStore", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "SearchColumnStringField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["tranPrefix", "SearchColumnStringField[]", [0, nil]],
      ["zip", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ClassificationSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ClassificationSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["nameNoHierarchy", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ClassificationSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ClassificationSearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TransactionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TransactionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["account", "SearchMultiSelectField", [0, 1]],
      ["accountType", "SearchMultiSelectField", [0, 1]],
      ["actualShipDate", "SearchDateField", [0, 1]],
      ["altSalesAmount", "SearchDoubleField", [0, 1]],
      ["altSalesNetAmount", "SearchDoubleField", [0, 1]],
      ["amount", "SearchDoubleField", [0, 1]],
      ["amountPaid", "SearchDoubleField", [0, 1]],
      ["amountRemaining", "SearchDoubleField", [0, 1]],
      ["amountUnbilled", "SearchDoubleField", [0, 1]],
      ["anyLineItem", "SearchMultiSelectField", [0, 1]],
      ["appliedToForeignAmount", "SearchDoubleField", [0, 1]],
      ["appliedToIsFxVariance", "SearchBooleanField", [0, 1]],
      ["appliedToLinkAmount", "SearchDoubleField", [0, 1]],
      ["appliedToLinkType", "SearchEnumMultiSelectField", [0, 1]],
      ["appliedToTransaction", "SearchMultiSelectField", [0, 1]],
      ["applyingForeignAmount", "SearchDoubleField", [0, 1]],
      ["applyingIsFxVariance", "SearchBooleanField", [0, 1]],
      ["applyingLinkAmount", "SearchDoubleField", [0, 1]],
      ["applyingLinkType", "SearchEnumMultiSelectField", [0, 1]],
      ["applyingTransaction", "SearchMultiSelectField", [0, 1]],
      ["approvalStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["authCode", "SearchStringField", [0, 1]],
      ["avsStreetMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["avsZipMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["billable", "SearchBooleanField", [0, 1]],
      ["billAddress", "SearchStringField", [0, 1]],
      ["billAddressee", "SearchStringField", [0, 1]],
      ["billAttention", "SearchStringField", [0, 1]],
      ["billCity", "SearchStringField", [0, 1]],
      ["billCountry", "SearchEnumMultiSelectField", [0, 1]],
      ["billCounty", "SearchStringField", [0, 1]],
      ["billedDate", "SearchDateField", [0, 1]],
      ["billingSchedule", "SearchMultiSelectField", [0, 1]],
      ["billingStatus", "SearchBooleanField", [0, 1]],
      ["billingTransaction", "SearchMultiSelectField", [0, 1]],
      ["billPhone", "SearchStringField", [0, 1]],
      ["billState", "SearchStringField", [0, 1]],
      ["billVarianceStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["billZip", "SearchStringField", [0, 1]],
      ["binNumber", "SearchStringField", [0, 1]],
      ["binNumberQuantity", "SearchDoubleField", [0, 1]],
      ["buildEntireAssembly", "SearchBooleanField", [0, 1]],
      ["buildVariance", "SearchDoubleField", [0, 1]],
      ["built", "SearchDoubleField", [0, 1]],
      ["ccCustomerCode", "SearchStringField", [0, 1]],
      ["ccExpireDate", "SearchDateField", [0, 1]],
      ["ccName", "SearchStringField", [0, 1]],
      ["ccNumber", "SearchStringField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["cleared", "SearchBooleanField", [0, 1]],
      ["closed", "SearchBooleanField", [0, 1]],
      ["closeDate", "SearchDateField", [0, 1]],
      ["cogs", "SearchBooleanField", [0, 1]],
      ["commissionEffectiveDate", "SearchDateField", [0, 1]],
      ["commit", "SearchEnumMultiSelectField", [0, 1]],
      ["confirmationNumber", "SearchStringField", [0, 1]],
      ["contribution", "SearchLongField", [0, 1]],
      ["costComponentAmount", "SearchDoubleField", [0, 1]],
      ["costComponentCategory", "SearchMultiSelectField", [0, 1]],
      ["costComponentItem", "SearchMultiSelectField", [0, 1]],
      ["costComponentQuantity", "SearchDoubleField", [0, 1]],
      ["costComponentStandardCost", "SearchDoubleField", [0, 1]],
      ["costEstimate", "SearchDoubleField", [0, 1]],
      ["costEstimateRate", "SearchDoubleField", [0, 1]],
      ["costEstimateType", "SearchEnumMultiSelectField", [0, 1]],
      ["createdBy", "SearchMultiSelectField", [0, 1]],
      ["createdFrom", "SearchMultiSelectField", [0, 1]],
      ["creditAmount", "SearchDoubleField", [0, 1]],
      ["cscMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["customerSubOf", "SearchMultiSelectField", [0, 1]],
      ["customForm", "SearchMultiSelectField", [0, 1]],
      ["custType", "SearchMultiSelectField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["daysOpen", "SearchLongField", [0, 1]],
      ["daysOverdue", "SearchLongField", [0, 1]],
      ["debitAmount", "SearchDoubleField", [0, 1]],
      ["deferredRevenue", "SearchDoubleField", [0, 1]],
      ["deferRevRec", "SearchBooleanField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["depositDate", "SearchDateField", [0, 1]],
      ["depositTransaction", "SearchMultiSelectField", [0, 1]],
      ["dueDate", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["employee", "SearchMultiSelectField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["entity", "SearchMultiSelectField", [0, 1]],
      ["entityStatus", "SearchMultiSelectField", [0, 1]],
      ["estGrossProfit", "SearchDoubleField", [0, 1]],
      ["estGrossProfitPct", "SearchDoubleField", [0, 1]],
      ["exchangeRate", "SearchDoubleField", [0, 1]],
      ["excludeCommission", "SearchBooleanField", [0, 1]],
      ["expectedCloseDate", "SearchDateField", [0, 1]],
      ["expectedReceiptDate", "SearchDateField", [0, 1]],
      ["expenseCategory", "SearchMultiSelectField", [0, 1]],
      ["expenseDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["finChrg", "SearchBooleanField", [0, 1]],
      ["forecastType", "SearchEnumMultiSelectField", [0, 1]],
      ["fulfillingTransaction", "SearchMultiSelectField", [0, 1]],
      ["fxAmount", "SearchDoubleField", [0, 1]],
      ["fxCostEstimate", "SearchDoubleField", [0, 1]],
      ["fxCostEstimateRate", "SearchDoubleField", [0, 1]],
      ["fxEstGrossProfit", "SearchDoubleField", [0, 1]],
      ["fxTranCostEstimate", "SearchDoubleField", [0, 1]],
      ["fxVsoeAllocation", "SearchDoubleField", [0, 1]],
      ["fxVsoeAmount", "SearchDoubleField", [0, 1]],
      ["fxVsoePrice", "SearchDoubleField", [0, 1]],
      ["gcoAvailabelToCharge", "SearchBooleanField", [0, 1]],
      ["gcoAvailableToRefund", "SearchBooleanField", [0, 1]],
      ["gcoAvsStreetMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["gcoAvsZipMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["gcoBuyerAccountAge", "SearchLongField", [0, 1]],
      ["gcoBuyerIp", "SearchStringField", [0, 1]],
      ["gcoChargeAmount", "SearchDoubleField", [0, 1]],
      ["gcoChargebackAmount", "SearchDoubleField", [0, 1]],
      ["gcoConfirmedChargedTotal", "SearchDoubleField", [0, 1]],
      ["gcoConfirmedRefundedTotal", "SearchDoubleField", [0, 1]],
      ["gcoCreditcardNumber", "SearchStringField", [0, 1]],
      ["gcoCscMatch", "SearchEnumMultiSelectField", [0, 1]],
      ["gcoFinancialState", "SearchStringField", [0, 1]],
      ["gcoFulfillmentState", "SearchStringField", [0, 1]],
      ["gcoOrderId", "SearchStringField", [0, 1]],
      ["gcoOrderTotal", "SearchDoubleField", [0, 1]],
      ["gcoPromotionAmount", "SearchDoubleField", [0, 1]],
      ["gcoPromotionName", "SearchStringField", [0, 1]],
      ["gcoRefundAmount", "SearchDoubleField", [0, 1]],
      ["gcoShippingTotal", "SearchDoubleField", [0, 1]],
      ["gcoStateChangedDetail", "SearchStringField", [0, 1]],
      ["giftCertificate", "SearchStringField", [0, 1]],
      ["grossAmount", "SearchDoubleField", [0, 1]],
      ["includeInForecast", "SearchBooleanField", [0, 1]],
      ["intercoStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["intercoTransaction", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["inVsoeBundle", "SearchBooleanField", [0, 1]],
      ["isAllocation", "SearchBooleanField", [0, 1]],
      ["isGcoChargeback", "SearchBooleanField", [0, 1]],
      ["isGcoChargeConfirmed", "SearchBooleanField", [0, 1]],
      ["isGcoPaymentGuaranteed", "SearchBooleanField", [0, 1]],
      ["isGcoRefundConfirmed", "SearchBooleanField", [0, 1]],
      ["isIntercompanyAdjustment", "SearchBooleanField", [0, 1]],
      ["isPayPalMeth", "SearchBooleanField", [0, 1]],
      ["isReversal", "SearchBooleanField", [0, 1]],
      ["isRevRecTransaction", "SearchBooleanField", [0, 1]],
      ["isShipAddress", "SearchBooleanField", [0, 1]],
      ["isTransferPriceCosting", "SearchBooleanField", [0, 1]],
      ["isVsoeAlloc", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["itemSubOf", "SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["leadSource", "SearchMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["mainLine", "SearchBooleanField", [0, 1]],
      ["mainName", "SearchMultiSelectField", [0, 1]],
      ["matchBillToReceipt", "SearchBooleanField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["memoMain", "SearchStringField", [0, 1]],
      ["memorized", "SearchBooleanField", [0, 1]],
      ["merchantAccount", "SearchStringField", [0, 1]],
      ["message", "SearchStringField", [0, 1]],
      ["multiSubsidiary", "SearchBooleanField", [0, 1]],
      ["nameText", "SearchStringField", [0, 1]],
      ["netAmount", "SearchDoubleField", [0, 1]],
      ["nextApprover", "SearchMultiSelectField", [0, 1]],
      ["nextBillDate", "SearchDateField", [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["opportunity", "SearchMultiSelectField", [0, 1]],
      ["otherRefNum", "SearchTextNumberField", [0, 1]],
      ["otherRefNumNonDeposit", "SearchTextNumberField", [0, 1]],
      ["packageCount", "SearchLongField", [0, 1]],
      ["paidTransaction", "SearchMultiSelectField", [0, 1]],
      ["parent", "SearchLongField", [0, 1]],
      ["partner", "SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "SearchLongField", [0, 1]],
      ["partnerRole", "SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "SearchMultiSelectField", [0, 1]],
      ["payingTransaction", "SearchMultiSelectField", [0, 1]],
      ["paymentEventDate", "SearchDateField", [0, 1]],
      ["paymentEventHoldReason", "SearchEnumMultiSelectField", [0, 1]],
      ["paymentEventResult", "SearchEnumMultiSelectField", [0, 1]],
      ["paymentEventType", "SearchEnumMultiSelectField", [0, 1]],
      ["paymentMethod", "SearchMultiSelectField", [0, 1]],
      ["payPalPending", "SearchBooleanField", [0, 1]],
      ["payPalStatus", "SearchStringField", [0, 1]],
      ["payPalTranId", "SearchStringField", [0, 1]],
      ["pnRefNum", "SearchStringField", [0, 1]],
      ["poAsText", "SearchStringField", [0, 1]],
      ["posting", "SearchBooleanField", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["postingPeriodRelative", "PostingPeriodDate", [0, 1]],
      ["priceLevel", "SearchMultiSelectField", [0, 1]],
      ["printedPickingTicket", "SearchBooleanField", [0, 1]],
      ["probability", "SearchLongField", [0, 1]],
      ["projectedAmount", "SearchDoubleField", [0, 1]],
      ["promoCode", "SearchMultiSelectField", [0, 1]],
      ["purchaseOrder", "SearchMultiSelectField", [0, 1]],
      ["quantity", "SearchDoubleField", [0, 1]],
      ["quantityBilled", "SearchDoubleField", [0, 1]],
      ["quantityCommitted", "SearchDoubleField", [0, 1]],
      ["quantityPacked", "SearchDoubleField", [0, 1]],
      ["quantityPicked", "SearchDoubleField", [0, 1]],
      ["quantityRevCommitted", "SearchDoubleField", [0, 1]],
      ["quantityShipRecv", "SearchDoubleField", [0, 1]],
      ["recognizedRevenue", "SearchDoubleField", [0, 1]],
      ["recordType", "SearchStringField", [0, 1]],
      ["revCommitStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["revCommittingStatus", "SearchBooleanField", [0, 1]],
      ["revCommittingTransaction", "SearchMultiSelectField", [0, 1]],
      ["revenueStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["reversalDate", "SearchDateField", [0, 1]],
      ["reversalNumber", "SearchStringField", [0, 1]],
      ["revRecEndDate", "SearchDateField", [0, 1]],
      ["revRecOnRevCommitment", "SearchBooleanField", [0, 1]],
      ["revRecStartDate", "SearchDateField", [0, 1]],
      ["revRecTermInMonths", "SearchLongField", [0, 1]],
      ["salesEffectiveDate", "SearchDateField", [0, 1]],
      ["salesOrder", "SearchMultiSelectField", [0, 1]],
      ["salesRep", "SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "SearchMultiSelectField", [0, 1]],
      ["serialNumber", "SearchStringField", [0, 1]],
      ["serialNumberCost", "SearchDoubleField", [0, 1]],
      ["serialNumberCostAdjustment", "SearchDoubleField", [0, 1]],
      ["serialNumberQuantity", "SearchDoubleField", [0, 1]],
      ["serialNumbers", "SearchStringField", [0, 1]],
      ["shipAddress", "SearchStringField", [0, 1]],
      ["shipAddressee", "SearchStringField", [0, 1]],
      ["shipAttention", "SearchStringField", [0, 1]],
      ["shipCity", "SearchStringField", [0, 1]],
      ["shipComplete", "SearchBooleanField", [0, 1]],
      ["shipCountry", "SearchEnumMultiSelectField", [0, 1]],
      ["shipCounty", "SearchStringField", [0, 1]],
      ["shipDate", "SearchDateField", [0, 1]],
      ["shipGroup", "SearchLongField", [0, 1]],
      ["shipMethod", "SearchMultiSelectField", [0, 1]],
      ["shipPhone", "SearchStringField", [0, 1]],
      ["shipping", "SearchBooleanField", [0, 1]],
      ["shipRecvStatus", "SearchBooleanField", [0, 1]],
      ["shipRecvStatusLine", "SearchBooleanField", [0, 1]],
      ["shipState", "SearchMultiSelectField", [0, 1]],
      ["shipTo", "SearchMultiSelectField", [0, 1]],
      ["shipZip", "SearchStringField", [0, 1]],
      ["source", "SearchEnumMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["taxItem", "SearchMultiSelectField", [0, 1]],
      ["taxLine", "SearchBooleanField", [0, 1]],
      ["taxPeriod", "RecordRef", [0, 1]],
      ["taxPeriodRelative", "PostingPeriodDate", [0, 1]],
      ["taxRate", "SearchDoubleField", [0, 1]],
      ["terms", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["toBeEmailed", "SearchBooleanField", [0, 1]],
      ["toBePrinted", "SearchBooleanField", [0, 1]],
      ["toSubsidiary", "SearchMultiSelectField", [0, 1]],
      ["totalAmount", "SearchDoubleField", [0, 1]],
      ["trackingNumbers", "SearchStringField", [0, 1]],
      ["tranCostEstimate", "SearchDoubleField", [0, 1]],
      ["tranDate", "SearchDateField", [0, 1]],
      ["tranEstGrossProfit", "SearchDoubleField", [0, 1]],
      ["tranEstGrossProfitPct", "SearchDoubleField", [0, 1]],
      ["tranFxEstGrossProfit", "SearchDoubleField", [0, 1]],
      ["tranId", "SearchStringField", [0, 1]],
      ["tranIsVsoeBundle", "SearchBooleanField", [0, 1]],
      ["transactionDiscount", "SearchBooleanField", [0, 1]],
      ["transactionLineType", "SearchEnumMultiSelectField", [0, 1]],
      ["transferLocation", "SearchMultiSelectField", [0, 1]],
      ["transferOrderQuantityCommitted", "SearchDoubleField", [0, 1]],
      ["transferOrderQuantityPacked", "SearchDoubleField", [0, 1]],
      ["transferOrderQuantityPicked", "SearchDoubleField", [0, 1]],
      ["transferOrderQuantityReceived", "SearchDoubleField", [0, 1]],
      ["transferOrderQuantityShipped", "SearchDoubleField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["unit", "SearchMultiSelectField", [0, 1]],
      ["unitCostOverride", "SearchDoubleField", [0, 1]],
      ["vendType", "SearchMultiSelectField", [0, 1]],
      ["visibleToCustomer", "SearchBooleanField", [0, 1]],
      ["voided", "SearchBooleanField", [0, 1]],
      ["vsoeAllocation", "SearchDoubleField", [0, 1]],
      ["vsoeAmount", "SearchDoubleField", [0, 1]],
      ["vsoeDeferral", "SearchEnumMultiSelectField", [0, 1]],
      ["vsoeDelivered", "SearchBooleanField", [0, 1]],
      ["vsoePermitDiscount", "SearchEnumMultiSelectField", [0, 1]],
      ["vsoePrice", "SearchDoubleField", [0, 1]],
      ["webSite", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TransactionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TransactionSearchRowBasic"),
    :schema_element => [
      ["abbrev", "SearchColumnStringField[]", [0, nil]],
      ["account", "SearchColumnSelectField[]", [0, nil]],
      ["accountType", "SearchColumnStringField[]", [0, nil]],
      ["actualShipDate", "SearchColumnDateField[]", [0, nil]],
      ["altSalesAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["altSalesNetAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["amount", "SearchColumnDoubleField[]", [0, nil]],
      ["amountPaid", "SearchColumnDoubleField[]", [0, nil]],
      ["amountRemaining", "SearchColumnDoubleField[]", [0, nil]],
      ["amountUnbilled", "SearchColumnDoubleField[]", [0, nil]],
      ["appliedToForeignAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["appliedToIsFxVariance", "SearchColumnBooleanField[]", [0, nil]],
      ["appliedToLinkAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["appliedToLinkType", "SearchColumnStringField[]", [0, nil]],
      ["appliedToTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["applyingForeignAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["applyingIsFxVariance", "SearchColumnBooleanField[]", [0, nil]],
      ["applyingLinkAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["applyingLinkType", "SearchColumnStringField[]", [0, nil]],
      ["applyingTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["approvalStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["authCode", "SearchColumnStringField[]", [0, nil]],
      ["avsStreetMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["avsZipMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billable", "SearchColumnBooleanField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billedDate", "SearchColumnDateField[]", [0, nil]],
      ["billingAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["billingSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["billingTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billVarianceStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billZip", "SearchColumnStringField[]", [0, nil]],
      ["binNumber", "SearchColumnStringField[]", [0, nil]],
      ["binNumberQuantity", "SearchColumnDoubleField[]", [0, nil]],
      ["buildEntireAssembly", "SearchColumnBooleanField[]", [0, nil]],
      ["buildVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["built", "SearchColumnDoubleField[]", [0, nil]],
      ["ccCustomerCode", "SearchColumnStringField[]", [0, nil]],
      ["ccExpDate", "SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "SearchColumnStringField[]", [0, nil]],
      ["ccStreet", "SearchColumnStringField[]", [0, nil]],
      ["ccZipCode", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["cleared", "SearchColumnBooleanField[]", [0, nil]],
      ["closed", "SearchColumnBooleanField[]", [0, nil]],
      ["closeDate", "SearchColumnDateField[]", [0, nil]],
      ["cogsAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["commissionEffectiveDate", "SearchColumnDateField[]", [0, nil]],
      ["commit", "SearchColumnEnumSelectField[]", [0, nil]],
      ["confirmationNumber", "SearchColumnStringField[]", [0, nil]],
      ["contribution", "SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "SearchColumnDoubleField[]", [0, nil]],
      ["costComponentAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["costComponentCategory", "SearchColumnStringField[]", [0, nil]],
      ["costComponentItem", "SearchColumnStringField[]", [0, nil]],
      ["costComponentQuantity", "SearchColumnDoubleField[]", [0, nil]],
      ["costComponentStandardCost", "SearchColumnDoubleField[]", [0, nil]],
      ["costEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateRate", "SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["createdBy", "SearchColumnSelectField[]", [0, nil]],
      ["createdFrom", "SearchColumnSelectField[]", [0, nil]],
      ["creditAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["cscMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["customForm", "SearchColumnSelectField[]", [0, nil]],
      ["custType", "SearchColumnSelectField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["daysOpen", "SearchColumnLongField[]", [0, nil]],
      ["daysOverdue", "SearchColumnLongField[]", [0, nil]],
      ["debitAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["deferredRevenue", "SearchColumnDoubleField[]", [0, nil]],
      ["deferRevRec", "SearchColumnBooleanField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["depositDate", "SearchColumnDateField[]", [0, nil]],
      ["depositTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["discountAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["dueDate", "SearchColumnDateField[]", [0, nil]],
      ["effectiveRate", "SearchColumnDoubleField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["entity", "SearchColumnSelectField[]", [0, nil]],
      ["entityStatus", "SearchColumnSelectField[]", [0, nil]],
      ["estGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["estGrossProfitPct", "SearchColumnDoubleField[]", [0, nil]],
      ["estGrossProfitPercent", "SearchColumnDoubleField[]", [0, nil]],
      ["exchangeRate", "SearchColumnDoubleField[]", [0, nil]],
      ["excludeCommission", "SearchColumnBooleanField[]", [0, nil]],
      ["expectedCloseDate", "SearchColumnDateField[]", [0, nil]],
      ["expectedReceiptDate", "SearchColumnDateField[]", [0, nil]],
      ["expenseCategory", "SearchColumnSelectField[]", [0, nil]],
      ["expenseDate", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["forecastType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["fulfillingTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["fxAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["fxCostEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["fxCostEstimateRate", "SearchColumnDoubleField[]", [0, nil]],
      ["fxEstGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["fxTranCostEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoeAllocation", "SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoeAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["fxVsoePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoAvailabelToCharge", "SearchColumnBooleanField[]", [0, nil]],
      ["gcoAvailableToRefund", "SearchColumnBooleanField[]", [0, nil]],
      ["gcoAvsStreetMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoAvsZipMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoBuyerAccountAge", "SearchColumnLongField[]", [0, nil]],
      ["gcoBuyerIp", "SearchColumnStringField[]", [0, nil]],
      ["gcoChargeAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoChargebackAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoConfirmedChargedTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoConfirmedRefundedTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoCreditcardNumber", "SearchColumnStringField[]", [0, nil]],
      ["gcoCscMatch", "SearchColumnEnumSelectField[]", [0, nil]],
      ["gcoFinancialState", "SearchColumnStringField[]", [0, nil]],
      ["gcoFulfillmentState", "SearchColumnStringField[]", [0, nil]],
      ["gcoOrderId", "SearchColumnStringField[]", [0, nil]],
      ["gcoOrderTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoPromotionAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoPromotionName", "SearchColumnStringField[]", [0, nil]],
      ["gcoRefundAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoShippingTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["gcoStateChangedDetail", "SearchColumnStringField[]", [0, nil]],
      ["giftCert", "SearchColumnStringField[]", [0, nil]],
      ["grossAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["includeInForecast", "SearchColumnBooleanField[]", [0, nil]],
      ["intercoStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["intercoTransaction", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["inVsoeBundle", "SearchColumnBooleanField[]", [0, nil]],
      ["isAllocation", "SearchColumnBooleanField[]", [0, nil]],
      ["isGcoChargeback", "SearchColumnBooleanField[]", [0, nil]],
      ["isGcoChargeConfirmed", "SearchColumnBooleanField[]", [0, nil]],
      ["isGcoPaymentGuaranteed", "SearchColumnBooleanField[]", [0, nil]],
      ["isGcoRefundConfirmed", "SearchColumnBooleanField[]", [0, nil]],
      ["isIntercompanyAdjustment", "SearchColumnBooleanField[]", [0, nil]],
      ["isReversal", "SearchColumnBooleanField[]", [0, nil]],
      ["isRevRecTransaction", "SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "SearchColumnBooleanField[]", [0, nil]],
      ["isTransferPriceCosting", "SearchColumnBooleanField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["leadSource", "SearchColumnSelectField[]", [0, nil]],
      ["line", "SearchColumnLongField[]", [0, nil]],
      ["lineSequenceNumber", "SearchColumnLongField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["mainLine", "SearchColumnBooleanField[]", [0, nil]],
      ["mainName", "SearchColumnStringField[]", [0, nil]],
      ["matchBillToReceipt", "SearchColumnBooleanField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["memoMain", "SearchColumnStringField[]", [0, nil]],
      ["memorized", "SearchColumnBooleanField[]", [0, nil]],
      ["merchantAccount", "SearchColumnSelectField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["multiSubsidiary", "SearchColumnBooleanField[]", [0, nil]],
      ["netAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["netAmountNoTax", "SearchColumnDoubleField[]", [0, nil]],
      ["nextApprover", "SearchColumnSelectField[]", [0, nil]],
      ["nextBillDate", "SearchColumnDateField[]", [0, nil]],
      ["opportunity", "SearchColumnSelectField[]", [0, nil]],
      ["options", "SearchColumnStringField[]", [0, nil]],
      ["originator", "SearchColumnEnumSelectField[]", [0, nil]],
      ["otherRefNum", "SearchColumnTextNumberField[]", [0, nil]],
      ["packageCount", "SearchColumnLongField[]", [0, nil]],
      ["paidAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["paidTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["partner", "SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "SearchColumnSelectField[]", [0, nil]],
      ["partnerTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["payingAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["payingTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["paymentEventDate", "SearchColumnDateField[]", [0, nil]],
      ["paymentEventHoldReason", "SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentEventResult", "SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentEventType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["paymentMethod", "SearchColumnSelectField[]", [0, nil]],
      ["payPalPending", "SearchColumnBooleanField[]", [0, nil]],
      ["payPalStatus", "SearchColumnStringField[]", [0, nil]],
      ["payPalTranId", "SearchColumnStringField[]", [0, nil]],
      ["payrollBatch", "SearchColumnStringField[]", [0, nil]],
      ["pnRefNum", "SearchColumnStringField[]", [0, nil]],
      ["poRate", "SearchColumnDoubleField[]", [0, nil]],
      ["posting", "SearchColumnBooleanField[]", [0, nil]],
      ["postingPeriod", "SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "SearchColumnSelectField[]", [0, nil]],
      ["print", "SearchColumnStringField[]", [0, nil]],
      ["probability", "SearchColumnDoubleField[]", [0, nil]],
      ["projectedAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["promoCode", "SearchColumnSelectField[]", [0, nil]],
      ["purchaseOrder", "SearchColumnSelectField[]", [0, nil]],
      ["quantity", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityBilled", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityCommitted", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityPacked", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityPicked", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityRevCommitted", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityShipRecv", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityUom", "SearchColumnDoubleField[]", [0, nil]],
      ["rate", "SearchColumnDoubleField[]", [0, nil]],
      ["realizedGainPostingTransaction", "SearchColumnStringField[]", [0, nil]],
      ["recognizedRevenue", "SearchColumnDoubleField[]", [0, nil]],
      ["recordType", "SearchColumnStringField[]", [0, nil]],
      ["revCommitStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["revCommittingTransaction", "SearchColumnSelectField[]", [0, nil]],
      ["revenueStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["reversalDate", "SearchColumnDateField[]", [0, nil]],
      ["reversalNumber", "SearchColumnStringField[]", [0, nil]],
      ["revRecEndDate", "SearchColumnDateField[]", [0, nil]],
      ["revRecOnRevCommitment", "SearchColumnBooleanField[]", [0, nil]],
      ["revRecStartDate", "SearchColumnDateField[]", [0, nil]],
      ["rgAccount", "SearchColumnSelectField[]", [0, nil]],
      ["rgAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["salesEffectiveDate", "SearchColumnDateField[]", [0, nil]],
      ["salesOrder", "SearchColumnSelectField[]", [0, nil]],
      ["salesRep", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "SearchColumnSelectField[]", [0, nil]],
      ["serialNumber", "SearchColumnStringField[]", [0, nil]],
      ["serialNumberCost", "SearchColumnDoubleField[]", [0, nil]],
      ["serialNumberCostAdjustment", "SearchColumnDoubleField[]", [0, nil]],
      ["serialNumberQuantity", "SearchColumnDoubleField[]", [0, nil]],
      ["serialNumbers", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "SearchColumnBooleanField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipDate", "SearchColumnDateField[]", [0, nil]],
      ["shipGroup", "SearchColumnLongField[]", [0, nil]],
      ["shipMethod", "SearchColumnSelectField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shippingAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["shipRecvStatusLine", "SearchColumnBooleanField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipTo", "SearchColumnSelectField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["signedAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["source", "SearchColumnStringField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["taxAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["taxCode", "SearchColumnSelectField[]", [0, nil]],
      ["taxLine", "SearchColumnBooleanField[]", [0, nil]],
      ["taxPeriod", "SearchColumnSelectField[]", [0, nil]],
      ["taxTotal", "SearchColumnDoubleField[]", [0, nil]],
      ["termInMonths", "SearchColumnLongField[]", [0, nil]],
      ["terms", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["toBeEmailed", "SearchColumnBooleanField[]", [0, nil]],
      ["toBePrinted", "SearchColumnBooleanField[]", [0, nil]],
      ["toSubsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["total", "SearchColumnDoubleField[]", [0, nil]],
      ["totalCostEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["trackingNumbers", "SearchColumnStringField[]", [0, nil]],
      ["tranDate", "SearchColumnDateField[]", [0, nil]],
      ["tranEstGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["tranFxEstGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["tranId", "SearchColumnStringField[]", [0, nil]],
      ["tranIsVsoeBundle", "SearchColumnBooleanField[]", [0, nil]],
      ["transactionDiscount", "SearchColumnBooleanField[]", [0, nil]],
      ["transactionLineType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["transferLocation", "SearchColumnSelectField[]", [0, nil]],
      ["transferOrderItemLine", "SearchColumnStringField[]", [0, nil]],
      ["transferOrderQuantityCommitted", "SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityPacked", "SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityPicked", "SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityReceived", "SearchColumnDoubleField[]", [0, nil]],
      ["transferOrderQuantityShipped", "SearchColumnDoubleField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["unit", "SearchColumnStringField[]", [0, nil]],
      ["unitCostOverride", "SearchColumnDoubleField[]", [0, nil]],
      ["vendType", "SearchColumnSelectField[]", [0, nil]],
      ["visibleToCustomer", "SearchColumnBooleanField[]", [0, nil]],
      ["vsoeAllocation", "SearchColumnDoubleField[]", [0, nil]],
      ["vsoeAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["vsoeDeferral", "SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoeDelivered", "SearchColumnBooleanField[]", [0, nil]],
      ["vsoePermitDiscount", "SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["webSite", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ItemSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["account", "SearchMultiSelectField", [0, 1]],
      ["alternateDemandSourceItem", "SearchMultiSelectField", [0, 1]],
      ["atpLeadTime", "SearchDoubleField", [0, 1]],
      ["atpMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["autoLeadTime", "SearchBooleanField", [0, 1]],
      ["autoPreferredStockLevel", "SearchBooleanField", [0, 1]],
      ["autoReorderPoint", "SearchBooleanField", [0, 1]],
      ["availableToPartners", "SearchBooleanField", [0, 1]],
      ["averageCost", "SearchDoubleField", [0, 1]],
      ["binNumber", "SearchStringField", [0, 1]],
      ["binOnHandAvail", "SearchDoubleField", [0, 1]],
      ["binOnHandCount", "SearchDoubleField", [0, 1]],
      ["buildEntireAssembly", "SearchBooleanField", [0, 1]],
      ["buildTime", "SearchDoubleField", [0, 1]],
      ["buyItNowPrice", "SearchDoubleField", [0, 1]],
      ["caption", "SearchStringField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["component", "SearchMultiSelectField", [0, 1]],
      ["componentOf", "SearchMultiSelectField", [0, 1]],
      ["copyDescription", "SearchBooleanField", [0, 1]],
      ["correlatedItem", "SearchMultiSelectField", [0, 1]],
      ["correlatedItemCorrelation", "SearchDoubleField", [0, 1]],
      ["correlatedItemCount", "SearchLongField", [0, 1]],
      ["correlatedItemLift", "SearchDoubleField", [0, 1]],
      ["correlatedItemPurchaseRate", "SearchDoubleField", [0, 1]],
      ["cost", "SearchDoubleField", [0, 1]],
      ["costCategory", "SearchMultiSelectField", [0, 1]],
      ["costEstimate", "SearchDoubleField", [0, 1]],
      ["costEstimateType", "SearchEnumMultiSelectField", [0, 1]],
      ["costingMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["countryOfManufacture", "SearchEnumMultiSelectField", [0, 1]],
      ["created", "SearchDateField", [0, 1]],
      ["createJob", "SearchBooleanField", [0, 1]],
      ["dateViewed", "SearchDateField", [0, 1]],
      ["daysBeforeExpiration", "SearchDoubleField", [0, 1]],
      ["defaultReturnCost", "SearchDoubleField", [0, 1]],
      ["demandModifier", "SearchDoubleField", [0, 1]],
      ["demandSource", "SearchEnumMultiSelectField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["displayIneBayStore", "SearchBooleanField", [0, 1]],
      ["displayName", "SearchStringField", [0, 1]],
      ["dontShowPrice", "SearchBooleanField", [0, 1]],
      ["eBayItemDescription", "SearchStringField", [0, 1]],
      ["eBayItemSubtitle", "SearchStringField", [0, 1]],
      ["eBayItemTitle", "SearchStringField", [0, 1]],
      ["ebayRelistingOption", "SearchEnumMultiSelectField", [0, 1]],
      ["endAuctionsWhenOutOfStock", "SearchBooleanField", [0, 1]],
      ["excludeFromSitemap", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["featuredDescription", "SearchStringField", [0, 1]],
      ["feedDescription", "SearchStringField", [0, 1]],
      ["feedName", "SearchStringField", [0, 1]],
      ["fixedLotSize", "SearchDoubleField", [0, 1]],
      ["froogleProductFeed", "SearchBooleanField", [0, 1]],
      ["fxCost", "SearchDoubleField", [0, 1]],
      ["giftCertAuthCode", "SearchStringField", [0, 1]],
      ["giftCertEmail", "SearchStringField", [0, 1]],
      ["giftCertExpDate", "SearchDateField", [0, 1]],
      ["giftCertFrom", "SearchStringField", [0, 1]],
      ["giftCertMsg", "SearchStringField", [0, 1]],
      ["giftCertOrigAmt", "SearchStringField", [0, 1]],
      ["giftCertRecipient", "SearchStringField", [0, 1]],
      ["imageUrl", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["inventoryLocation", "SearchMultiSelectField", [0, 1]],
      ["isAvailable", "SearchBooleanField", [0, 1]],
      ["isDropShipItem", "SearchBooleanField", [0, 1]],
      ["isFulfillable", "SearchBooleanField", [0, 1]],
      ["isGcoCompliant", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isLotItem", "SearchBooleanField", [0, 1]],
      ["isOnline", "SearchBooleanField", [0, 1]],
      ["isPreferredVendor", "SearchBooleanField", [0, 1]],
      ["isSerialItem", "SearchBooleanField", [0, 1]],
      ["isSpecialOrderItem", "SearchBooleanField", [0, 1]],
      ["isSpecialWorkOrderItem", "SearchBooleanField", [0, 1]],
      ["issueProduct", "SearchMultiSelectField", [0, 1]],
      ["isTaxable", "SearchBooleanField", [0, 1]],
      ["isVsoeBundle", "SearchBooleanField", [0, 1]],
      ["itemId", "SearchStringField", [0, 1]],
      ["itemUrl", "SearchStringField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastPurchasePrice", "SearchDoubleField", [0, 1]],
      ["lastQuantityAvailableChange", "SearchDateField", [0, 1]],
      ["leadTime", "SearchLongField", [0, 1]],
      ["listingDuration", "SearchEnumMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["locationAtpLeadTime", "SearchDoubleField", [0, 1]],
      ["locationAverageCost", "SearchDoubleField", [0, 1]],
      ["locationCost", "SearchDoubleField", [0, 1]],
      ["locationDefaultReturnCost", "SearchDoubleField", [0, 1]],
      ["locationDemandSource", "SearchEnumMultiSelectField", [0, 1]],
      ["locationFixedLotSize", "SearchDoubleField", [0, 1]],
      ["locationPreferredStockLevel", "SearchDoubleField", [0, 1]],
      ["locationQuantityAvailable", "SearchDoubleField", [0, 1]],
      ["locationQuantityBackOrdered", "SearchDoubleField", [0, 1]],
      ["locationQuantityCommitted", "SearchDoubleField", [0, 1]],
      ["locationQuantityInTransit", "SearchDoubleField", [0, 1]],
      ["locationQuantityOnHand", "SearchDoubleField", [0, 1]],
      ["locationQuantityOnOrder", "SearchDoubleField", [0, 1]],
      ["locationReorderPoint", "SearchDoubleField", [0, 1]],
      ["locationSupplyLotSizingMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["locationSupplyType", "SearchEnumMultiSelectField", [0, 1]],
      ["locationTotalValue", "SearchDoubleField", [0, 1]],
      ["manufacturer", "SearchStringField", [0, 1]],
      ["manufactureraddr1", "SearchStringField", [0, 1]],
      ["manufacturerCity", "SearchStringField", [0, 1]],
      ["manufacturerState", "SearchStringField", [0, 1]],
      ["manufacturerTariff", "SearchStringField", [0, 1]],
      ["manufacturerTaxId", "SearchStringField", [0, 1]],
      ["manufacturerZip", "SearchStringField", [0, 1]],
      ["matchBillToReceipt", "SearchBooleanField", [0, 1]],
      ["matrix", "SearchBooleanField", [0, 1]],
      ["matrixChild", "SearchBooleanField", [0, 1]],
      ["metaTagHtml", "SearchStringField", [0, 1]],
      ["minimumQuantity", "SearchLongField", [0, 1]],
      ["mpn", "SearchStringField", [0, 1]],
      ["multManufactureAddr", "SearchBooleanField", [0, 1]],
      ["nexTagCategory", "SearchStringField", [0, 1]],
      ["nexTagProductFeed", "SearchBooleanField", [0, 1]],
      ["numActiveListings", "SearchLongField", [0, 1]],
      ["numberAllowedDownloads", "SearchDoubleField", [0, 1]],
      ["numCurrentlyListed", "SearchLongField", [0, 1]],
      ["offerSupport", "SearchBooleanField", [0, 1]],
      ["onlineCustomerPrice", "SearchDoubleField", [0, 1]],
      ["onSpecial", "SearchBooleanField", [0, 1]],
      ["otherVendor", "SearchMultiSelectField", [0, 1]],
      ["outOfStockBehavior", "SearchMultiSelectField", [0, 1]],
      ["overallQuantityPricingType", "SearchEnumMultiSelectField", [0, 1]],
      ["pageTitle", "SearchStringField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["preferenceCriterion", "SearchStringField", [0, 1]],
      ["preferredBin", "SearchBooleanField", [0, 1]],
      ["preferredLocation", "SearchMultiSelectField", [0, 1]],
      ["preferredStockLevel", "SearchDoubleField", [0, 1]],
      ["preferredStockLevelDays", "SearchLongField", [0, 1]],
      ["price", "SearchDoubleField", [0, 1]],
      ["pricesIncludeTax", "SearchBooleanField", [0, 1]],
      ["pricingGroup", "SearchMultiSelectField", [0, 1]],
      ["primaryCategory", "SearchLongField", [0, 1]],
      ["purchaseUnit", "SearchMultiSelectField", [0, 1]],
      ["quantityAvailable", "SearchDoubleField", [0, 1]],
      ["quantityBackOrdered", "SearchDoubleField", [0, 1]],
      ["quantityCommitted", "SearchDoubleField", [0, 1]],
      ["quantityOnHand", "SearchDoubleField", [0, 1]],
      ["quantityOnOrder", "SearchDoubleField", [0, 1]],
      ["quantityPricingSchedule", "SearchMultiSelectField", [0, 1]],
      ["reorderMultiple", "SearchLongField", [0, 1]],
      ["reorderPoint", "SearchDoubleField", [0, 1]],
      ["reservePrice", "SearchDoubleField", [0, 1]],
      ["revRecSchedule", "SearchMultiSelectField", [0, 1]],
      ["safetyStockLevel", "SearchDoubleField", [0, 1]],
      ["safetyStockLevelDays", "SearchLongField", [0, 1]],
      ["salesDescription", "SearchStringField", [0, 1]],
      ["saleUnit", "SearchMultiSelectField", [0, 1]],
      ["scheduleBCode", "SearchEnumMultiSelectField", [0, 1]],
      ["scheduleBNumber", "SearchStringField", [0, 1]],
      ["scheduleBQuantity", "SearchStringField", [0, 1]],
      ["searchKeywords", "SearchStringField", [0, 1]],
      ["seasonalDemand", "SearchBooleanField", [0, 1]],
      ["sellOnEBay", "SearchBooleanField", [0, 1]],
      ["serialNumber", "SearchStringField", [0, 1]],
      ["serialNumberLocation", "SearchMultiSelectField", [0, 1]],
      ["shipIndividually", "SearchBooleanField", [0, 1]],
      ["shipPackage", "SearchMultiSelectField", [0, 1]],
      ["shippingRate", "SearchDoubleField", [0, 1]],
      ["shoppingDotComCategory", "SearchStringField", [0, 1]],
      ["shoppingProductFeed", "SearchBooleanField", [0, 1]],
      ["shopzillaCategoryId", "SearchLongField", [0, 1]],
      ["shopzillaProductFeed", "SearchBooleanField", [0, 1]],
      ["sitemapPriority", "SearchEnumMultiSelectField", [0, 1]],
      ["softDescriptor", "SearchMultiSelectField", [0, 1]],
      ["startingPrice", "SearchDoubleField", [0, 1]],
      ["stockDescription", "SearchStringField", [0, 1]],
      ["stockUnit", "SearchMultiSelectField", [0, 1]],
      ["storeDescription", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["subType", "SearchEnumMultiSelectField", [0, 1]],
      ["supplyLotSizingMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["supplyReplenishmentMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["supplyType", "SearchEnumMultiSelectField", [0, 1]],
      ["taxCode", "SearchMultiSelectField", [0, 1]],
      ["taxSchedule", "SearchMultiSelectField", [0, 1]],
      ["thumbnailUrl", "SearchStringField", [0, 1]],
      ["totalValue", "SearchDoubleField", [0, 1]],
      ["trackLandedCost", "SearchBooleanField", [0, 1]],
      ["transferPrice", "SearchDoubleField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["unitsType", "SearchMultiSelectField", [0, 1]],
      ["upcCode", "SearchStringField", [0, 1]],
      ["urlComponent", "SearchStringField", [0, 1]],
      ["useBins", "SearchBooleanField", [0, 1]],
      ["useMarginalRates", "SearchBooleanField", [0, 1]],
      ["vendor", "SearchMultiSelectField", [0, 1]],
      ["vendorCode", "SearchStringField", [0, 1]],
      ["vendorCost", "SearchDoubleField", [0, 1]],
      ["vendorCostEntered", "SearchDoubleField", [0, 1]],
      ["vendorName", "SearchStringField", [0, 1]],
      ["vsoeDeferral", "SearchEnumMultiSelectField", [0, 1]],
      ["vsoeDelivered", "SearchBooleanField", [0, 1]],
      ["vsoePermitDiscount", "SearchEnumMultiSelectField", [0, 1]],
      ["vsoePrice", "SearchDoubleField", [0, 1]],
      ["webSite", "SearchMultiSelectField", [0, 1]],
      ["weight", "SearchDoubleField", [0, 1]],
      ["yahooProductFeed", "SearchBooleanField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ItemSearchRowBasic"),
    :schema_element => [
      ["alternateDemandSourceItem", "SearchColumnStringField[]", [0, nil]],
      ["assetAccount", "SearchColumnSelectField[]", [0, nil]],
      ["atpLeadTime", "SearchColumnDoubleField[]", [0, nil]],
      ["atpMethod", "SearchColumnEnumSelectField[]", [0, nil]],
      ["autoLeadTime", "SearchColumnBooleanField[]", [0, nil]],
      ["autoPreferredStockLevel", "SearchColumnBooleanField[]", [0, nil]],
      ["autoReorderPoint", "SearchColumnBooleanField[]", [0, nil]],
      ["availableToPartners", "SearchColumnBooleanField[]", [0, nil]],
      ["averageCost", "SearchColumnDoubleField[]", [0, nil]],
      ["basePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["billExchRateVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["billPriceVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["billQtyVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["binNumber", "SearchColumnStringField[]", [0, nil]],
      ["binOnHandAvail", "SearchColumnDoubleField[]", [0, nil]],
      ["binOnHandCount", "SearchColumnDoubleField[]", [0, nil]],
      ["buildEntireAssembly", "SearchColumnBooleanField[]", [0, nil]],
      ["buildTime", "SearchColumnDoubleField[]", [0, nil]],
      ["buyItNowPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["category", "SearchColumnStringField[]", [0, nil]],
      ["categoryPreferred", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["copyDescription", "SearchColumnBooleanField[]", [0, nil]],
      ["correlatedItem", "SearchColumnSelectField[]", [0, nil]],
      ["correlatedItemCorrelation", "SearchColumnDoubleField[]", [0, nil]],
      ["correlatedItemCount", "SearchColumnLongField[]", [0, nil]],
      ["correlatedItemLift", "SearchColumnDoubleField[]", [0, nil]],
      ["correlatedItemPurchaseRate", "SearchColumnDoubleField[]", [0, nil]],
      ["cost", "SearchColumnDoubleField[]", [0, nil]],
      ["costCategory", "SearchColumnStringField[]", [0, nil]],
      ["costEstimate", "SearchColumnDoubleField[]", [0, nil]],
      ["costEstimateType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["costingMethod", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryOfManufacture", "SearchColumnEnumSelectField[]", [0, nil]],
      ["created", "SearchColumnDateField[]", [0, nil]],
      ["createJob", "SearchColumnBooleanField[]", [0, nil]],
      ["custReturnVarianceAccount", "SearchColumnSelectField[]", [0, nil]],
      ["dateViewed", "SearchColumnDateField[]", [0, nil]],
      ["daysBeforeExpiration", "SearchColumnStringField[]", [0, nil]],
      ["defaultReturnCost", "SearchColumnDoubleField[]", [0, nil]],
      ["deferredExpenseAccount", "SearchColumnSelectField[]", [0, nil]],
      ["deferredRevenueAccount", "SearchColumnSelectField[]", [0, nil]],
      ["demandModifier", "SearchColumnDoubleField[]", [0, nil]],
      ["demandSource", "SearchColumnEnumSelectField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["departmentnohierarchy", "SearchColumnSelectField[]", [0, nil]],
      ["displayIneBayStore", "SearchColumnBooleanField[]", [0, nil]],
      ["displayName", "SearchColumnStringField[]", [0, nil]],
      ["dontShowPrice", "SearchColumnBooleanField[]", [0, nil]],
      ["eBayItemDescription", "SearchColumnStringField[]", [0, nil]],
      ["eBayItemSubtitle", "SearchColumnStringField[]", [0, nil]],
      ["eBayItemTitle", "SearchColumnStringField[]", [0, nil]],
      ["ebayRelistingOption", "SearchColumnEnumSelectField[]", [0, nil]],
      ["endAuctionsWhenOutOfStock", "SearchColumnBooleanField[]", [0, nil]],
      ["excludeFromSitemap", "SearchColumnBooleanField[]", [0, nil]],
      ["expenseAccount", "SearchColumnSelectField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["featuredDescription", "SearchColumnStringField[]", [0, nil]],
      ["feedDescription", "SearchColumnStringField[]", [0, nil]],
      ["feedName", "SearchColumnStringField[]", [0, nil]],
      ["fixedLotSize", "SearchColumnDoubleField[]", [0, nil]],
      ["froogleProductFeed", "SearchColumnBooleanField[]", [0, nil]],
      ["fxCost", "SearchColumnDoubleField[]", [0, nil]],
      ["gainLossAccount", "SearchColumnSelectField[]", [0, nil]],
      ["giftCertAuthCode", "SearchColumnStringField[]", [0, nil]],
      ["giftCertEmail", "SearchColumnStringField[]", [0, nil]],
      ["giftCertExpirationDate", "SearchColumnStringField[]", [0, nil]],
      ["giftCertFrom", "SearchColumnStringField[]", [0, nil]],
      ["giftCertMessage", "SearchColumnStringField[]", [0, nil]],
      ["giftCertOriginalAmount", "SearchColumnStringField[]", [0, nil]],
      ["giftCertRecipient", "SearchColumnStringField[]", [0, nil]],
      ["hits", "SearchColumnLongField[]", [0, nil]],
      ["imageUrl", "SearchColumnStringField[]", [0, nil]],
      ["incomeAccount", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["inventoryLocation", "SearchColumnSelectField[]", [0, nil]],
      ["isAvailable", "SearchColumnBooleanField[]", [0, nil]],
      ["isDropShipItem", "SearchColumnBooleanField[]", [0, nil]],
      ["isFulfillable", "SearchColumnBooleanField[]", [0, nil]],
      ["isGcoCompliant", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isLotItem", "SearchColumnBooleanField[]", [0, nil]],
      ["isOnline", "SearchColumnBooleanField[]", [0, nil]],
      ["isSerialItem", "SearchColumnBooleanField[]", [0, nil]],
      ["isSpecialOrderItem", "SearchColumnBooleanField[]", [0, nil]],
      ["isSpecialWorkOrderItem", "SearchColumnBooleanField[]", [0, nil]],
      ["issueProduct", "SearchColumnSelectField[]", [0, nil]],
      ["isTaxable", "SearchColumnBooleanField[]", [0, nil]],
      ["isVsoeBundle", "SearchColumnBooleanField[]", [0, nil]],
      ["itemId", "SearchColumnStringField[]", [0, nil]],
      ["itemUrl", "SearchColumnStringField[]", [0, nil]],
      ["lastPurchasePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["lastQuantityAvailableChange", "SearchColumnDateField[]", [0, nil]],
      ["leadTime", "SearchColumnLongField[]", [0, nil]],
      ["liabilityAccount", "SearchColumnSelectField[]", [0, nil]],
      ["listingDuration", "SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["locationAtpLeadTime", "SearchColumnDoubleField[]", [0, nil]],
      ["locationAverageCost", "SearchColumnDoubleField[]", [0, nil]],
      ["locationBinQuantityAvailable", "SearchColumnDoubleField[]", [0, nil]],
      ["locationCost", "SearchColumnDoubleField[]", [0, nil]],
      ["locationDefaultReturnCost", "SearchColumnDoubleField[]", [0, nil]],
      ["locationDemandSource", "SearchColumnEnumSelectField[]", [0, nil]],
      ["locationFixedLotSize", "SearchColumnDoubleField[]", [0, nil]],
      ["locationPreferredStockLevel", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityAvailable", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityBackOrdered", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityCommitted", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityInTransit", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityOnHand", "SearchColumnDoubleField[]", [0, nil]],
      ["locationQuantityOnOrder", "SearchColumnDoubleField[]", [0, nil]],
      ["locationReOrderPoint", "SearchColumnDoubleField[]", [0, nil]],
      ["locationSupplyLotSizingMethod", "SearchColumnEnumSelectField[]", [0, nil]],
      ["locationSupplyType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["locationTotalValue", "SearchColumnDoubleField[]", [0, nil]],
      ["manufacturer", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerAddr1", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerCity", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerState", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerTariff", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerTaxId", "SearchColumnStringField[]", [0, nil]],
      ["manufacturerZip", "SearchColumnStringField[]", [0, nil]],
      ["matchBillToReceipt", "SearchColumnBooleanField[]", [0, nil]],
      ["memberItem", "SearchColumnSelectField[]", [0, nil]],
      ["memberQuantity", "SearchColumnDoubleField[]", [0, nil]],
      ["metaTagHtml", "SearchColumnStringField[]", [0, nil]],
      ["minimumQuantity", "SearchColumnStringField[]", [0, nil]],
      ["modified", "SearchColumnDateField[]", [0, nil]],
      ["mpn", "SearchColumnStringField[]", [0, nil]],
      ["multManufactureAddr", "SearchColumnBooleanField[]", [0, nil]],
      ["nextagCategory", "SearchColumnStringField[]", [0, nil]],
      ["nextagProductFeed", "SearchColumnBooleanField[]", [0, nil]],
      ["noPriceMessage", "SearchColumnStringField[]", [0, nil]],
      ["numActiveListings", "SearchColumnLongField[]", [0, nil]],
      ["numberAllowedDownloads", "SearchColumnStringField[]", [0, nil]],
      ["numCurrentlyListed", "SearchColumnLongField[]", [0, nil]],
      ["offerSupport", "SearchColumnBooleanField[]", [0, nil]],
      ["onlineCustomerPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["onlinePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["onSpecial", "SearchColumnBooleanField[]", [0, nil]],
      ["otherPrices", "SearchColumnDoubleField[]", [0, nil]],
      ["otherVendor", "SearchColumnSelectField[]", [0, nil]],
      ["outOfStockBehavior", "SearchColumnStringField[]", [0, nil]],
      ["outOfStockMessage", "SearchColumnStringField[]", [0, nil]],
      ["overallQuantityPricingType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["pageTitle", "SearchColumnStringField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["preferenceCriterion", "SearchColumnStringField[]", [0, nil]],
      ["preferredBin", "SearchColumnBooleanField[]", [0, nil]],
      ["preferredLocation", "SearchColumnSelectField[]", [0, nil]],
      ["preferredStockLevel", "SearchColumnDoubleField[]", [0, nil]],
      ["preferredStockLevelDays", "SearchColumnLongField[]", [0, nil]],
      ["pricesIncludeTax", "SearchColumnBooleanField[]", [0, nil]],
      ["pricingGroup", "SearchColumnSelectField[]", [0, nil]],
      ["primaryCategory", "SearchColumnStringField[]", [0, nil]],
      ["prodPriceVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["prodQtyVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["purchaseDescription", "SearchColumnStringField[]", [0, nil]],
      ["purchasePriceVarianceAcct", "SearchColumnSelectField[]", [0, nil]],
      ["purchaseUnit", "SearchColumnSelectField[]", [0, nil]],
      ["quantityAvailable", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityBackOrdered", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityCommitted", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnHand", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityOnOrder", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityPricingSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["reorderMultiple", "SearchColumnLongField[]", [0, nil]],
      ["reOrderPoint", "SearchColumnDoubleField[]", [0, nil]],
      ["reservePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["revRecSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["safetyStockLevel", "SearchColumnDoubleField[]", [0, nil]],
      ["safetyStockLevelDays", "SearchColumnLongField[]", [0, nil]],
      ["salesDescription", "SearchColumnStringField[]", [0, nil]],
      ["salesTaxCode", "SearchColumnSelectField[]", [0, nil]],
      ["saleUnit", "SearchColumnSelectField[]", [0, nil]],
      ["scheduleBCode", "SearchColumnEnumSelectField[]", [0, nil]],
      ["scheduleBNumber", "SearchColumnStringField[]", [0, nil]],
      ["scheduleBQuantity", "SearchColumnStringField[]", [0, nil]],
      ["searchKeywords", "SearchColumnStringField[]", [0, nil]],
      ["seasonalDemand", "SearchColumnBooleanField[]", [0, nil]],
      ["sellOnEBay", "SearchColumnBooleanField[]", [0, nil]],
      ["serialNumber", "SearchColumnStringField[]", [0, nil]],
      ["serialNumberLocation", "SearchColumnStringField[]", [0, nil]],
      ["shipIndividually", "SearchColumnBooleanField[]", [0, nil]],
      ["shipPackage", "SearchColumnSelectField[]", [0, nil]],
      ["shippingRate", "SearchColumnDoubleField[]", [0, nil]],
      ["shoppingDotComCategory", "SearchColumnStringField[]", [0, nil]],
      ["shoppingProductFeed", "SearchColumnBooleanField[]", [0, nil]],
      ["shopzillaCategoryId", "SearchColumnLongField[]", [0, nil]],
      ["shopzillaProductFeed", "SearchColumnBooleanField[]", [0, nil]],
      ["sitemapPriority", "SearchColumnEnumSelectField[]", [0, nil]],
      ["softDescriptor", "SearchColumnSelectField[]", [0, nil]],
      ["startingPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["stockDescription", "SearchColumnStringField[]", [0, nil]],
      ["stockUnit", "SearchColumnSelectField[]", [0, nil]],
      ["storeDescription", "SearchColumnStringField[]", [0, nil]],
      ["storeDetailedDescription", "SearchColumnStringField[]", [0, nil]],
      ["storeDisplayImage", "SearchColumnSelectField[]", [0, nil]],
      ["storeDisplayName", "SearchColumnStringField[]", [0, nil]],
      ["storeDisplayThumbnail", "SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["subType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyLotSizingMethod", "SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyReplenishmentMethod", "SearchColumnEnumSelectField[]", [0, nil]],
      ["supplyType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["taxSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["thumbNailUrl", "SearchColumnStringField[]", [0, nil]],
      ["totalValue", "SearchColumnDoubleField[]", [0, nil]],
      ["trackLandedCost", "SearchColumnBooleanField[]", [0, nil]],
      ["transferPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["unbuildVarianceAccount", "SearchColumnSelectField[]", [0, nil]],
      ["unitsType", "SearchColumnSelectField[]", [0, nil]],
      ["upcCode", "SearchColumnStringField[]", [0, nil]],
      ["urlComponent", "SearchColumnStringField[]", [0, nil]],
      ["useBins", "SearchColumnBooleanField[]", [0, nil]],
      ["useMarginalRates", "SearchColumnBooleanField[]", [0, nil]],
      ["vendor", "SearchColumnSelectField[]", [0, nil]],
      ["vendorCode", "SearchColumnStringField[]", [0, nil]],
      ["vendorCost", "SearchColumnDoubleField[]", [0, nil]],
      ["vendorCostEntered", "SearchColumnDoubleField[]", [0, nil]],
      ["vendorName", "SearchColumnStringField[]", [0, nil]],
      ["vendorSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["vendReturnVarianceAccount", "SearchColumnSelectField[]", [0, nil]],
      ["vsoeDeferral", "SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoeDelivered", "SearchColumnBooleanField[]", [0, nil]],
      ["vsoePermitDiscount", "SearchColumnEnumSelectField[]", [0, nil]],
      ["vsoePrice", "SearchColumnDoubleField[]", [0, nil]],
      ["webSite", "SearchColumnSelectField[]", [0, nil]],
      ["weight", "SearchColumnDoubleField[]", [0, nil]],
      ["weightUnit", "SearchColumnEnumSelectField[]", [0, nil]],
      ["yahooProductFeed", "SearchColumnBooleanField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PartnerSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["assignTasks", "SearchBooleanField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["billAddress", "SearchStringField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["commissionPlan", "SearchMultiSelectField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["eligibleForCommission", "SearchBooleanField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["emailPreference", "SearchEnumMultiSelectField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "SearchBooleanField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isPerson", "SearchBooleanField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["otherRelationships", "SearchEnumMultiSelectField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["partnerCode", "SearchStringField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["promoCode", "SearchMultiSelectField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["shipAddress", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["uRL", ["SearchStringField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "URL")], [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PartnerSearchRowBasic"),
    :schema_element => [
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["assignTasks", "SearchColumnBooleanField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnStringField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["companyName", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["eligibleForCommission", "SearchColumnBooleanField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "SearchColumnEnumSelectField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "SearchColumnBooleanField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["partnerCode", "SearchColumnStringField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["promoCode", "SearchColumnStringField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "VendorSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["accountNumber", "SearchStringField", [0, 1]],
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["balance", "SearchDoubleField", [0, 1]],
      ["billAddress", "SearchStringField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["contact", "SearchStringField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["creditLimit", "SearchDoubleField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["currentExchangeRate", "SearchDoubleField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["eligibleForCommission", "SearchBooleanField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["emailPreference", "SearchEnumMultiSelectField", [0, 1]],
      ["emailTransactions", "SearchBooleanField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["expenseAccount", "SearchMultiSelectField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["faxTransactions", "SearchBooleanField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "SearchBooleanField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["is1099Eligible", "SearchBooleanField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isJobResourceVend", "SearchBooleanField", [0, 1]],
      ["isPerson", "SearchBooleanField", [0, 1]],
      ["laborCost", "SearchDoubleField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["otherRelationships", "SearchEnumMultiSelectField", [0, 1]],
      ["payablesAccount", "SearchMultiSelectField", [0, 1]],
      ["pec", "SearchStringField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["printTransactions", "SearchBooleanField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["shipAddress", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["taxIdNum", "SearchStringField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["unbilledOrders", "SearchDoubleField", [0, 1]],
      ["url", "SearchStringField", [0, 1]],
      ["vatRegNumber", "SearchStringField", [0, 1]],
      ["workCalendar", "SearchMultiSelectField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "VendorSearchRowBasic"),
    :schema_element => [
      ["accountNumber", "SearchColumnStringField[]", [0, nil]],
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["altContact", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["balance", "SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["companyName", "SearchColumnStringField[]", [0, nil]],
      ["contact", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["creditLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["currentExchangeRate", "SearchColumnDoubleField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["eligibleForCommission", "SearchColumnBooleanField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["emailPreference", "SearchColumnEnumSelectField[]", [0, nil]],
      ["emailTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["expenseAccount", "SearchColumnSelectField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["faxTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["hasDuplicates", "SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["is1099Eligible", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isJobResourceVend", "SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "SearchColumnBooleanField[]", [0, nil]],
      ["laborCost", "SearchColumnDoubleField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["payablesAccount", "SearchColumnSelectField[]", [0, nil]],
      ["pec", "SearchColumnStringField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["printOnCheckAs", "SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["taxIdNum", "SearchColumnStringField[]", [0, nil]],
      ["terms", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "SearchColumnStringField[]", [0, nil]],
      ["workCalendar", "SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SiteCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SiteCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["dateViewed", "SearchDateField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["excludeFromSitemap", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["name", "SearchMultiSelectField", [0, 1]],
      ["sitemapPriority", "SearchEnumMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SiteCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SiteCategorySearchRowBasic"),
    :schema_element => [
      ["dateViewed", "SearchColumnDateField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["excludeFromSitemap", "SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["fullName", "SearchColumnStringField[]", [0, nil]],
      ["hidden", "SearchColumnBooleanField[]", [0, nil]],
      ["hits", "SearchColumnLongField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["longDescription", "SearchColumnStringField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["pageTitle", "SearchColumnStringField[]", [0, nil]],
      ["sitemapPriority", "SearchColumnEnumSelectField[]", [0, nil]],
      ["urlComponent", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => TimeBillSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TimeBillSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["approved", "SearchBooleanField", [0, 1]],
      ["billable", "SearchBooleanField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["customer", "SearchMultiSelectField", [0, 1]],
      ["date", "SearchDateField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["duration", "SearchDoubleField", [0, 1]],
      ["employee", "SearchMultiSelectField", [0, 1]],
      ["exempt", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["lastModified", "SearchDateField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["paidByPayroll", "SearchBooleanField", [0, 1]],
      ["paidExternally", "SearchBooleanField", [0, 1]],
      ["payItem", "SearchMultiSelectField", [0, 1]],
      ["productive", "SearchBooleanField", [0, 1]],
      ["status", "SearchBooleanField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["temporaryLocalJurisdiction", "SearchMultiSelectField", [0, 1]],
      ["temporaryStateJurisdiction", "SearchMultiSelectField", [0, 1]],
      ["type", "SearchEnumMultiSelectField", [0, 1]],
      ["utilized", "SearchBooleanField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TimeBillSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TimeBillSearchRowBasic"),
    :schema_element => [
      ["v_break", ["SearchColumnStringField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "break")], [0, nil]],
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["customer", "SearchColumnSelectField[]", [0, nil]],
      ["date", "SearchColumnDateField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["durationDecimal", "SearchColumnDoubleField[]", [0, nil]],
      ["employee", "SearchColumnSelectField[]", [0, nil]],
      ["endTime", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["hours", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isBillable", "SearchColumnBooleanField[]", [0, nil]],
      ["isExempt", "SearchColumnBooleanField[]", [0, nil]],
      ["isProductive", "SearchColumnBooleanField[]", [0, nil]],
      ["isUtilized", "SearchColumnBooleanField[]", [0, nil]],
      ["item", "SearchColumnStringField[]", [0, nil]],
      ["lastModified", "SearchColumnDateField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["paidExternally", "SearchColumnBooleanField[]", [0, nil]],
      ["payItem", "SearchColumnSelectField[]", [0, nil]],
      ["payrollDate", "SearchColumnDateField[]", [0, nil]],
      ["rate", "SearchColumnDoubleField[]", [0, nil]],
      ["startTime", "SearchColumnDateField[]", [0, nil]],
      ["status", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnStringField[]", [0, nil]],
      ["supervisorApproval", "SearchColumnBooleanField[]", [0, nil]],
      ["temporaryLocalJurisdiction", "SearchColumnStringField[]", [0, nil]],
      ["temporaryStateJurisdiction", "SearchColumnStringField[]", [0, nil]],
      ["type", "SearchColumnEnumSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SolutionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SolutionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["abstract", "SearchStringField", [0, 1]],
      ["assigned", "SearchMultiSelectField", [0, 1]],
      ["caseCount", "SearchLongField", [0, 1]],
      ["code", "SearchStringField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["find", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isOnline", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["topic", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SolutionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SolutionSearchRowBasic"),
    :schema_element => [
      ["assigned", "SearchColumnSelectField[]", [0, nil]],
      ["caseCount", "SearchColumnLongField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["displayOnline", "SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["previewref", "SearchColumnStringField[]", [0, nil]],
      ["solutionCode", "SearchColumnStringField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TopicSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TopicSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TopicSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TopicSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => SubsidiarySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SubsidiarySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["address", "SearchStringField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isElimination", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["legalName", "SearchStringField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["nameNoHierarchy", "SearchStringField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["taxIdNum", "SearchStringField", [0, 1]],
      ["tranPrefix", "SearchStringField", [0, 1]],
      ["url", "SearchStringField", [0, 1]],
      ["zip", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SubsidiarySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SubsidiarySearchRowBasic"),
    :schema_element => [
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["anonymousCustomerInboundEmail", "SearchColumnStringField[]", [0, nil]],
      ["anonymousCustomerOnlineForms", "SearchColumnStringField[]", [0, nil]],
      ["caseAssignmentTemplate", "SearchColumnStringField[]", [0, nil]],
      ["caseAutomaticClosureTemplate", "SearchColumnStringField[]", [0, nil]],
      ["caseCopyEmployeeTemplate", "SearchColumnStringField[]", [0, nil]],
      ["caseCreationTemplate", "SearchColumnStringField[]", [0, nil]],
      ["caseEscalationTemplate", "SearchColumnStringField[]", [0, nil]],
      ["caseUpdateTemplate", "SearchColumnStringField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["companyNameForSupportMessages", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["employeeCaseUpdateTemplate", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isElimination", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["legalName", "SearchColumnStringField[]", [0, nil]],
      ["mainSupportEmailAddress", "SearchColumnStringField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["nameNoHierarchy", "SearchColumnStringField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["taxIdNum", "SearchColumnStringField[]", [0, nil]],
      ["tranPrefix", "SearchColumnStringField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["zip", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GiftCertificateSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "GiftCertificateSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["amountAvailableBilled", "SearchDoubleField", [0, 1]],
      ["amountRemaining", "SearchDoubleField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["expirationDate", "SearchDateField", [0, 1]],
      ["giftCertCode", "SearchStringField", [0, 1]],
      ["incomeAccount", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isActive", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["liabilityAccount", "SearchMultiSelectField", [0, 1]],
      ["message", "SearchStringField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["originalAmount", "SearchDoubleField", [0, 1]],
      ["purchaseDate", "SearchDateField", [0, 1]],
      ["sender", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GiftCertificateSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "GiftCertificateSearchRowBasic"),
    :schema_element => [
      ["amountRemaining", "SearchColumnDoubleField[]", [0, nil]],
      ["amtAvailBilled", "SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["expirationDate", "SearchColumnDateField[]", [0, nil]],
      ["gcActive", "SearchColumnBooleanField[]", [0, nil]],
      ["giftCertCode", "SearchColumnStringField[]", [0, nil]],
      ["incomeAcct", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["liabilityAcct", "SearchColumnStringField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["originalAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["purchaseDate", "SearchColumnDateField[]", [0, nil]],
      ["sender", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FolderSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "FolderSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isTopLevel", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["numFiles", "SearchLongField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["predecessor", "SearchMultiSelectField", [0, 1]],
      ["private", "SearchBooleanField", [0, 1]],
      ["size", "SearchLongField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FolderSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "FolderSearchRowBasic"),
    :schema_element => [
      ["v_class", ["SearchColumnSelectField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["department", "SearchColumnSelectField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["folderSize", "SearchColumnLongField[]", [0, nil]],
      ["group", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["numFiles", "SearchColumnLongField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => FileSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "FileSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["availableWithoutLogin", "SearchBooleanField", [0, 1]],
      ["created", "SearchDateField", [0, 1]],
      ["dateViewed", "SearchDateField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["documentSize", "SearchLongField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fileType", "SearchEnumMultiSelectField", [0, 1]],
      ["folder", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isAvailable", "SearchBooleanField", [0, 1]],
      ["isLink", "SearchBooleanField", [0, 1]],
      ["modified", "SearchDateField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["url", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FileSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "FileSearchRowBasic"),
    :schema_element => [
      ["availableWithoutLogin", "SearchColumnBooleanField[]", [0, nil]],
      ["created", "SearchColumnDateField[]", [0, nil]],
      ["dateViewed", "SearchColumnDateField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["documentSize", "SearchColumnLongField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["fileType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["folder", "SearchColumnSelectField[]", [0, nil]],
      ["hits", "SearchColumnLongField[]", [0, nil]],
      ["hostedPath", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isAvailable", "SearchColumnBooleanField[]", [0, nil]],
      ["modified", "SearchColumnDateField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => JobSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["accountNumber", "SearchStringField", [0, 1]],
      ["actualTime", "SearchDoubleField", [0, 1]],
      ["address", "SearchStringField", [0, 1]],
      ["addressee", "SearchStringField", [0, 1]],
      ["addressLabel", "SearchStringField", [0, 1]],
      ["addressPhone", "SearchStringField", [0, 1]],
      ["allocatePayrollExpenses", "SearchBooleanField", [0, 1]],
      ["allowAllResourcesForTasks", "SearchBooleanField", [0, 1]],
      ["allowExpenses", "SearchBooleanField", [0, 1]],
      ["allowTime", "SearchBooleanField", [0, 1]],
      ["attention", "SearchStringField", [0, 1]],
      ["billingSchedule", "SearchMultiSelectField", [0, 1]],
      ["calculatedEndDate", "SearchDateField", [0, 1]],
      ["calculatedEndDateBaseline", "SearchDateField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["city", "SearchStringField", [0, 1]],
      ["comments", "SearchStringField", [0, 1]],
      ["contact", "SearchStringField", [0, 1]],
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["county", "SearchStringField", [0, 1]],
      ["customer", "SearchMultiSelectField", [0, 1]],
      ["dateCreated", "SearchDateField", [0, 1]],
      ["email", "SearchStringField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["entityId", "SearchStringField", [0, 1]],
      ["estCost", "SearchDoubleField", [0, 1]],
      ["estEndDate", "SearchDateField", [0, 1]],
      ["estimatedGrossProfit", "SearchDoubleField", [0, 1]],
      ["estimatedGrossProfitPercent", "SearchDoubleField", [0, 1]],
      ["estimatedLaborCost", "SearchDoubleField", [0, 1]],
      ["estimatedLaborCostBaseline", "SearchDoubleField", [0, 1]],
      ["estimatedLaborRevenue", "SearchDoubleField", [0, 1]],
      ["estimatedTime", "SearchDoubleField", [0, 1]],
      ["estimatedTimeOverride", "SearchDoubleField", [0, 1]],
      ["estimatedTimeOverrideBaseline", "SearchDoubleField", [0, 1]],
      ["estRevenue", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["fax", "SearchStringField", [0, 1]],
      ["giveAccess", "SearchBooleanField", [0, 1]],
      ["globalSubscriptionStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["image", "SearchStringField", [0, 1]],
      ["includeCrmTasksInTotals", "SearchBooleanField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDefaultBilling", "SearchBooleanField", [0, 1]],
      ["isDefaultShipping", "SearchBooleanField", [0, 1]],
      ["isExemptTime", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isProductiveTime", "SearchBooleanField", [0, 1]],
      ["isUtilizedTime", "SearchBooleanField", [0, 1]],
      ["jobBillingType", "SearchEnumMultiSelectField", [0, 1]],
      ["jobItem", "SearchMultiSelectField", [0, 1]],
      ["jobPrice", "SearchDoubleField", [0, 1]],
      ["jobResource", "SearchMultiSelectField", [0, 1]],
      ["jobResourceRole", "SearchMultiSelectField", [0, 1]],
      ["language", "SearchEnumMultiSelectField", [0, 1]],
      ["lastBaselineDate", "SearchDateField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["level", "SearchEnumMultiSelectField", [0, 1]],
      ["limitTimeToAssignees", "SearchBooleanField", [0, 1]],
      ["materializeTime", "SearchBooleanField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["pctComplete", "SearchLongField", [0, 1]],
      ["percentTimeComplete", "SearchLongField", [0, 1]],
      ["permission", "SearchEnumMultiSelectField", [0, 1]],
      ["phone", "SearchStringField", [0, 1]],
      ["phoneticName", "SearchStringField", [0, 1]],
      ["projectedEndDateBaseline", "SearchDateField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["startDateBaseline", "SearchDateField", [0, 1]],
      ["state", "SearchStringField", [0, 1]],
      ["status", "SearchMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["timeRemaining", "SearchDoubleField", [0, 1]],
      ["type", "SearchMultiSelectField", [0, 1]],
      ["zipCode", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobSearchRowBasic"),
    :schema_element => [
      ["accountNumber", "SearchColumnStringField[]", [0, nil]],
      ["actualTime", "SearchColumnDoubleField[]", [0, nil]],
      ["address", "SearchColumnStringField[]", [0, nil]],
      ["address1", "SearchColumnStringField[]", [0, nil]],
      ["address2", "SearchColumnStringField[]", [0, nil]],
      ["address3", "SearchColumnStringField[]", [0, nil]],
      ["addressee", "SearchColumnStringField[]", [0, nil]],
      ["addressInternalId", "SearchColumnStringField[]", [0, nil]],
      ["addressLabel", "SearchColumnStringField[]", [0, nil]],
      ["addressPhone", "SearchColumnStringField[]", [0, nil]],
      ["allocatePayrollExpenses", "SearchColumnBooleanField[]", [0, nil]],
      ["allowAllResourcesForTasks", "SearchColumnBooleanField[]", [0, nil]],
      ["allowExpenses", "SearchColumnBooleanField[]", [0, nil]],
      ["allowTime", "SearchColumnBooleanField[]", [0, nil]],
      ["altContact", "SearchColumnStringField[]", [0, nil]],
      ["altEmail", "SearchColumnStringField[]", [0, nil]],
      ["altName", "SearchColumnStringField[]", [0, nil]],
      ["altPhone", "SearchColumnStringField[]", [0, nil]],
      ["attention", "SearchColumnStringField[]", [0, nil]],
      ["billAddress1", "SearchColumnStringField[]", [0, nil]],
      ["billAddress2", "SearchColumnStringField[]", [0, nil]],
      ["billAddress3", "SearchColumnStringField[]", [0, nil]],
      ["billAddressee", "SearchColumnStringField[]", [0, nil]],
      ["billAttention", "SearchColumnStringField[]", [0, nil]],
      ["billCity", "SearchColumnStringField[]", [0, nil]],
      ["billCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["billCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["billingSchedule", "SearchColumnSelectField[]", [0, nil]],
      ["billPhone", "SearchColumnStringField[]", [0, nil]],
      ["billState", "SearchColumnStringField[]", [0, nil]],
      ["billZipCode", "SearchColumnStringField[]", [0, nil]],
      ["calculatedEndDate", "SearchColumnDateField[]", [0, nil]],
      ["calculatedEndDateBaseline", "SearchColumnDateField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["city", "SearchColumnStringField[]", [0, nil]],
      ["comments", "SearchColumnStringField[]", [0, nil]],
      ["companyName", "SearchColumnStringField[]", [0, nil]],
      ["contact", "SearchColumnStringField[]", [0, nil]],
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["countryCode", "SearchColumnStringField[]", [0, nil]],
      ["customer", "SearchColumnSelectField[]", [0, nil]],
      ["dateCreated", "SearchColumnDateField[]", [0, nil]],
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["entityId", "SearchColumnStringField[]", [0, nil]],
      ["entityNumber", "SearchColumnLongField[]", [0, nil]],
      ["entityStatus", "SearchColumnSelectField[]", [0, nil]],
      ["estimatedCost", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedGrossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedGrossProfitPercent", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborCost", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborCostBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedLaborRevenue", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedRevenue", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTime", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverride", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedTimeOverrideBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["fax", "SearchColumnStringField[]", [0, nil]],
      ["globalSubscriptionStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["image", "SearchColumnSelectField[]", [0, nil]],
      ["includeCrmTasksInTotals", "SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDefaultBilling", "SearchColumnBooleanField[]", [0, nil]],
      ["isDefaultShipping", "SearchColumnBooleanField[]", [0, nil]],
      ["isExemptTime", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isProductiveTime", "SearchColumnBooleanField[]", [0, nil]],
      ["isUtilizedTime", "SearchColumnBooleanField[]", [0, nil]],
      ["jobBillingType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["jobItem", "SearchColumnSelectField[]", [0, nil]],
      ["jobPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["jobResource", "SearchColumnSelectField[]", [0, nil]],
      ["jobResourceRole", "SearchColumnSelectField[]", [0, nil]],
      ["language", "SearchColumnEnumSelectField[]", [0, nil]],
      ["lastBaselineDate", "SearchColumnDateField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["level", "SearchColumnEnumSelectField[]", [0, nil]],
      ["limitTimeToAssignees", "SearchColumnBooleanField[]", [0, nil]],
      ["materializeTime", "SearchColumnBooleanField[]", [0, nil]],
      ["percentComplete", "SearchColumnDoubleField[]", [0, nil]],
      ["percentTimeComplete", "SearchColumnDoubleField[]", [0, nil]],
      ["permission", "SearchColumnEnumSelectField[]", [0, nil]],
      ["phone", "SearchColumnStringField[]", [0, nil]],
      ["phoneticName", "SearchColumnStringField[]", [0, nil]],
      ["projectedEndDate", "SearchColumnDateField[]", [0, nil]],
      ["projectedEndDateBaseline", "SearchColumnDateField[]", [0, nil]],
      ["shipAddress1", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress2", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress3", "SearchColumnStringField[]", [0, nil]],
      ["shipAddressee", "SearchColumnStringField[]", [0, nil]],
      ["shipAttention", "SearchColumnStringField[]", [0, nil]],
      ["shipCity", "SearchColumnStringField[]", [0, nil]],
      ["shipCountry", "SearchColumnEnumSelectField[]", [0, nil]],
      ["shipCountryCode", "SearchColumnStringField[]", [0, nil]],
      ["shipPhone", "SearchColumnStringField[]", [0, nil]],
      ["shipState", "SearchColumnStringField[]", [0, nil]],
      ["shipZip", "SearchColumnStringField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["startDateBaseline", "SearchColumnDateField[]", [0, nil]],
      ["state", "SearchColumnStringField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["subscriptionDate", "SearchColumnDateField[]", [0, nil]],
      ["subscriptionStatus", "SearchColumnBooleanField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["timeRemaining", "SearchColumnDoubleField[]", [0, nil]],
      ["type", "SearchColumnSelectField[]", [0, nil]],
      ["zipCode", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => IssueSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "IssueSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["ageInMonths", "SearchLongField", [0, 1]],
      ["assigned", "SearchMultiSelectField", [0, 1]],
      ["buildBroken", "SearchMultiSelectField", [0, 1]],
      ["buildBrokenName", "SearchStringField", [0, 1]],
      ["buildFixed", "SearchMultiSelectField", [0, 1]],
      ["buildFixedName", "SearchStringField", [0, 1]],
      ["buildTarget", "SearchMultiSelectField", [0, 1]],
      ["buildTargetName", "SearchStringField", [0, 1]],
      ["caseCount", "SearchLongField", [0, 1]],
      ["caseNumber", "SearchStringField", [0, 1]],
      ["closedDate", "SearchDateField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["dateReleased", "SearchDateField", [0, 1]],
      ["details", "SearchStringField", [0, 1]],
      ["duplicateOf", "SearchMultiSelectField", [0, 1]],
      ["eFix", "SearchBooleanField", [0, 1]],
      ["employeeOrTeam", "SearchMultiSelectField", [0, 1]],
      ["eventStatus", "SearchEnumMultiSelectField", [0, 1]],
      ["externalAbstract", "SearchStringField", [0, 1]],
      ["externalDetails", "SearchStringField", [0, 1]],
      ["externalFixedIn", "SearchMultiSelectField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["externalStatus", "SearchMultiSelectField", [0, 1]],
      ["fixed", "SearchDateField", [0, 1]],
      ["fixedBy", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isOwner", "SearchBooleanField", [0, 1]],
      ["isReviewed", "SearchBooleanField", [0, 1]],
      ["isShowStopper", "SearchBooleanField", [0, 1]],
      ["issueAbstract", "SearchStringField", [0, 1]],
      ["issueNumber", "SearchStringField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["v_module", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["originalFixedIn", "SearchStringField", [0, 1]],
      ["priority", "SearchMultiSelectField", [0, 1]],
      ["product", "SearchMultiSelectField", [0, 1]],
      ["productTeam", "SearchMultiSelectField", [0, 1]],
      ["reportedBy", "SearchMultiSelectField", [0, 1]],
      ["reproduce", "SearchMultiSelectField", [0, 1]],
      ["resolved", "SearchDateField", [0, 1]],
      ["resolvedBy", "SearchMultiSelectField", [0, 1]],
      ["reviewer", "SearchMultiSelectField", [0, 1]],
      ["severity", "SearchMultiSelectField", [0, 1]],
      ["source", "SearchEnumMultiSelectField", [0, 1]],
      ["status", "SearchMultiSelectField", [0, 1]],
      ["tags", "SearchMultiSelectField", [0, 1]],
      ["tracking", "SearchBooleanField", [0, 1]],
      ["type", "SearchMultiSelectField", [0, 1]],
      ["userType", "SearchMultiSelectField", [0, 1]],
      ["versionBroken", "SearchMultiSelectField", [0, 1]],
      ["versionFixed", "SearchMultiSelectField", [0, 1]],
      ["versionTarget", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => IssueSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "IssueSearchRowBasic"),
    :schema_element => [
      ["ageInMonths", "SearchColumnLongField[]", [0, nil]],
      ["assigned", "SearchColumnSelectField[]", [0, nil]],
      ["buildBroken", "SearchColumnSelectField[]", [0, nil]],
      ["buildFixed", "SearchColumnSelectField[]", [0, nil]],
      ["buildTarget", "SearchColumnSelectField[]", [0, nil]],
      ["caseCount", "SearchColumnLongField[]", [0, nil]],
      ["caseNumber", "SearchColumnStringField[]", [0, nil]],
      ["closedDate", "SearchColumnDateField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["dateReleased", "SearchColumnDateField[]", [0, nil]],
      ["duplicateOf", "SearchColumnSelectField[]", [0, nil]],
      ["employeeOrTeam", "SearchColumnSelectField[]", [0, nil]],
      ["eventStatus", "SearchColumnEnumSelectField[]", [0, nil]],
      ["externalAbstract", "SearchColumnStringField[]", [0, nil]],
      ["externalDetails", "SearchColumnStringField[]", [0, nil]],
      ["externalFixedIn", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["externalStatus", "SearchColumnSelectField[]", [0, nil]],
      ["fixed", "SearchColumnDateField[]", [0, nil]],
      ["fixedBy", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isOwner", "SearchColumnBooleanField[]", [0, nil]],
      ["isReviewed", "SearchColumnBooleanField[]", [0, nil]],
      ["isShowStopper", "SearchColumnBooleanField[]", [0, nil]],
      ["issueAbstract", "SearchColumnStringField[]", [0, nil]],
      ["issueStatus", "SearchColumnSelectField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["v_module", ["SearchColumnStringField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "module")], [0, nil]],
      ["number", "SearchColumnStringField[]", [0, nil]],
      ["originalFixedIn", "SearchColumnStringField[]", [0, nil]],
      ["priority", "SearchColumnSelectField[]", [0, nil]],
      ["product", "SearchColumnSelectField[]", [0, nil]],
      ["productTeam", "SearchColumnSelectField[]", [0, nil]],
      ["reportedBy", "SearchColumnSelectField[]", [0, nil]],
      ["reproduce", "SearchColumnSelectField[]", [0, nil]],
      ["resolved", "SearchColumnDateField[]", [0, nil]],
      ["resolvedBy", "SearchColumnSelectField[]", [0, nil]],
      ["reviewer", "SearchColumnSelectField[]", [0, nil]],
      ["severity", "SearchColumnSelectField[]", [0, nil]],
      ["source", "SearchColumnEnumSelectField[]", [0, nil]],
      ["tags", "SearchColumnSelectField[]", [0, nil]],
      ["type", "SearchColumnStringField[]", [0, nil]],
      ["userType", "SearchColumnSelectField[]", [0, nil]],
      ["versionBroken", "SearchColumnSelectField[]", [0, nil]],
      ["versionFixed", "SearchColumnSelectField[]", [0, nil]],
      ["versionTarget", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GroupMemberSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "GroupMemberSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["groupId", "SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CampaignSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CampaignSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["audience", "SearchMultiSelectField", [0, 1]],
      ["baseCost", "SearchDoubleField", [0, 1]],
      ["campaignEventType", "SearchEnumMultiSelectField", [0, 1]],
      ["campaignId", "SearchStringField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["channel", "SearchMultiSelectField", [0, 1]],
      ["cost", "SearchDoubleField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["event", "SearchStringField", [0, 1]],
      ["expectedRevenue", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["family", "SearchMultiSelectField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isSalesCampaign", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["keyword", "SearchStringField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["manager", "SearchMultiSelectField", [0, 1]],
      ["managerRole", "SearchMultiSelectField", [0, 1]],
      ["number", "SearchLongField", [0, 1]],
      ["offer", "SearchMultiSelectField", [0, 1]],
      ["promoCode", "SearchMultiSelectField", [0, 1]],
      ["recipient", "SearchMultiSelectField", [0, 1]],
      ["response", "SearchEnumMultiSelectField", [0, 1]],
      ["responseCategory", "SearchEnumMultiSelectField", [0, 1]],
      ["responseCode", "SearchLongField", [0, 1]],
      ["responseComments", "SearchStringField", [0, 1]],
      ["responseDate", "SearchDateField", [0, 1]],
      ["scheduleDate", "SearchDateField", [0, 1]],
      ["searchEngine", "SearchMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["subscription", "SearchMultiSelectField", [0, 1]],
      ["template", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["vertical", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CampaignSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CampaignSearchRowBasic"),
    :schema_element => [
      ["audience", "SearchColumnSelectField[]", [0, nil]],
      ["baseCost", "SearchColumnDoubleField[]", [0, nil]],
      ["campaignId", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["channel", "SearchColumnSelectField[]", [0, nil]],
      ["cost", "SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["event", "SearchColumnStringField[]", [0, nil]],
      ["executedDate", "SearchColumnDateField[]", [0, nil]],
      ["expectedRevenue", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["family", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isSalesCampaign", "SearchColumnBooleanField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["keyword", "SearchColumnStringField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["managerRole", "SearchColumnSelectField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["offer", "SearchColumnSelectField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["promoCode", "SearchColumnStringField[]", [0, nil]],
      ["recipient", "SearchColumnSelectField[]", [0, nil]],
      ["response", "SearchColumnEnumSelectField[]", [0, nil]],
      ["responseCategory", "SearchColumnEnumSelectField[]", [0, nil]],
      ["responseCode", "SearchColumnLongField[]", [0, nil]],
      ["responseDate", "SearchColumnDateField[]", [0, nil]],
      ["responseNotes", "SearchColumnStringField[]", [0, nil]],
      ["revenue", "SearchColumnDoubleField[]", [0, nil]],
      ["roi", "SearchColumnDoubleField[]", [0, nil]],
      ["scheduledDate", "SearchColumnDateField[]", [0, nil]],
      ["searchEngine", "SearchColumnSelectField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["subscription", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["vertical", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EntityGroupSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EntityGroupSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["email", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["groupName", "SearchStringField", [0, 1]],
      ["groupOwner", "SearchMultiSelectField", [0, 1]],
      ["groupType", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDynamic", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isPrivate", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EntityGroupSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "EntityGroupSearchRowBasic"),
    :schema_element => [
      ["email", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["groupName", "SearchColumnStringField[]", [0, nil]],
      ["groupType", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDynamic", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isPrivate", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["savedSearch", "SearchColumnStringField[]", [0, nil]],
      ["size", "SearchColumnLongField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PromotionCodeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PromotionCodeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["applyDiscountTo", "SearchEnumMultiSelectField", [0, 1]],
      ["code", "SearchStringField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["discount", "SearchMultiSelectField", [0, 1]],
      ["discountAmount", "SearchDoubleField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["freeShipItem", "SearchMultiSelectField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isPublic", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["partner", "SearchMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PromotionCodeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PromotionCodeSearchRowBasic"),
    :schema_element => [
      ["code", "SearchColumnStringField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["discount", "SearchColumnStringField[]", [0, nil]],
      ["discountAmount", "SearchColumnDoubleField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isPublic", "SearchColumnBooleanField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BudgetSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "BudgetSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["account", "SearchMultiSelectField", [0, 1]],
      ["amount", "SearchDoubleField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["v_class", ["SearchMultiSelectField", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["customer", "SearchMultiSelectField", [0, 1]],
      ["department", "SearchMultiSelectField", [0, 1]],
      ["global", "SearchBooleanField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["year", "SearchMultiSelectField", [0, 1]],
      ["year2", "SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BudgetSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "BudgetSearchRowBasic"),
    :schema_element => [
      ["account", "SearchColumnStringField[]", [0, nil]],
      ["amount", "SearchColumnDoubleField[]", [0, nil]],
      ["category", "SearchColumnStringField[]", [0, nil]],
      ["v_class", ["SearchColumnStringField[]", XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "class")], [0, nil]],
      ["classnohierarchy", "SearchColumnStringField[]", [0, nil]],
      ["currency", "SearchColumnStringField[]", [0, nil]],
      ["customer", "SearchColumnStringField[]", [0, nil]],
      ["department", "SearchColumnStringField[]", [0, nil]],
      ["departmentnohierarchy", "SearchColumnStringField[]", [0, nil]],
      ["global", "SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["item", "SearchColumnStringField[]", [0, nil]],
      ["location", "SearchColumnStringField[]", [0, nil]],
      ["locationnohierarchy", "SearchColumnStringField[]", [0, nil]],
      ["subsidiary", "SearchColumnStringField[]", [0, nil]],
      ["subsidiarynohierarchy", "SearchColumnStringField[]", [0, nil]],
      ["year", "SearchColumnStringField[]", [0, nil]],
      ["year2", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ProjectTaskSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ProjectTaskSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["actualWork", "SearchDoubleField", [0, 1]],
      ["assignee", "SearchMultiSelectField", [0, 1]],
      ["company", "SearchMultiSelectField", [0, 1]],
      ["constraintType", "SearchEnumMultiSelectField", [0, 1]],
      ["contact", "SearchMultiSelectField", [0, 1]],
      ["cost", "SearchDoubleField", [0, 1]],
      ["costBase", "SearchDoubleField", [0, 1]],
      ["costBaseBaseline", "SearchDoubleField", [0, 1]],
      ["costBaseline", "SearchDoubleField", [0, 1]],
      ["costBaseVariance", "SearchDoubleField", [0, 1]],
      ["costVariance", "SearchDoubleField", [0, 1]],
      ["costVariancePercent", "SearchDoubleField", [0, 1]],
      ["createdDate", "SearchDateField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["endDateBaseline", "SearchDateField", [0, 1]],
      ["endDateVariance", "SearchDoubleField", [0, 1]],
      ["estimatedWork", "SearchDoubleField", [0, 1]],
      ["estimatedWorkBaseline", "SearchDoubleField", [0, 1]],
      ["estimatedWorkVariance", "SearchDoubleField", [0, 1]],
      ["estimatedWorkVariancePercent", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["id", "SearchLongField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isSummaryTask", "SearchBooleanField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["percentWorkComplete", "SearchDoubleField", [0, 1]],
      ["predecessor", "SearchMultiSelectField", [0, 1]],
      ["predecessors", "SearchStringField", [0, 1]],
      ["priority", "SearchEnumMultiSelectField", [0, 1]],
      ["remainingWork", "SearchDoubleField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["startDateBaseline", "SearchDateField", [0, 1]],
      ["startDateVariance", "SearchDoubleField", [0, 1]],
      ["status", "SearchEnumMultiSelectField", [0, 1]],
      ["successor", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ProjectTaskSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ProjectTaskSearchRowBasic"),
    :schema_element => [
      ["actualWork", "SearchColumnDoubleField[]", [0, nil]],
      ["company", "SearchColumnSelectField[]", [0, nil]],
      ["constraintType", "SearchColumnEnumSelectField[]", [0, nil]],
      ["contact", "SearchColumnSelectField[]", [0, nil]],
      ["cost", "SearchColumnDoubleField[]", [0, nil]],
      ["costBase", "SearchColumnDoubleField[]", [0, nil]],
      ["costBaseBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["costBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["costBaseVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["costVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["costVariancePercent", "SearchColumnDoubleField[]", [0, nil]],
      ["createdDate", "SearchColumnDateField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["endDateBaseline", "SearchColumnDateField[]", [0, nil]],
      ["endDateVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWork", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkVariancePercent", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["id", "SearchColumnLongField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isSummaryTask", "SearchColumnBooleanField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["message", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["percentWorkComplete", "SearchColumnDoubleField[]", [0, nil]],
      ["predecessor", "SearchColumnSelectField[]", [0, nil]],
      ["predecessors", "SearchColumnStringField[]", [0, nil]],
      ["predecessorType", "SearchColumnStringField[]", [0, nil]],
      ["priority", "SearchColumnEnumSelectField[]", [0, nil]],
      ["remainingWork", "SearchColumnDoubleField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["startDateBaseline", "SearchColumnDateField[]", [0, nil]],
      ["startDateVariance", "SearchColumnDoubleField[]", [0, nil]],
      ["status", "SearchColumnEnumSelectField[]", [0, nil]],
      ["successor", "SearchColumnSelectField[]", [0, nil]],
      ["successorType", "SearchColumnStringField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ProjectTaskAssignmentSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ProjectTaskAssignmentSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["actualWork", "SearchDoubleField", [0, 1]],
      ["cost", "SearchDoubleField", [0, 1]],
      ["costBase", "SearchDoubleField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["estimatedWork", "SearchDoubleField", [0, 1]],
      ["estimatedWorkBaseline", "SearchDoubleField", [0, 1]],
      ["grossProfit", "SearchDoubleField", [0, 1]],
      ["grossProfitBase", "SearchDoubleField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["price", "SearchDoubleField", [0, 1]],
      ["priceBase", "SearchDoubleField", [0, 1]],
      ["resource", "SearchMultiSelectField", [0, 1]],
      ["resourceName", "SearchStringField", [0, 1]],
      ["serviceItem", "SearchStringField", [0, 1]],
      ["serviceItemDesc", "SearchStringField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["unitCost", "SearchDoubleField", [0, 1]],
      ["unitCostBase", "SearchDoubleField", [0, 1]],
      ["unitPrice", "SearchDoubleField", [0, 1]],
      ["unitPriceBase", "SearchDoubleField", [0, 1]],
      ["workCalendar", "SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ProjectTaskAssignmentSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ProjectTaskAssignmentSearchRowBasic"),
    :schema_element => [
      ["actualWork", "SearchColumnDoubleField[]", [0, nil]],
      ["cost", "SearchColumnDoubleField[]", [0, nil]],
      ["costBase", "SearchColumnDoubleField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["estimatedWork", "SearchColumnDoubleField[]", [0, nil]],
      ["estimatedWorkBaseline", "SearchColumnDoubleField[]", [0, nil]],
      ["grossProfit", "SearchColumnDoubleField[]", [0, nil]],
      ["grossProfitBase", "SearchColumnDoubleField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["price", "SearchColumnDoubleField[]", [0, nil]],
      ["priceBase", "SearchColumnDoubleField[]", [0, nil]],
      ["resource", "SearchColumnSelectField[]", [0, nil]],
      ["resourceName", "SearchColumnStringField[]", [0, nil]],
      ["serviceItem", "SearchColumnStringField[]", [0, nil]],
      ["serviceItemDesc", "SearchColumnStringField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["unitCost", "SearchColumnDoubleField[]", [0, nil]],
      ["unitCostBase", "SearchColumnDoubleField[]", [0, nil]],
      ["unitPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["unitPriceBase", "SearchColumnDoubleField[]", [0, nil]],
      ["workCalendar", "SearchColumnSelectField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AccountingPeriodSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AccountingPeriodSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["allLocked", "SearchBooleanField", [0, 1]],
      ["allowNonGlChanges", "SearchBooleanField", [0, 1]],
      ["apLocked", "SearchBooleanField", [0, 1]],
      ["arLocked", "SearchBooleanField", [0, 1]],
      ["closed", "SearchBooleanField", [0, 1]],
      ["closedOnDate", "SearchDateField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isAdjust", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isQuarter", "SearchBooleanField", [0, 1]],
      ["isYear", "SearchBooleanField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["payrollLocked", "SearchBooleanField", [0, 1]],
      ["periodName", "SearchStringField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AccountingPeriodSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AccountingPeriodSearchRowBasic"),
    :schema_element => [
      ["allLocked", "SearchColumnBooleanField[]", [0, nil]],
      ["allowNonGLChanges", "SearchColumnBooleanField[]", [0, nil]],
      ["apLocked", "SearchColumnBooleanField[]", [0, nil]],
      ["arLocked", "SearchColumnBooleanField[]", [0, nil]],
      ["closed", "SearchColumnBooleanField[]", [0, nil]],
      ["closedOnDate", "SearchColumnDateField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isAdjust", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isQuarter", "SearchColumnBooleanField[]", [0, nil]],
      ["isYear", "SearchColumnBooleanField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["payrollLocked", "SearchColumnBooleanField[]", [0, nil]],
      ["periodName", "SearchColumnStringField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["private", "SearchBooleanField", [0, 1]],
      ["sync", "SearchBooleanField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactCategorySearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["private", "SearchColumnBooleanField[]", [0, nil]],
      ["sync", "SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactRoleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactRoleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactRoleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ContactRoleSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerCategorySearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerStatusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerStatusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["includeInLeadReports", "SearchBooleanField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["probability", "SearchDoubleField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerStatusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerStatusSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["includeInLeadReports", "SearchColumnBooleanField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["probability", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ExpenseCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ExpenseCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["account", "SearchMultiSelectField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ExpenseCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ExpenseCategorySearchRowBasic"),
    :schema_element => [
      ["account", "SearchColumnSelectField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobStatusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobStatusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobStatusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobStatusSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => JobTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "JobTypeSearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NoteTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NoteTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NoteTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NoteTypeSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PartnerCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PartnerCategorySearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => PaymentMethodSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PaymentMethodSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["account", "SearchMultiSelectField", [0, 1]],
      ["creditCard", "SearchBooleanField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isDebitCard", "SearchBooleanField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PaymentMethodSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PaymentMethodSearchRowBasic"),
    :schema_element => [
      ["account", "SearchColumnSelectField[]", [0, nil]],
      ["creditCard", "SearchColumnBooleanField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isDebitCard", "SearchColumnBooleanField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => PriceLevelSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PriceLevelSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["discountPct", "SearchDoubleField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isOnline", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PriceLevelSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PriceLevelSearchRowBasic"),
    :schema_element => [
      ["discountPct", "SearchColumnDoubleField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isOnline", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => SalesRoleSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SalesRoleSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SalesRoleSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "SalesRoleSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => TermSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TermSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["dateDriven", "SearchBooleanField", [0, 1]],
      ["dayDiscountExpires", "SearchLongField", [0, 1]],
      ["dayOfMonthNetDue", "SearchLongField", [0, 1]],
      ["daysUntilExpiry", "SearchLongField", [0, 1]],
      ["daysUntilNetDue", "SearchLongField", [0, 1]],
      ["discountPercent", "SearchDoubleField", [0, 1]],
      ["discountPercentDateDriven", "SearchDoubleField", [0, 1]],
      ["dueNextMonthIfWithinDays", "SearchLongField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["preferred", "SearchBooleanField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TermSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "TermSearchRowBasic"),
    :schema_element => [
      ["dateDriven", "SearchColumnBooleanField[]", [0, nil]],
      ["dayDiscountExpires", "SearchColumnLongField[]", [0, nil]],
      ["dayOfMonthNetDue", "SearchColumnLongField[]", [0, nil]],
      ["daysUntilExpiry", "SearchColumnLongField[]", [0, nil]],
      ["daysUntilNetDue", "SearchColumnLongField[]", [0, nil]],
      ["discountPercent", "SearchColumnDoubleField[]", [0, nil]],
      ["discountPercentDateDriven", "SearchColumnDoubleField[]", [0, nil]],
      ["dueNextMonthIfWithinDays", "SearchColumnLongField[]", [0, nil]],
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["preferred", "SearchColumnBooleanField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "VendorCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isTaxAgency", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "VendorCategorySearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isTaxAgency", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => WinLossReasonSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "WinLossReasonSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => WinLossReasonSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "WinLossReasonSearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => OriginatingLeadSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OriginatingLeadSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["accountNumber", "SearchStringField", [0, 1]],
      ["availableOffline", "SearchBooleanField", [0, 1]],
      ["balance", "SearchDoubleField", [0, 1]],
      ["boughtAmount", "SearchDoubleField", [0, 1]],
      ["boughtDate", "SearchDateField", [0, 1]],
      ["buyingReason", "SearchMultiSelectField", [0, 1]],
      ["buyingTimeFrame", "SearchMultiSelectField", [0, 1]],
      ["category", "SearchMultiSelectField", [0, 1]],
      ["ccCustomerCode", "SearchStringField", [0, 1]],
      ["ccDefault", "SearchBooleanField", [0, 1]],
      ["ccExpDate", "SearchDateField", [0, 1]],
      ["ccHolderName", "SearchStringField", [0, 1]],
      ["ccNumber", "SearchStringField", [0, 1]],
      ["ccType", "SearchMultiSelectField", [0, 1]],
      ["classBought", "SearchMultiSelectField", [0, 1]],
      ["companyName", "SearchStringField", [0, 1]],
      ["contact", "SearchStringField", [0, 1]],
      ["contribution", "SearchLongField", [0, 1]],
      ["conversionDate", "SearchDateField", [0, 1]],
      ["creditHoldOverride", "SearchBooleanField", [0, 1]],
      ["creditLimit", "SearchDoubleField", [0, 1]],
      ["currency", "SearchMultiSelectField", [0, 1]],
      ["custStage", "SearchMultiSelectField", [0, 1]],
      ["custStatus", "SearchMultiSelectField", [0, 1]],
      ["dateClosed", "SearchDateField", [0, 1]],
      ["daysOverdue", "SearchLongField", [0, 1]],
      ["depositBalance", "SearchDoubleField", [0, 1]],
      ["deptBought", "SearchMultiSelectField", [0, 1]],
      ["emailTransactions", "SearchBooleanField", [0, 1]],
      ["endDate", "SearchDateField", [0, 1]],
      ["entityStatus", "SearchMultiSelectField", [0, 1]],
      ["estimatedBudget", "SearchDoubleField", [0, 1]],
      ["explicitConversion", "SearchBooleanField", [0, 1]],
      ["faxTransactions", "SearchBooleanField", [0, 1]],
      ["firstName", "SearchStringField", [0, 1]],
      ["firstOrderDate", "SearchDateField", [0, 1]],
      ["firstSaleDate", "SearchDateField", [0, 1]],
      ["group", "SearchMultiSelectField", [0, 1]],
      ["groupPricingLevel", "SearchMultiSelectField", [0, 1]],
      ["hasDuplicates", "SearchBooleanField", [0, 1]],
      ["isBudgetApproved", "SearchBooleanField", [0, 1]],
      ["isPerson", "SearchBooleanField", [0, 1]],
      ["isReportedLead", "SearchBooleanField", [0, 1]],
      ["isShipAddress", "SearchBooleanField", [0, 1]],
      ["itemPricingLevel", "SearchMultiSelectField", [0, 1]],
      ["itemPricingUnitPrice", "SearchDoubleField", [0, 1]],
      ["itemsBought", "SearchMultiSelectField", [0, 1]],
      ["itemsOrdered", "SearchMultiSelectField", [0, 1]],
      ["lastName", "SearchStringField", [0, 1]],
      ["leadDate", "SearchDateField", [0, 1]],
      ["leadSource", "SearchMultiSelectField", [0, 1]],
      ["locationBought", "SearchMultiSelectField", [0, 1]],
      ["manualCreditHold", "SearchBooleanField", [0, 1]],
      ["merchantAccount", "SearchMultiSelectField", [0, 1]],
      ["middleName", "SearchStringField", [0, 1]],
      ["onCreditHold", "SearchBooleanField", [0, 1]],
      ["orderedAmount", "SearchDoubleField", [0, 1]],
      ["orderedDate", "SearchDateField", [0, 1]],
      ["otherRelationships", "SearchEnumMultiSelectField", [0, 1]],
      ["overdueBalance", "SearchDoubleField", [0, 1]],
      ["parent", "SearchMultiSelectField", [0, 1]],
      ["parentItemsBought", "SearchMultiSelectField", [0, 1]],
      ["parentItemsOrdered", "SearchMultiSelectField", [0, 1]],
      ["partner", "SearchMultiSelectField", [0, 1]],
      ["partnerContribution", "SearchLongField", [0, 1]],
      ["partnerRole", "SearchMultiSelectField", [0, 1]],
      ["partnerTeamMember", "SearchMultiSelectField", [0, 1]],
      ["pec", "SearchStringField", [0, 1]],
      ["priceLevel", "SearchMultiSelectField", [0, 1]],
      ["pricingGroup", "SearchMultiSelectField", [0, 1]],
      ["pricingItem", "SearchMultiSelectField", [0, 1]],
      ["printTransactions", "SearchBooleanField", [0, 1]],
      ["prospectDate", "SearchDateField", [0, 1]],
      ["pstExempt", "SearchBooleanField", [0, 1]],
      ["reminderDate", "SearchDateField", [0, 1]],
      ["resaleNumber", "SearchStringField", [0, 1]],
      ["role", "SearchMultiSelectField", [0, 1]],
      ["salesReadiness", "SearchMultiSelectField", [0, 1]],
      ["salesRep", "SearchMultiSelectField", [0, 1]],
      ["salesTeamMember", "SearchMultiSelectField", [0, 1]],
      ["salesTeamRole", "SearchMultiSelectField", [0, 1]],
      ["salutation", "SearchStringField", [0, 1]],
      ["shipComplete", "SearchBooleanField", [0, 1]],
      ["shippingItem", "SearchMultiSelectField", [0, 1]],
      ["stage", "SearchMultiSelectField", [0, 1]],
      ["startDate", "SearchDateField", [0, 1]],
      ["subsidBought", "SearchMultiSelectField", [0, 1]],
      ["taxable", "SearchBooleanField", [0, 1]],
      ["terms", "SearchMultiSelectField", [0, 1]],
      ["territory", "SearchMultiSelectField", [0, 1]],
      ["title", "SearchStringField", [0, 1]],
      ["unbilledOrders", "SearchDoubleField", [0, 1]],
      ["url", "SearchStringField", [0, 1]],
      ["vatRegNumber", "SearchStringField", [0, 1]],
      ["webLead", "SearchBooleanField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OriginatingLeadSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OriginatingLeadSearchRowBasic"),
    :schema_element => [
      ["accountNumber", "SearchColumnStringField[]", [0, nil]],
      ["altContact", "SearchColumnStringField[]", [0, nil]],
      ["availableOffline", "SearchColumnBooleanField[]", [0, nil]],
      ["balance", "SearchColumnDoubleField[]", [0, nil]],
      ["billAddress", "SearchColumnStringField[]", [0, nil]],
      ["buyingReason", "SearchColumnStringField[]", [0, nil]],
      ["buyingTimeFrame", "SearchColumnStringField[]", [0, nil]],
      ["category", "SearchColumnSelectField[]", [0, nil]],
      ["ccCustomerCode", "SearchColumnStringField[]", [0, nil]],
      ["ccDefault", "SearchColumnBooleanField[]", [0, nil]],
      ["ccExpDate", "SearchColumnDateField[]", [0, nil]],
      ["ccHolderName", "SearchColumnStringField[]", [0, nil]],
      ["ccNumber", "SearchColumnStringField[]", [0, nil]],
      ["ccType", "SearchColumnSelectField[]", [0, nil]],
      ["companyName", "SearchColumnStringField[]", [0, nil]],
      ["contact", "SearchColumnStringField[]", [0, nil]],
      ["contribution", "SearchColumnDoubleField[]", [0, nil]],
      ["contributionPrimary", "SearchColumnDoubleField[]", [0, nil]],
      ["conversionDate", "SearchColumnDateField[]", [0, nil]],
      ["creditHoldOverride", "SearchColumnBooleanField[]", [0, nil]],
      ["creditLimit", "SearchColumnDoubleField[]", [0, nil]],
      ["currency", "SearchColumnSelectField[]", [0, nil]],
      ["dateClosed", "SearchColumnDateField[]", [0, nil]],
      ["daysOverdue", "SearchColumnLongField[]", [0, nil]],
      ["depositBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["emailTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["endDate", "SearchColumnDateField[]", [0, nil]],
      ["entityStatus", "SearchColumnSelectField[]", [0, nil]],
      ["estimatedBudget", "SearchColumnDoubleField[]", [0, nil]],
      ["explicitConversion", "SearchColumnBooleanField[]", [0, nil]],
      ["faxTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["firstName", "SearchColumnStringField[]", [0, nil]],
      ["firstOrderDate", "SearchColumnDateField[]", [0, nil]],
      ["firstSaleDate", "SearchColumnDateField[]", [0, nil]],
      ["giveAccess", "SearchColumnBooleanField[]", [0, nil]],
      ["groupPricingLevel", "SearchColumnStringField[]", [0, nil]],
      ["hasDuplicates", "SearchColumnBooleanField[]", [0, nil]],
      ["homePhone", "SearchColumnStringField[]", [0, nil]],
      ["isBudgetApproved", "SearchColumnBooleanField[]", [0, nil]],
      ["isPerson", "SearchColumnBooleanField[]", [0, nil]],
      ["isShipAddress", "SearchColumnBooleanField[]", [0, nil]],
      ["itemPricingLevel", "SearchColumnStringField[]", [0, nil]],
      ["itemPricingUnitPrice", "SearchColumnDoubleField[]", [0, nil]],
      ["jobEndDate", "SearchColumnDateField[]", [0, nil]],
      ["jobProjectedEnd", "SearchColumnDateField[]", [0, nil]],
      ["jobStartDate", "SearchColumnDateField[]", [0, nil]],
      ["jobType", "SearchColumnSelectField[]", [0, nil]],
      ["lastName", "SearchColumnStringField[]", [0, nil]],
      ["leadDate", "SearchColumnDateField[]", [0, nil]],
      ["leadSource", "SearchColumnSelectField[]", [0, nil]],
      ["manualCreditHold", "SearchColumnBooleanField[]", [0, nil]],
      ["middleName", "SearchColumnStringField[]", [0, nil]],
      ["mobilePhone", "SearchColumnStringField[]", [0, nil]],
      ["onCreditHold", "SearchColumnBooleanField[]", [0, nil]],
      ["overdueBalance", "SearchColumnDoubleField[]", [0, nil]],
      ["parent", "SearchColumnSelectField[]", [0, nil]],
      ["partner", "SearchColumnSelectField[]", [0, nil]],
      ["partnerContribution", "SearchColumnDoubleField[]", [0, nil]],
      ["partnerRole", "SearchColumnStringField[]", [0, nil]],
      ["partnerTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["pec", "SearchColumnStringField[]", [0, nil]],
      ["prefCCProcessor", "SearchColumnSelectField[]", [0, nil]],
      ["priceLevel", "SearchColumnSelectField[]", [0, nil]],
      ["pricingGroup", "SearchColumnStringField[]", [0, nil]],
      ["pricingItem", "SearchColumnStringField[]", [0, nil]],
      ["printTransactions", "SearchColumnBooleanField[]", [0, nil]],
      ["prospectDate", "SearchColumnDateField[]", [0, nil]],
      ["reminderDays", "SearchColumnLongField[]", [0, nil]],
      ["resaleNumber", "SearchColumnStringField[]", [0, nil]],
      ["role", "SearchColumnStringField[]", [0, nil]],
      ["salesReadiness", "SearchColumnStringField[]", [0, nil]],
      ["salesRep", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamMember", "SearchColumnSelectField[]", [0, nil]],
      ["salesTeamRole", "SearchColumnSelectField[]", [0, nil]],
      ["salutation", "SearchColumnStringField[]", [0, nil]],
      ["shipAddress", "SearchColumnStringField[]", [0, nil]],
      ["shipComplete", "SearchColumnBooleanField[]", [0, nil]],
      ["shippingItem", "SearchColumnSelectField[]", [0, nil]],
      ["stage", "SearchColumnStringField[]", [0, nil]],
      ["startDate", "SearchColumnDateField[]", [0, nil]],
      ["taxable", "SearchColumnBooleanField[]", [0, nil]],
      ["taxItem", "SearchColumnSelectField[]", [0, nil]],
      ["terms", "SearchColumnSelectField[]", [0, nil]],
      ["territory", "SearchColumnSelectField[]", [0, nil]],
      ["title", "SearchColumnStringField[]", [0, nil]],
      ["unbilledOrders", "SearchColumnDoubleField[]", [0, nil]],
      ["url", "SearchColumnStringField[]", [0, nil]],
      ["vatRegNumber", "SearchColumnStringField[]", [0, nil]],
      ["webLead", "SearchColumnBooleanField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UnitsTypeSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "UnitsTypeSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["abbreviation", "SearchStringField", [0, 1]],
      ["baseUnit", "SearchBooleanField", [0, 1]],
      ["conversionRate", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInActive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["pluralAbbreviation", "SearchStringField", [0, 1]],
      ["pluralName", "SearchStringField", [0, 1]],
      ["unitName", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UnitsTypeSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "UnitsTypeSearchRowBasic"),
    :schema_element => [
      ["abbreviation", "SearchColumnStringField[]", [0, nil]],
      ["baseUnit", "SearchColumnBooleanField[]", [0, nil]],
      ["conversionRate", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInActive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["pluralAbbreviation", "SearchColumnStringField[]", [0, nil]],
      ["pluralName", "SearchColumnStringField[]", [0, nil]],
      ["unitName", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomListSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomListSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["isOrdered", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["owner", "SearchMultiSelectField", [0, 1]],
      ["scriptId", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomListSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomListSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["isOrdered", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["owner", "SearchColumnSelectField[]", [0, nil]],
      ["scriptId", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => PricingGroupSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PricingGroupSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PricingGroupSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "PricingGroupSearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnSelectField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryNumberSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryNumberSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["expirationDate", "SearchDateField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["inventoryNumber", "SearchStringField", [0, 1]],
      ["isOnHand", "SearchBooleanField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["quantityAvailable", "SearchDoubleField", [0, 1]],
      ["quantityInTransit", "SearchDoubleField", [0, 1]],
      ["quantityOnHand", "SearchDoubleField", [0, 1]],
      ["quantityOnOrder", "SearchDoubleField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryNumberSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "InventoryNumberSearchRowBasic"),
    :schema_element => [
      ["expirationDate", "SearchColumnDateField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["inventoryNumber", "SearchColumnStringField[]", [0, nil]],
      ["isonhand", "SearchColumnBooleanField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["quantityavailable", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityintransit", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityonhand", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityonorder", "SearchColumnDoubleField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AppDefinitionSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AppDefinitionSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AppDefinitionSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AppDefinitionSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AppPackageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AppPackageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["appDefinition", "SearchMultiSelectField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["version", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AppPackageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "AppPackageSearchRowBasic"),
    :schema_element => [
      ["appDefinition", "SearchColumnSelectField[]", [0, nil]],
      ["bundle", "SearchColumnSelectField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["packageFile", "SearchColumnSelectField[]", [0, nil]],
      ["version", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => NexusSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NexusSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["country", "SearchEnumMultiSelectField", [0, 1]],
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["state", "SearchMultiSelectField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NexusSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "NexusSearchRowBasic"),
    :schema_element => [
      ["country", "SearchColumnEnumSelectField[]", [0, nil]],
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["state", "SearchColumnSelectField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => OtherNameCategorySearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OtherNameCategorySearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OtherNameCategorySearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "OtherNameCategorySearchRowBasic"),
    :schema_element => [
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerMessageSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerMessageSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["description", "SearchStringField", [0, 1]],
      ["externalId", "SearchMultiSelectField", [0, 1]],
      ["externalIdString", "SearchStringField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["isInactive", "SearchBooleanField", [0, 1]],
      ["name", "SearchStringField", [0, 1]],
      ["preferred", "SearchBooleanField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerMessageSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "CustomerMessageSearchRowBasic"),
    :schema_element => [
      ["description", "SearchColumnStringField[]", [0, nil]],
      ["externalId", "SearchColumnStringField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["isInactive", "SearchColumnBooleanField[]", [0, nil]],
      ["name", "SearchColumnStringField[]", [0, nil]],
      ["preferred", "SearchColumnStringField[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemDemandPlanSearchBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ItemDemandPlanSearchBasic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["alternateSourceItem", "SearchMultiSelectField", [0, 1]],
      ["analysisDuration", "SearchLongField", [0, 1]],
      ["demandDate", "SearchDateField", [0, 1]],
      ["internalId", "SearchMultiSelectField", [0, 1]],
      ["internalIdNumber", "SearchLongField", [0, 1]],
      ["item", "SearchMultiSelectField", [0, 1]],
      ["lastModifiedDate", "SearchDateField", [0, 1]],
      ["location", "SearchMultiSelectField", [0, 1]],
      ["memo", "SearchStringField", [0, 1]],
      ["projectionDuration", "SearchLongField", [0, 1]],
      ["projectionInterval", "SearchMultiSelectField", [0, 1]],
      ["projectionMethod", "SearchEnumMultiSelectField", [0, 1]],
      ["projectionStartDate", "SearchDateField", [0, 1]],
      ["quantity", "SearchDoubleField", [0, 1]],
      ["subsidiary", "SearchMultiSelectField", [0, 1]],
      ["units", "SearchMultiSelectField", [0, 1]],
      ["customFieldList", "SearchCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemDemandPlanSearchRowBasic,
    :schema_type => XSD::QName.new(NsCommon_2012_1PlatformWebservicesNetsuiteCom, "ItemDemandPlanSearchRowBasic"),
    :schema_element => [
      ["alternateSourceItem", "SearchColumnSelectField[]", [0, nil]],
      ["analysisDuration", "SearchColumnLongField[]", [0, nil]],
      ["demandDate", "SearchColumnDateField[]", [0, nil]],
      ["internalId", "SearchColumnSelectField[]", [0, nil]],
      ["item", "SearchColumnSelectField[]", [0, nil]],
      ["lastModifiedDate", "SearchColumnDateField[]", [0, nil]],
      ["location", "SearchColumnSelectField[]", [0, nil]],
      ["memo", "SearchColumnStringField[]", [0, nil]],
      ["projectionDuration", "SearchColumnLongField[]", [0, nil]],
      ["projectionInterval", "SearchColumnStringField[]", [0, nil]],
      ["projectionMethod", "SearchColumnStringField[]", [0, nil]],
      ["projectionStartDate", "SearchColumnDateField[]", [0, nil]],
      ["quantity", "SearchColumnDoubleField[]", [0, nil]],
      ["quantityUom", "SearchColumnDoubleField[]", [0, nil]],
      ["subsidiary", "SearchColumnSelectField[]", [0, nil]],
      ["units", "SearchColumnSelectField[]", [0, nil]],
      ["customFieldList", "SearchColumnCustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CalendarEvent,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEvent"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["supportCase", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["period", "SOAP::SOAPLong", [0, 1]],
      ["frequency", "CalendarEventFrequency", [0, 1]],
      ["recurrenceDowMaskList", "RecurrenceDowMaskList", [0, 1]],
      ["recurrenceDow", "CalendarEventDow", [0, 1]],
      ["recurrenceDowim", "CalendarEventDowim", [0, 1]],
      ["seriesStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endByDate", "SOAP::SOAPDateTime", [0, 1]],
      ["noEndDate", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["recurrence", "SOAP::SOAPString", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["allDayEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "CalendarEventReminderType", [0, 1]],
      ["reminderMinutes", "CalendarEventReminderMinutes", [0, 1]],
      ["status", "CalendarEventStatus", [0, 1]],
      ["accessLevel", "CalendarEventAccessLevel", [0, 1]],
      ["organizer", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exclusionDateList", "ExclusionDateList", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["attendeeList", "CalendarEventAttendeeList", [0, 1]],
      ["resourceList", "CalendarEventResourceList", [0, 1]],
      ["timeItemList", "CalendarEventTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ExclusionDateList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ExclusionDateList"),
    :schema_element => [
      ["exclusionDate", "SOAP::SOAPDateTime[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => RecurrenceDowMaskList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "RecurrenceDowMaskList"),
    :schema_element => [
      ["recurrenceDowMask", "CalendarEventDow[]", [1, 7]]
    ]
  )

  LiteralRegistry.register(
    :class => CalendarEventAttendee,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendee"),
    :schema_element => [
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["attendee", "RecordRef", [0, 1]],
      ["response", "CalendarEventAttendeeResponse", [0, 1]],
      ["attendance", "CalendarEventAttendeeAttendance", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CalendarEventAttendeeList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeList"),
    :schema_element => [
      ["attendee", "CalendarEventAttendee[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CalendarEventResource,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventResource"),
    :schema_element => [
      ["resource", "RecordRef", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CalendarEventResourceList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventResourceList"),
    :schema_element => [
      ["resource", "CalendarEventResource[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CalendarEventSearch,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CalendarEventSearchBasic", [0, 1]],
      ["attendeeJoin", "EntitySearchBasic", [0, 1]],
      ["attendeeContactJoin", "ContactSearchBasic", [0, 1]],
      ["attendeeCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CalendarEventSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CalendarEventSearch", [0, 1]],
      ["columns", "CalendarEventSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CalendarEventSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CalendarEventSearchRowBasic", [0, 1]],
      ["attendeeJoin", "EntitySearchRowBasic", [0, 1]],
      ["attendeeContactJoin", "ContactSearchRowBasic", [0, 1]],
      ["attendeeCustomerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Task,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "Task"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["supportCase", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["milestone", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedTime", "Duration", [0, 1]],
      ["estimatedTimeOverride", "Duration", [0, 1]],
      ["actualTime", "Duration", [0, 1]],
      ["timeRemaining", "Duration", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["priority", "TaskPriority", [0, 1]],
      ["status", "TaskStatus", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "TaskReminderType", [0, 1]],
      ["reminderMinutes", "TaskReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["contactList", "TaskContactList", [0, 1]],
      ["timeItemList", "TaskTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TaskContact,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskContact"),
    :schema_element => [
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TaskContactList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskContactList"),
    :schema_element => [
      ["contact", "TaskContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => TaskSearch,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "TaskSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TaskSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "TaskSearch", [0, 1]],
      ["columns", "TaskSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TaskSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "TaskSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["companyCustomerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PhoneCall,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCall"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["supportCase", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["milestone", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["status", "PhoneCallStatus", [0, 1]],
      ["priority", "PhoneCallPriority", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "PhoneCallReminderType", [0, 1]],
      ["reminderMinutes", "PhoneCallReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["contactList", "PhoneCallContactList", [0, 1]],
      ["timeItemList", "PhoneCallTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PhoneCallContact,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallContact"),
    :schema_element => [
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PhoneCallContactList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallContactList"),
    :schema_element => [
      ["contact", "PhoneCallContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => PhoneCallSearch,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PhoneCallSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PhoneCallSearch", [0, 1]],
      ["columns", "PhoneCallSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PhoneCallSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PhoneCallSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["companyCustomerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ProjectTask,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTask"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["eventId", "RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["order", "RecordRef", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["priority", "RecordRef", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedWorkBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["constraintType", "ProjectTaskConstraintType", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["actualWork", "SOAP::SOAPDouble", [0, 1]],
      ["remainingWork", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["status", "ProjectTaskStatus", [0, 1]],
      ["assigneeList", "ProjectTaskAssigneeList", [0, 1]],
      ["predecessorList", "ProjectTaskPredecessorList", [0, 1]],
      ["timeItemList", "ProjectTaskTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ProjectTaskPredecessor,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessor"),
    :schema_element => [
      ["task", "RecordRef", [0, 1]],
      ["type", "ProjectTaskPredecessorPredecessorType", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ProjectTaskPredecessorList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessorList"),
    :schema_element => [
      ["projectTaskPredecessor", "ProjectTaskPredecessor[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ProjectTaskAssignee,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskAssignee"),
    :schema_element => [
      ["resource", "RecordRef", [0, 1]],
      ["units", "SOAP::SOAPDouble", [0, 1]],
      ["serviceItem", "RecordRef", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["unitCost", "SOAP::SOAPDouble", [0, 1]],
      ["unitPrice", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["price", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ProjectTaskAssigneeList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskAssigneeList"),
    :schema_element => [
      ["projectTaskAssignee", "ProjectTaskAssignee[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ProjectTaskSearch,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ProjectTaskSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["predecessorJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "ProjectTaskAssignmentSearchBasic", [0, 1]],
      ["successorJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ProjectTaskSearchAdvanced,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ProjectTaskSearch", [0, 1]],
      ["columns", "ProjectTaskSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ProjectTaskSearchRow,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ProjectTaskSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["predecessorJoin", "ProjectTaskSearchRowBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "ProjectTaskAssignmentSearchRowBasic", [0, 1]],
      ["successorJoin", "ProjectTaskSearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PhoneCallTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallTimeItemList"),
    :schema_element => [
      ["timeItem", "TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CalendarEventTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventTimeItemList"),
    :schema_element => [
      ["timeItem", "TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => TaskTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskTimeItemList"),
    :schema_element => [
      ["timeItem", "TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ProjectTaskTimeItemList,
    :schema_type => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskTimeItemList"),
    :schema_element => [
      ["timeItem", "TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => Note,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "Note"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["noteType", "RecordRef", [0, 1]],
      ["direction", "NoteDirection", [0, 1]],
      ["noteDate", "SOAP::SOAPDateTime", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["activity", "RecordRef", [0, 1]],
      ["author", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["folder", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["media", "RecordRef", [0, 1]],
      ["record", "RecordRef", [0, 1]],
      ["recordType", "RecordRef", [0, 1]],
      ["topic", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NoteSearch,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "NoteSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NoteSearchBasic", [0, 1]],
      ["authorJoin", "EmployeeSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["campaignJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "EntitySearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["issueJoin", "IssueSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["solutionJoin", "SolutionSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NoteSearchAdvanced,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "NoteSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NoteSearch", [0, 1]],
      ["columns", "NoteSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NoteSearchRow,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "NoteSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NoteSearchRowBasic", [0, 1]],
      ["authorJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["campaignJoin", "CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["entityJoin", "EntitySearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["issueJoin", "IssueSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchRowBasic", [0, 1]],
      ["solutionJoin", "SolutionSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "VendorSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Message,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "Message"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["author", "RecordRef", [0, 1]],
      ["recipient", "RecordRef", [0, 1]],
      ["cc", "SOAP::SOAPString", [0, 1]],
      ["bcc", "SOAP::SOAPString", [0, 1]],
      ["messageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["recordTypeName", "SOAP::SOAPString", [0, 1]],
      ["subject", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["emailed", "SOAP::SOAPBoolean", [0, 1]],
      ["activity", "RecordRef", [0, 1]],
      ["compressAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["incoming", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["mediaItemList", "MessageMediaItemList", [0, 1]],
      ["dateTime", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => MessageMediaItemList,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "MessageMediaItemList"),
    :schema_element => [
      ["mediaItem", "C_File[]", [1, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => MessageSearch,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "MessageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "MessageSearchBasic", [0, 1]],
      ["attachmentsJoin", "FileSearchBasic", [0, 1]],
      ["authorJoin", "EntitySearchBasic", [0, 1]],
      ["campaignJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "EntitySearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["recipientJoin", "EntitySearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => MessageSearchAdvanced,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "MessageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "MessageSearch", [0, 1]],
      ["columns", "MessageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => MessageSearchRow,
    :schema_type => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "MessageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "MessageSearchRowBasic", [0, 1]],
      ["attachmentsJoin", "FileSearchRowBasic", [0, 1]],
      ["authorJoin", "EntitySearchRowBasic", [0, 1]],
      ["campaignJoin", "CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["entityJoin", "EntitySearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchRowBasic", [0, 1]],
      ["recipientJoin", "EntitySearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["vendorJoin", "VendorSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => C_File,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "File"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["attachFrom", "FileAttachFrom", [0, 1]],
      ["mediaTypeName", "SOAP::SOAPString", [0, 1]],
      ["fileType", "MediaType", [0, 1]],
      ["content", "SOAP::SOAPBase64", [0, 1]],
      ["folder", "RecordRef", [0, 1]],
      ["fileSize", "SOAP::SOAPDouble", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["mediaFile", "RecordRef", [0, 1]],
      ["textFileEncoding", "TextFileEncoding", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["encoding", "FileEncoding", [0, 1]],
      ["altTagCaption", "SOAP::SOAPString", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["bundleable", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["hideInBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["caption", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["siteDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["siteCategoryList", "FileSiteCategoryList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => FileSiteCategory,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileSiteCategory"),
    :schema_element => [
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["categoryDescription", "SOAP::SOAPString", [0, 1]],
      ["website", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FileSiteCategoryList,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileSiteCategoryList"),
    :schema_element => [
      ["siteCategory", "FileSiteCategory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => FileSearch,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "FileSearchBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FileSearchAdvanced,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "FileSearch", [0, 1]],
      ["columns", "FileSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => FileSearchRow,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "FileSearchRowBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Folder,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "Folder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["bundleable", "SOAP::SOAPBoolean", [0, 1]],
      ["hideInBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["group", "RecordRef", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => FolderSearch,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FolderSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "FolderSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FolderSearchAdvanced,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FolderSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "FolderSearch", [0, 1]],
      ["columns", "FolderSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => FolderSearchRow,
    :schema_type => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FolderSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "FolderSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Subscriptions,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Subscriptions"),
    :schema_element => [
      ["subscribed", "SOAP::SOAPBoolean", [0, 1]],
      ["subscription", "RecordRef", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SubscriptionsList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "SubscriptionsList"),
    :schema_element => [
      ["subscriptions", "Subscriptions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => Contact,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Contact"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["categoryList", "CategoryList", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "RecordRef", [0, 1]],
      ["supervisorPhone", "SOAP::SOAPString", [0, 1]],
      ["assistant", "RecordRef", [0, 1]],
      ["assistantPhone", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["addressbookList", "ContactAddressbookList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CategoryList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CategoryList"),
    :schema_element => [
      ["category", "RecordRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactAddressbookList"),
    :schema_element => [
      ["addressbook", "ContactAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ContactSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ContactSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["customerPrimaryJoin", "CustomerSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["jobPrimaryJoin", "JobSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["partnerPrimaryJoin", "PartnerSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]],
      ["vendorPrimaryJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ContactSearch", [0, 1]],
      ["columns", "ContactSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ContactSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ContactSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["customerPrimaryJoin", "CustomerSearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["jobPrimaryJoin", "JobSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchRowBasic", [0, 1]],
      ["partnerPrimaryJoin", "PartnerSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "VendorSearchRowBasic", [0, 1]],
      ["vendorPrimaryJoin", "VendorSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Customer,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Customer"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["language", "Language", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["representingSubsidiary", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["territory", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["taxExempt", "SOAP::SOAPBoolean", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["creditHoldOverride", "CustomerCreditHoldOverride", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["daysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolUnbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolOverdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolDepositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolAging", "SOAP::SOAPDouble", [0, 1]],
      ["consolDaysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["priceLevel", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["prefCCProcessor", "RecordRef", [0, 1]],
      ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["taxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["resaleNumber", "SOAP::SOAPString", [0, 1]],
      ["aging", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reminderDays", "SOAP::SOAPLong", [0, 1]],
      ["shippingItem", "RecordRef", [0, 1]],
      ["thirdPartyAcct", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcode", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountry", "Country", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["accessRole", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["campaignCategory", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["receivablesAccount", "RecordRef", [0, 1]],
      ["webLead", "SOAP::SOAPString", [0, 1]],
      ["referrer", "SOAP::SOAPString", [0, 1]],
      ["keywords", "SOAP::SOAPString", [0, 1]],
      ["clickStream", "SOAP::SOAPString", [0, 1]],
      ["lastPageVisited", "SOAP::SOAPString", [0, 1]],
      ["visits", "SOAP::SOAPLong", [0, 1]],
      ["firstVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["lastVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "RecordRef", [0, 1]],
      ["stage", "CustomerStage", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["salesReadiness", "RecordRef", [0, 1]],
      ["salesTeamList", "CustomerSalesTeamList", [0, 1]],
      ["buyingReason", "RecordRef", [0, 1]],
      ["downloadList", "CustomerDownloadList", [0, 1]],
      ["buyingTimeFrame", "RecordRef", [0, 1]],
      ["addressbookList", "CustomerAddressbookList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["contactRolesList", "ContactAccessRolesList", [0, 1]],
      ["currencyList", "CustomerCurrencyList", [0, 1]],
      ["creditCardsList", "CustomerCreditCardsList", [0, 1]],
      ["partnersList", "CustomerPartnersList", [0, 1]],
      ["groupPricingList", "CustomerGroupPricingList", [0, 1]],
      ["itemPricingList", "CustomerItemPricingList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerDownload,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerDownload"),
    :schema_element => [
      ["file", "RecordRef", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["remainingDownloads", "SOAP::SOAPLong", [0, 1]],
      ["expiration", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerDownloadList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerDownloadList"),
    :schema_element => [
      ["download", "CustomerDownload[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ContactAccessRoles,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactAccessRoles"),
    :schema_element => [
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["role", "RecordRef", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactAccessRolesList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactAccessRolesList"),
    :schema_element => [
      ["contactRoles", "ContactAccessRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerSalesTeam_,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerSalesTeamList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerSalesTeamList"),
    :schema_element => [
      ["salesTeam", "CustomerSalesTeam_[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerAddressbookList"),
    :schema_element => [
      ["addressbook", "CustomerAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerCreditCards,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerCreditCards"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["debitcardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["ccMemo", "SOAP::SOAPString", [0, 1]],
      ["validfrom", "SOAP::SOAPDateTime", [0, 1]],
      ["ccDefault", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerCreditCardsList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerCreditCardsList"),
    :schema_element => [
      ["creditCards", "CustomerCreditCards[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerGroupPricing,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerGroupPricing"),
    :schema_element => [
      ["group", "RecordRef", [0, 1]],
      ["level", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerGroupPricingList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerGroupPricingList"),
    :schema_element => [
      ["groupPricing", "CustomerGroupPricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerItemPricing,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerItemPricing"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["level", "RecordRef", [0, 1]],
      ["price", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerItemPricingList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerItemPricingList"),
    :schema_element => [
      ["itemPricing", "CustomerItemPricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerPartnersList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomerSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["hostedPageJoin", "FileSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["parentCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchBasic", [0, 1]],
      ["subCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["topLevelParentJoin", "CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["webSiteCategoryJoin", "SiteCategorySearchBasic", [0, 1]],
      ["webSiteItemJoin", "ItemSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CustomerSearch", [0, 1]],
      ["columns", "CustomerSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomerSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["hostedPageJoin", "FileSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["parentCustomerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchRowBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["subCustomerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]],
      ["topLevelParentJoin", "CustomerSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]],
      ["webSiteCategoryJoin", "SiteCategorySearchRowBasic", [0, 1]],
      ["webSiteItemJoin", "ItemSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerStatus,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["stage", "CustomerStatusStage", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeInLeadReports", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Partner,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Partner"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["partnerCode", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["referringUrl", "SOAP::SOAPString", [0, 1]],
      ["roleList", "RecordRefList", [0, 1]],
      ["categoryList", "CategoryList", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["taxFractionUnit", "TaxFractionUnit", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["taxRounding", "TaxRounding", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["accessRole", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["subPartnerLogin", "SOAP::SOAPBoolean", [0, 1]],
      ["loginAs", "SOAP::SOAPString", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["contactRolesList", "ContactAccessRolesList", [0, 1]],
      ["promoCodeList", "PartnerPromoCodeList", [0, 1]],
      ["addressbookList", "PartnerAddressbookList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PartnerPromoCode,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerPromoCode"),
    :schema_element => [
      ["promoCode", "RecordRef", [0, 1]],
      ["discount", "SOAP::SOAPString", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerPromoCodeList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerPromoCodeList"),
    :schema_element => [
      ["promoCode", "PartnerPromoCode[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => PartnerAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerAddressbookList"),
    :schema_element => [
      ["addressbook", "PartnerAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => PartnerSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PartnerSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PartnerSearch", [0, 1]],
      ["columns", "PartnerSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PartnerSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PartnerSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Vendor,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Vendor"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["representingSubsidiary", "RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["payablesAccount", "RecordRef", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["is1099Eligible", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResourceVend", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["workCalendar", "RecordRef", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["isAccountant", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["pricingScheduleList", "VendorPricingScheduleList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["addressbookList", "VendorAddressbookList", [0, 1]],
      ["rolesList", "VendorRolesList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorPricingSchedule,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorPricingSchedule"),
    :schema_element => [
      ["scheduleName", "SOAP::SOAPString", [0, 1]],
      ["scheduleDiscount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorPricingScheduleList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorPricingScheduleList"),
    :schema_element => [
      ["pricingSchedule", "VendorPricingSchedule[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorAddressbookList"),
    :schema_element => [
      ["addressbook", "VendorAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorRoles,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorRoles"),
    :schema_element => [
      ["selectedRole", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorRolesList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorRolesList"),
    :schema_element => [
      ["roles", "VendorRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "VendorSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "VendorSearch", [0, 1]],
      ["columns", "VendorSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "VendorSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EntityGroup,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["groupName", "SOAP::SOAPString", [0, 1]],
      ["groupType", "EntityGroupType", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["groupOwner", "RecordRef", [0, 1]],
      ["isSavedSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["parentGroupType", "EntityGroupType", [0, 1]],
      ["savedSearch", "RecordRef", [0, 1]],
      ["isSalesTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["restrictionGroup", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["isFunctionalTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["issueRole", "RecordRef", [0, 1]],
      ["calendarName", "SOAP::SOAPString", [0, 1]],
      ["calendarStartTime", "EntityGroupDailyTime", [0, 1]],
      ["calendarEndTime", "EntityGroupDailyTime", [0, 1]],
      ["calendarDefaultView", "EntityGroupDefView", [0, 1]],
      ["calendarPeriod", "EntityGroupPeriodSize", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => EntityGroupSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "EntityGroupSearchBasic", [0, 1]],
      ["groupMemberJoin", "EntitySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EntityGroupSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "EntityGroupSearch", [0, 1]],
      ["columns", "EntityGroupSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => EntityGroupSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "EntityGroupSearchRowBasic", [0, 1]],
      ["groupMemberJoin", "EntitySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Job,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Job"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["workplace", "RecordRef", [0, 1]],
      ["language", "RecordRef", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["fxRate", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["calculatedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["calculatedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["lastBaselineDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobType", "RecordRef", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedTime", "Duration", [0, 1]],
      ["estimatedTimeOverride", "Duration", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["jobBillingType", "JobBillingType", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["jobItem", "RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["actualTime", "Duration", [0, 1]],
      ["allowTime", "SOAP::SOAPBoolean", [0, 1]],
      ["timeRemaining", "Duration", [0, 1]],
      ["limitTimeToAssignees", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedLaborCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedLaborCostBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["estimateRevRecTemplate", "RecordRef", [0, 1]],
      ["estimatedLaborRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["allowAllResourcesForTasks", "SOAP::SOAPBoolean", [0, 1]],
      ["jobPrice", "SOAP::SOAPDouble", [0, 1]],
      ["isUtilizedTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductiveTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isExemptTime", "SOAP::SOAPBoolean", [0, 1]],
      ["materializeTime", "SOAP::SOAPBoolean", [0, 1]],
      ["allowExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["allocatePayrollExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["includeCrmTasksInTotals", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["jobResourcesList", "JobResourcesList", [0, 1]],
      ["addressbookList", "JobAddressbookList", [0, 1]],
      ["milestonesList", "JobMilestonesList", [0, 1]],
      ["creditCardsList", "JobCreditCardsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => JobAddressbook,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobAddressbookList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobAddressbookList"),
    :schema_element => [
      ["addressbook", "JobAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => JobResources,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobResources"),
    :schema_element => [
      ["jobResource", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["role", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobResourcesList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobResourcesList"),
    :schema_element => [
      ["jobResources", "JobResources[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => JobMilestones,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobMilestones"),
    :schema_element => [
      ["milestoneName", "SOAP::SOAPString", [0, 1]],
      ["milestoneOrder", "SOAP::SOAPString", [0, 1]],
      ["milestoneEstComplete", "SOAP::SOAPDateTime", [0, 1]],
      ["milestoneCompleted", "SOAP::SOAPBoolean", [0, 1]],
      ["milestoneComments", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobMilestonesList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobMilestonesList"),
    :schema_element => [
      ["milestones", "JobMilestones[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => JobCreditCards,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobCreditCards"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["ccMemo", "SOAP::SOAPString", [0, 1]],
      ["ccDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobCreditCardsList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobCreditCardsList"),
    :schema_element => [
      ["creditCards", "JobCreditCards[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => JobSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "JobSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["projectTaskJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "JobSearch", [0, 1]],
      ["columns", "JobSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => JobSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "JobSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["projectTaskJoin", "ProjectTaskSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobType,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => JobStatus,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerStatusSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStatusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomerStatusSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerStatusSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStatusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CustomerStatusSearch", [0, 1]],
      ["columns", "CustomerStatusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerStatusSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStatusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomerStatusSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobStatusSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobStatusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "JobStatusSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobStatusSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobStatusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "JobStatusSearch", [0, 1]],
      ["columns", "JobStatusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => JobStatusSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobStatusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "JobStatusSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobTypeSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "JobTypeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "JobTypeSearch", [0, 1]],
      ["columns", "JobTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => JobTypeSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "JobTypeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OriginatingLeadSearch,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "OriginatingLeadSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "OriginatingLeadSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OriginatingLeadSearchRow,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "OriginatingLeadSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "OriginatingLeadSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerCurrency,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerCurrency"),
    :schema_element => [
      ["currency", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["consolBalance", "SOAP::SOAPDouble", [0, 1]],
      ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolDepositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolOverdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolUnbilledOrders", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerCurrencyList,
    :schema_type => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerCurrencyList"),
    :schema_element => [
      ["currency", "CustomerCurrency[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SupportCase,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCase"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["escalationMessage", "SOAP::SOAPString", [0, 1]],
      ["lastReopenedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["incomingMessage", "SOAP::SOAPString", [0, 1]],
      ["insertSolution", "RecordRef", [0, 1]],
      ["outgoingMessage", "SOAP::SOAPString", [0, 1]],
      ["searchSolution", "SOAP::SOAPString", [0, 1]],
      ["emailForm", "SOAP::SOAPBoolean", [0, 1]],
      ["newSolutionFromMsg", "SOAP::SOAPString", [0, 1]],
      ["internalOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["caseNumber", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastMessageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["product", "RecordRef", [0, 1]],
      ["v_module", ["RecordRef", XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["serialNumber", "RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["issue", "RecordRef", [0, 1]],
      ["status", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["priority", "RecordRef", [0, 1]],
      ["origin", "RecordRef", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["helpDesk", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "EmailEmployeesList", [0, 1]],
      ["escalateToList", "SupportCaseEscalateToList", [0, 1]],
      ["timeItemList", "SupportCaseTimeItemList", [0, 1]],
      ["solutionsList", "SupportCaseSolutionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => EmailEmployeesList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "EmailEmployeesList"),
    :schema_element => [
      ["emailEmployees", "RecordRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => SupportCaseEscalateTo,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseEscalateTo"),
    :schema_element => [
      ["escalatee", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SupportCaseEscalateToList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseEscalateToList"),
    :schema_element => [
      ["escalateTo", "SupportCaseEscalateTo[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SupportCaseSolutions,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseSolutions"),
    :schema_element => [
      ["solution", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["dateApplied", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SupportCaseSolutionsList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseSolutionsList"),
    :schema_element => [
      ["solutions", "SupportCaseSolutions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SupportCaseTimeItemList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseTimeItemList"),
    :schema_element => [
      ["timeItem", "TimeItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SupportCaseSearch,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["issueJoin", "IssueSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SupportCaseSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "SupportCaseSearch", [0, 1]],
      ["columns", "SupportCaseSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SupportCaseSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "SupportCaseSearchRowBasic", [0, 1]],
      ["contactJoin", "ContactSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["issueJoin", "IssueSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SupportCaseStatus,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseStatus"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["stage", "SupportCaseStatusStage", [0, 1]],
      ["caseOnHold", "SOAP::SOAPBoolean", [0, 1]],
      ["autoCloseCase", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SupportCaseType,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SupportCaseOrigin,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseOrigin"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SupportCaseIssue,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseIssue"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SupportCasePriority,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCasePriority"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Solution,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "Solution"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["solutionCode", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["status", "SolutionStatus", [0, 1]],
      ["displayOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["topicsList", "SolutionTopicsList", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["solutionsList", "SolutionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SolutionTopics,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionTopics"),
    :schema_element => [
      ["topic", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SolutionTopicsList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionTopicsList"),
    :schema_element => [
      ["topics", "SolutionTopics[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => Solutions,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "Solutions"),
    :schema_element => [
      ["solution", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SolutionsList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionsList"),
    :schema_element => [
      ["solutions", "Solutions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SolutionSearch,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "SolutionSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["relatedSolutionJoin", "SolutionSearchBasic", [0, 1]],
      ["topicJoin", "TopicSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SolutionSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "SolutionSearch", [0, 1]],
      ["columns", "SolutionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SolutionSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "SolutionSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["relatedSolutionJoin", "SolutionSearchRowBasic", [0, 1]],
      ["topicJoin", "TopicSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Topic,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "Topic"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["parentTopic", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["solutionList", "TopicSolutionList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TopicSolution,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "TopicSolution"),
    :schema_element => [
      ["solution", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TopicSolutionList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "TopicSolutionList"),
    :schema_element => [
      ["solution", "TopicSolution[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => TopicSearch,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "TopicSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "TopicSearchBasic", [0, 1]],
      ["solutionJoin", "SolutionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TopicSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "TopicSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "TopicSearch", [0, 1]],
      ["columns", "TopicSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TopicSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "TopicSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "TopicSearchRowBasic", [0, 1]],
      ["solutionJoin", "SolutionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Issue,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "Issue"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["issueNumber", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueType", "RecordRef", [0, 1]],
      ["product", "RecordRef", [0, 1]],
      ["v_module", ["RecordRef", XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["productTeam", "RecordRef", [0, 1]],
      ["source", "RecordRef", [0, 1]],
      ["reportedBy", "RecordRef", [0, 1]],
      ["reproduce", "RecordRef", [0, 1]],
      ["duplicateOf", "RecordRef", [0, 1]],
      ["severity", "RecordRef", [0, 1]],
      ["priority", "RecordRef", [0, 1]],
      ["isShowStopper", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["reviewer", "RecordRef", [0, 1]],
      ["isReviewed", "SOAP::SOAPBoolean", [0, 1]],
      ["issueStatus", "RecordRef", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueTagsList", "RecordRefList", [0, 1]],
      ["issueAbstract", "SOAP::SOAPString", [0, 1]],
      ["newDetails", "SOAP::SOAPString", [0, 1]],
      ["isOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["trackCode", "IssueTrackCode", [0, 1]],
      ["emailAssignee", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "EmailEmployeesList", [0, 1]],
      ["emailCellsList", "RecordRefList", [0, 1]],
      ["externalAbstract", "SOAP::SOAPString", [0, 1]],
      ["externalDetails", "SOAP::SOAPString", [0, 1]],
      ["brokenInVersionList", "IssueVersionList", [0, 1]],
      ["targetVersionList", "IssueVersionList", [0, 1]],
      ["fixedInVersionList", "IssueVersionList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => IssueVersion,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "IssueVersion"),
    :schema_element => [
      ["primary", "SOAP::SOAPBoolean", [0, 1]],
      ["version", "RecordRef", [0, 1]],
      ["build", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => IssueVersionList,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "IssueVersionList"),
    :schema_element => [
      ["issueVersion", "IssueVersion[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => IssueSearch,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "IssueSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "IssueSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => IssueSearchAdvanced,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "IssueSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "IssueSearch", [0, 1]],
      ["columns", "IssueSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => IssueSearchRow,
    :schema_type => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "IssueSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "IssueSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ClassTranslation,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ClassTranslation"),
    :schema_element => [
      ["locale", "SOAP::SOAPString", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ClassTranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ClassTranslationList"),
    :schema_element => [
      ["classTranslation", "ClassTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ContactCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["private", "SOAP::SOAPBoolean", [0, 1]],
      ["sync", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SalesRole,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesRole"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PriceLevel,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PriceLevel"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["discountpct", "SOAP::SOAPDouble", [0, 1]],
      ["updateExistingPrices", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => WinLossReason,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "WinLossReason"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Term,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Term"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["dateDriven", "SOAP::SOAPBoolean", [0, 1]],
      ["daysUntilNetDue", "SOAP::SOAPLong", [0, 1]],
      ["discountPercent", "SOAP::SOAPDouble", [0, 1]],
      ["daysUntilExpiry", "SOAP::SOAPLong", [0, 1]],
      ["dayOfMonthNetDue", "SOAP::SOAPLong", [0, 1]],
      ["dueNextMonthIfWithinDays", "SOAP::SOAPLong", [0, 1]],
      ["discountPercentDateDriven", "SOAP::SOAPDouble", [0, 1]],
      ["dayDiscountExpires", "SOAP::SOAPLong", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NoteType,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NoteType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PaymentMethod,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentMethod"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "SOAP::SOAPBoolean", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isDebitCard", "SOAP::SOAPBoolean", [0, 1]],
      ["merchantAccountsList", "RecordRefList", [0, 1]],
      ["payPalEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["expressCheckoutArrangement", "SOAP::SOAPString", [0, 1]],
      ["useExpressCheckout", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => LeadSource,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LeadSource"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Price,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Price"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PriceList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PriceList"),
    :schema_element => [
      ["price", "Price[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Pricing,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Pricing"),
    :schema_element => [
      ["currency", "RecordRef", [0, 1]],
      ["priceLevel", "RecordRef", [0, 1]],
      ["discount", "SOAP::SOAPDouble", [0, 1]],
      ["priceList", "PriceList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PricingMatrix,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PricingMatrix"),
    :schema_element => [
      ["pricing", "Pricing[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => Rate,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Rate"),
    :schema_element => [
      ["value", "SOAP::SOAPDouble", [0, 1]],
      ["priceLevel", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RateList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RateList"),
    :schema_element => [
      ["rate", "Rate[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => BillingRates,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BillingRates"),
    :schema_element => [
      ["currency", "RecordRef", [0, 1]],
      ["billingClass", "RecordRef", [0, 1]],
      ["rateList", "RateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BillingRatesMatrix,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BillingRatesMatrix"),
    :schema_element => [
      ["billingRates", "BillingRates[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => Translation,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Translation"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TranslationList"),
    :schema_element => [
      ["translation", "Translation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemOptionsList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemOptionsList"),
    :schema_element => [
      ["itemOptions", "RecordRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemVendor,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemVendor"),
    :schema_element => [
      ["vendor", "RecordRef", [0, 1]],
      ["vendorCode", "SOAP::SOAPString", [0, 1]],
      ["vendorCurrencyName", "SOAP::SOAPString", [0, 1]],
      ["purchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["preferredVendor", "SOAP::SOAPBoolean", [0, 1]],
      ["schedule", "RecordRef", [0, 1]],
      ["subsidiary", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemVendorList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemVendorList"),
    :schema_element => [
      ["itemVendor", "ItemVendor[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SiteCategory_,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SiteCategory"),
    :schema_element => [
      ["website", "RecordRef", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["categoryDescription", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SiteCategoryList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SiteCategoryList"),
    :schema_element => [
      ["siteCategory", "SiteCategory_[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ProductFeedList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ProductFeedList"),
    :schema_element => [
      ["productFeed", "ItemProductFeed[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemMember,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemMember"),
    :schema_element => [
      ["memberDescr", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["memberUnit", "SOAP::SOAPString", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["taxcode", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["taxrate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemMemberList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemMemberList"),
    :schema_element => [
      ["itemMember", "ItemMember[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["dateConvertedToInv", "SOAP::SOAPDateTime", [0, 1]],
      ["originalItemType", "ItemType", [0, 1]],
      ["originalItemSubtype", "ItemSubType", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["costingMethod", "ItemCostingMethod", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommittedUnits", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["quantityAvailableUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["quantityOnOrderUnits", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["locationsList", "InventoryItemLocationsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => MatrixOptionList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "MatrixOptionList"),
    :schema_element => [
      ["matrixOption", "SelectCustomFieldRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryItemBinNumber,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryItemBinNumber"),
    :schema_element => [
      ["binNumber", "RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPString", [0, 1]],
      ["onHandAvail", "SOAP::SOAPString", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["preferredBin", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryItemBinNumberList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryItemBinNumberList"),
    :schema_element => [
      ["binNumber", "InventoryItemBinNumber[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "RecordRef", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryItemLocationsList"),
    :schema_element => [
      ["locations", "InventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => PresentationItemList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PresentationItemList"),
    :schema_element => [
      ["presentationItem", "PresentationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => DescriptionItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DescriptionItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DiscountItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DiscountItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DownloadItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DownloadItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["numOfAllowedDownloads", "SOAP::SOAPLong", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["immediateDownload", "SOAP::SOAPBoolean", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => MarkupItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "MarkupItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PaymentItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SubtotalItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubtotalItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NonInventoryPurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NonInventoryPurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NonInventorySaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NonInventorySaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NonInventoryResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NonInventoryResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherChargeResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherChargeResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherChargePurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherChargePurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ServiceResaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServiceResaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["billingRatesMatrix", "BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ServicePurchaseItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServicePurchaseItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ServiceSaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServiceSaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["billingRatesMatrix", "BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherChargeSaleItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherChargeSaleItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Currency,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Currency"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["symbol", "SOAP::SOAPString", [0, 1]],
      ["isBaseCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["locale", "CurrencyLocale", [0, 1]],
      ["formatSample", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["fxRateUpdateTimezone", "CurrencyFxRateUpdateTimezone", [0, 1]],
      ["inclInFxRateUpdates", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyPrecision", "CurrencyCurrencyPrecision", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ExpenseCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ExpenseCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["expenseAcct", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Account,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Account"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["acctType", "AccountType", [0, 1]],
      ["acctNumber", "SOAP::SOAPString", [0, 1]],
      ["acctName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPString", [0, 1]],
      ["generalRate", "ConsolidatedRate", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["cashFlowRate", "ConsolidatedRate", [0, 1]],
      ["billableExpensesAcct", "RecordRef", [0, 1]],
      ["deferralAcct", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["curDocNum", "SOAP::SOAPLong", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["inventory", "SOAP::SOAPBoolean", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["category1099misc", "RecordRef", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revalue", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "AccountTranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AccountTranslationList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountTranslationList"),
    :schema_element => [
      ["translation", "ClassTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => AccountSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "AccountSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AccountSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "AccountSearch", [0, 1]],
      ["columns", "AccountSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AccountSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "AccountSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Department,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Department"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DepartmentSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DepartmentSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "DepartmentSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => DepartmentSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DepartmentSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "DepartmentSearch", [0, 1]],
      ["columns", "DepartmentSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DepartmentSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DepartmentSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "DepartmentSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Classification,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Classification"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ClassificationSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ClassificationSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ClassificationSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ClassificationSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ClassificationSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ClassificationSearch", [0, 1]],
      ["columns", "ClassificationSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ClassificationSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ClassificationSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ClassificationSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Location,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Location"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["logo", "RecordRef", [0, 1]],
      ["makeInventoryAvailable", "SOAP::SOAPBoolean", [0, 1]],
      ["makeInventoryAvailableStore", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => LocationSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LocationSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "LocationSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => LocationSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LocationSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "LocationSearch", [0, 1]],
      ["columns", "LocationSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => LocationSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LocationSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "LocationSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UnitsType,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["uomList", "UnitsTypeUomList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => UnitsTypeUom,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsTypeUom"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["unitName", "SOAP::SOAPString", [0, 1]],
      ["pluralName", "SOAP::SOAPString", [0, 1]],
      ["abbreviation", "SOAP::SOAPString", [0, 1]],
      ["pluralAbbreviation", "SOAP::SOAPString", [0, 1]],
      ["conversionRate", "SOAP::SOAPDouble", [0, 1]],
      ["baseUnit", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UnitsTypeUomList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsTypeUomList"),
    :schema_element => [
      ["uom", "UnitsTypeUom[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ItemSearchBasic", [0, 1]],
      ["binNumberJoin", "BinSearchBasic", [0, 1]],
      ["correlatedItemJoin", "ItemSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "InventoryDetailSearchBasic", [0, 1]],
      ["inventoryLocationJoin", "LocationSearchBasic", [0, 1]],
      ["inventoryNumberJoin", "InventoryNumberSearchBasic", [0, 1]],
      ["memberItemJoin", "ItemSearchBasic", [0, 1]],
      ["parentJoin", "ItemSearchBasic", [0, 1]],
      ["preferredLocationJoin", "LocationSearchBasic", [0, 1]],
      ["preferredVendorJoin", "VendorSearchBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ItemSearch", [0, 1]],
      ["columns", "ItemSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ItemSearchRowBasic", [0, 1]],
      ["binNumberJoin", "BinSearchRowBasic", [0, 1]],
      ["correlatedItemJoin", "ItemSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["inventoryDetailJoin", "InventoryDetailSearchRowBasic", [0, 1]],
      ["inventoryLocationJoin", "LocationSearchRowBasic", [0, 1]],
      ["inventoryNumberJoin", "InventoryNumberSearchRowBasic", [0, 1]],
      ["memberItemJoin", "ItemSearchRowBasic", [0, 1]],
      ["parentJoin", "ItemSearchRowBasic", [0, 1]],
      ["preferredLocationJoin", "LocationSearchRowBasic", [0, 1]],
      ["preferredVendorJoin", "VendorSearchRowBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "VendorSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactRole,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactRole"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Bin,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Bin"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["binNumber", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BinSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BinSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "BinSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BinSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BinSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "BinSearch", [0, 1]],
      ["columns", "BinSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BinSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BinSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "BinSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SalesTaxItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesTaxItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["taxType", "RecordRef", [0, 1]],
      ["taxAgency", "RecordRef", [0, 1]],
      ["purchaseAccount", "RecordRef", [0, 1]],
      ["saleAccount", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["validUntil", "SOAP::SOAPDateTime", [0, 1]],
      ["eccode", "SOAP::SOAPBoolean", [0, 1]],
      ["reverseCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["exempt", "SOAP::SOAPBoolean", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeFromTaxReports", "SOAP::SOAPBoolean", [0, 1]],
      ["available", "SalesTaxItemAvailable", [0, 1]],
      ["export", "SOAP::SOAPBoolean", [0, 1]],
      ["taxAccount", "RecordRef", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TaxGroup,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["taxitem1", "RecordRef", [0, 1]],
      ["unitprice1", "SOAP::SOAPString", [0, 1]],
      ["taxitem2", "RecordRef", [0, 1]],
      ["unitprice2", "SOAP::SOAPString", [0, 1]],
      ["piggyback", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["taxType", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItemList", "TaxGroupTaxItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TaxGroupTaxItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxGroupTaxItem"),
    :schema_element => [
      ["taxName", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["basis", "SOAP::SOAPDouble", [0, 1]],
      ["taxType", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TaxGroupTaxItemList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxGroupTaxItemList"),
    :schema_element => [
      ["taxItem", "TaxGroupTaxItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => TaxType,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nexusesTaxList", "TaxTypeNexusesTaxList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TaxTypeNexusesTax,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxTypeNexusesTax"),
    :schema_element => [
      ["nexus", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["saleTaxAcct", "RecordRef", [0, 1]],
      ["purchTaxAcct", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TaxTypeNexusesTaxList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxTypeNexusesTaxList"),
    :schema_element => [
      ["nexusesTax", "TaxTypeNexusesTax[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SerializedInventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedInventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["numbersList", "SerializedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["locationsList", "SerializedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SerializedInventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "RecordRef", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SerializedInventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocationsList"),
    :schema_element => [
      ["locations", "SerializedInventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SerializedInventoryItemNumbers,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbers"),
    :schema_element => [
      ["serialNumber", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SerializedInventoryItemNumbersList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbersList"),
    :schema_element => [
      ["numbers", "SerializedInventoryItemNumbers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => LotNumberedInventoryItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["numbersList", "LotNumberedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["locationsList", "LotNumberedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => LotNumberedInventoryItemLocations,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["locationId", "RecordRef", [0, 1]],
      ["locationlookup", "RecordRef", [0, 1]],
      ["location_display", "SOAP::SOAPString", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => LotNumberedInventoryItemLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocationsList"),
    :schema_element => [
      ["locations", "LotNumberedInventoryItemLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => LotNumberedInventoryItemNumbers,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbers"),
    :schema_element => [
      ["serialNumber", "RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => LotNumberedInventoryItemNumbersList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbersList"),
    :schema_element => [
      ["numbers", "LotNumberedInventoryItemNumbers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => GiftCertificateItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["liabilityAccount", "RecordRef", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["authCodesList", "GiftCertificateItemAuthCodesList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => GiftCertificateItemAuthCodes,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodes"),
    :schema_element => [
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["used", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GiftCertificateItemAuthCodesList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodesList"),
    :schema_element => [
      ["authCodes", "GiftCertificateItemAuthCodes[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => Subsidiary,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Subsidiary"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["showSubsidiaryName", "SOAP::SOAPBoolean", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["logo", "RecordRef", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["pageLogo", "RecordRef", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddr", "SOAP::SOAPString", [0, 1]],
      ["returnAddr", "SOAP::SOAPString", [0, 1]],
      ["companyNameForSupportMessages", "SOAP::SOAPString", [0, 1]],
      ["mainSupportEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["anonymousCustomerInboundEmail", "RecordRef", [0, 1]],
      ["anonymousCustomerOnlineForms", "RecordRef", [0, 1]],
      ["caseCreationTemplate", "RecordRef", [0, 1]],
      ["caseUpdateTemplate", "RecordRef", [0, 1]],
      ["caseAutomaticClosureTemplate", "RecordRef", [0, 1]],
      ["caseAssignmentTemplate", "RecordRef", [0, 1]],
      ["employeeCaseUpdateTemplate", "RecordRef", [0, 1]],
      ["caseCopyEmployeeTemplate", "RecordRef", [0, 1]],
      ["caseEscalationTemplate", "RecordRef", [0, 1]],
      ["returnAddress1", "SOAP::SOAPString", [0, 1]],
      ["returnAddress2", "SOAP::SOAPString", [0, 1]],
      ["returnCity", "SOAP::SOAPString", [0, 1]],
      ["returnState", "SOAP::SOAPString", [0, 1]],
      ["returnCountry", "Country", [0, 1]],
      ["returnZip", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["isElimination", "SOAP::SOAPBoolean", [0, 1]],
      ["allowPayroll", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["edition", "SOAP::SOAPString", [0, 1]],
      ["federalIdNumber", "SOAP::SOAPString", [0, 1]],
      ["addrLanguage", "SOAP::SOAPString", [0, 1]],
      ["nonConsol", "SOAP::SOAPString", [0, 1]],
      ["consol", "SOAP::SOAPString", [0, 1]],
      ["shipAddress1", "SOAP::SOAPString", [0, 1]],
      ["shipAddress2", "SOAP::SOAPString", [0, 1]],
      ["shipCity", "SOAP::SOAPString", [0, 1]],
      ["shipState", "SOAP::SOAPString", [0, 1]],
      ["shipCountry", "Country", [0, 1]],
      ["shipZip", "SOAP::SOAPString", [0, 1]],
      ["state1TaxNumber", "SOAP::SOAPString", [0, 1]],
      ["ssnOrTin", "SOAP::SOAPString", [0, 1]],
      ["interCoAccount", "RecordRef", [0, 1]],
      ["nexusList", "SubsidiaryNexusList", [0, 1]],
      ["checkLayout", "RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SubsidiaryNexus,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubsidiaryNexus"),
    :schema_element => [
      ["nexusId", "RecordRef", [0, 1]],
      ["country", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SubsidiaryNexusList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubsidiaryNexusList"),
    :schema_element => [
      ["nexus", "SubsidiaryNexus[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SubsidiarySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubsidiarySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "SubsidiarySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SubsidiarySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubsidiarySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "SubsidiarySearch", [0, 1]],
      ["columns", "SubsidiarySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SubsidiarySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubsidiarySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "SubsidiarySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GiftCertificate,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificate"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["giftCertCode", "SOAP::SOAPString", [0, 1]],
      ["sender", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => GiftCertificateSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "GiftCertificateSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GiftCertificateSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "GiftCertificateSearch", [0, 1]],
      ["columns", "GiftCertificateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => GiftCertificateSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "GiftCertificateSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PartnerCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "VendorCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isTaxAgency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => KitItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "KitItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethod", "ItemCostingMethod", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["prodQtyVarianceAcct", "RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["locationsList", "InventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SerializedAssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedAssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["locationsList", "SerializedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "SerializedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => LotNumberedAssemblyItem,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedAssemblyItem"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["locationsList", "LotNumberedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "LotNumberedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ServiceItemTaskTemplates,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServiceItemTaskTemplates"),
    :schema_element => [
      ["taskName", "SOAP::SOAPString", [0, 1]],
      ["taskStartOffset", "SOAP::SOAPLong", [0, 1]],
      ["taskDuration", "Duration", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ServiceItemTaskTemplatesList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServiceItemTaskTemplatesList"),
    :schema_element => [
      ["taskTemplates", "ServiceItemTaskTemplates[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => State,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "State"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "Country", [0, 1]],
      ["fullName", "SOAP::SOAPString", [0, 1]],
      ["shortname", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AccountingPeriod,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountingPeriod"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["periodName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["closedOnDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isAdjust", "SOAP::SOAPBoolean", [0, 1]],
      ["isQuarter", "SOAP::SOAPBoolean", [0, 1]],
      ["isYear", "SOAP::SOAPBoolean", [0, 1]],
      ["closed", "SOAP::SOAPBoolean", [0, 1]],
      ["apLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["arLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allowNonGLChanges", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BudgetCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "BudgetCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["budgetType", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AccountingPeriodSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountingPeriodSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "AccountingPeriodSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AccountingPeriodSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountingPeriodSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "AccountingPeriodSearch", [0, 1]],
      ["columns", "AccountingPeriodSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AccountingPeriodSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountingPeriodSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "AccountingPeriodSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ContactCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ContactCategorySearch", [0, 1]],
      ["columns", "ContactCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ContactCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ContactCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactRoleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactRoleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ContactRoleSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactRoleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactRoleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ContactRoleSearch", [0, 1]],
      ["columns", "ContactRoleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ContactRoleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactRoleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ContactRoleSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomerCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CustomerCategorySearch", [0, 1]],
      ["columns", "CustomerCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomerCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ExpenseCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ExpenseCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ExpenseCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ExpenseCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ExpenseCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "ExpenseCategorySearch", [0, 1]],
      ["columns", "ExpenseCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ExpenseCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ExpenseCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ExpenseCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NoteTypeSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NoteTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NoteTypeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NoteTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NoteTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NoteTypeSearch", [0, 1]],
      ["columns", "NoteTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NoteTypeSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NoteTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NoteTypeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PartnerCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PartnerCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PartnerCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PartnerCategorySearch", [0, 1]],
      ["columns", "PartnerCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PartnerCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PartnerCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PartnerCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PaymentMethodSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentMethodSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PaymentMethodSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PaymentMethodSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentMethodSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PaymentMethodSearch", [0, 1]],
      ["columns", "PaymentMethodSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PaymentMethodSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentMethodSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PaymentMethodSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PriceLevelSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PriceLevelSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PriceLevelSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PriceLevelSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PriceLevelSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PriceLevelSearch", [0, 1]],
      ["columns", "PriceLevelSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PriceLevelSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PriceLevelSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PriceLevelSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SalesRoleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesRoleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "SalesRoleSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SalesRoleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesRoleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "SalesRoleSearch", [0, 1]],
      ["columns", "SalesRoleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SalesRoleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesRoleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "SalesRoleSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TermSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TermSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "TermSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TermSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TermSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "TermSearch", [0, 1]],
      ["columns", "TermSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TermSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TermSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "TermSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "VendorCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "VendorCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "VendorCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "VendorCategorySearch", [0, 1]],
      ["columns", "VendorCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "VendorCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "VendorCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => WinLossReasonSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "WinLossReasonSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "WinLossReasonSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => WinLossReasonSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "WinLossReasonSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "WinLossReasonSearch", [0, 1]],
      ["columns", "WinLossReasonSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => WinLossReasonSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "WinLossReasonSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "WinLossReasonSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UnitsTypeSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsTypeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "UnitsTypeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UnitsTypeSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsTypeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "UnitsTypeSearch", [0, 1]],
      ["columns", "UnitsTypeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => UnitsTypeSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsTypeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "UnitsTypeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PricingGroup,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PricingGroup"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PricingGroupSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PricingGroupSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PricingGroupSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PricingGroupSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PricingGroupSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PricingGroupSearch", [0, 1]],
      ["columns", "PricingGroupSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PricingGroupSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PricingGroupSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PricingGroupSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryNumber,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumber"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["inventoryNumber", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["units", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["locationsList", "InventoryNumberLocationsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InventoryNumberLocations,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumberLocations"),
    :schema_element => [
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["quantityInTransit", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryNumberLocationsList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumberLocationsList"),
    :schema_element => [
      ["locations", "InventoryNumberLocations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InventoryNumberSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumberSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "InventoryNumberSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryNumberSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumberSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "InventoryNumberSearch", [0, 1]],
      ["columns", "InventoryNumberSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InventoryNumberSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryNumberSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "InventoryNumberSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecSchedule,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecSchedule"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "RevRecScheduleRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => RevRecScheduleRecurrence,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrence"),
    :schema_element => [
      ["incomeaccount", "RecordRef", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["recamount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecScheduleRecurrenceList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrenceList"),
    :schema_element => [
      ["revRecScheduleRecurrence", "RevRecScheduleRecurrence[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => RevRecTemplate,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplate"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "RevRecTemplateRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => RevRecTemplateRecurrence,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplateRecurrence"),
    :schema_element => [
      ["incomeaccount", "RecordRef", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["recamount", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecTemplateRecurrenceList,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplateRecurrenceList"),
    :schema_element => [
      ["revRecTemplateRecurrence", "RevRecTemplateRecurrence[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => RevRecScheduleSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "RevRecScheduleSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecScheduleSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "RevRecScheduleSearch", [0, 1]],
      ["columns", "RevRecScheduleSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => RevRecScheduleSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "RevRecScheduleSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecTemplateSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplateSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "RevRecTemplateSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecTemplateSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplateSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "RevRecTemplateSearch", [0, 1]],
      ["columns", "RevRecTemplateSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => RevRecTemplateSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecTemplateSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "RevRecTemplateSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CostCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CostCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["itemCostType", "CostCategoryItemCostType", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Nexus,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Nexus"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "Country", [0, 1]],
      ["state", "RecordRef", [0, 1]],
      ["taxAgency", "RecordRef", [0, 1]],
      ["taxAgencyPst", "RecordRef", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NexusSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NexusSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "NexusSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NexusSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NexusSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "NexusSearch", [0, 1]],
      ["columns", "NexusSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NexusSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NexusSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "NexusSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerMessage,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerMessage"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherNameCategory,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherNameCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherNameCategorySearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherNameCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "OtherNameCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OtherNameCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherNameCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "OtherNameCategorySearch", [0, 1]],
      ["columns", "OtherNameCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherNameCategorySearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherNameCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "OtherNameCategorySearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerMessageSearch,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerMessageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomerMessageSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerMessageSearchAdvanced,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerMessageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CustomerMessageSearch", [0, 1]],
      ["columns", "CustomerMessageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerMessageSearchRow,
    :schema_type => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerMessageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomerMessageSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Opportunity,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "Opportunity"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["daysOpen", "SOAP::SOAPLong", [0, 1]],
      ["forecastType", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["projectedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["rangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["rangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["projAltSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["weightedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["actionItem", "SOAP::SOAPString", [0, 1]],
      ["winLossReason", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["salesReadiness", "RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["buyingTimeFrame", "RecordRef", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["buyingReason", "RecordRef", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["closeDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "OpportunitySalesTeamList", [0, 1]],
      ["partnersList", "OpportunityPartnersList", [0, 1]],
      ["itemList", "OpportunityItemList", [0, 1]],
      ["competitorsList", "OpportunityCompetitorsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OpportunitySalesTeam,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OpportunitySalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeamList"),
    :schema_element => [
      ["salesTeam", "OpportunitySalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => OpportunityItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OpportunityItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityItemList"),
    :schema_element => [
      ["item", "OpportunityItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => OpportunityCompetitors,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityCompetitors"),
    :schema_element => [
      ["competitor", "RecordRef", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["notes", "SOAP::SOAPString", [0, 1]],
      ["strategy", "SOAP::SOAPString", [0, 1]],
      ["winner", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OpportunityCompetitorsList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityCompetitorsList"),
    :schema_element => [
      ["competitors", "OpportunityCompetitors[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => OpportunitySearch,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunitySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "OpportunitySearchBasic", [0, 1]],
      ["actualJoin", "TransactionSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["decisionMakerJoin", "ContactSearchBasic", [0, 1]],
      ["estimateJoin", "TransactionSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["orderJoin", "TransactionSearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OpportunitySearchAdvanced,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunitySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "OpportunitySearch", [0, 1]],
      ["columns", "OpportunitySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OpportunitySearchRow,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunitySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "OpportunitySearchRowBasic", [0, 1]],
      ["actualJoin", "TransactionSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["decisionMakerJoin", "ContactSearchRowBasic", [0, 1]],
      ["estimateJoin", "TransactionSearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["orderJoin", "TransactionSearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchRowBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OpportunityPartnersList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SalesOrder,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["orderStatus", "SalesOrderOrderStatus", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["actualShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["isMultiShipTo", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["shopperIpAddress", "SOAP::SOAPString", [0, 1]],
      ["saveOnAuthDecline", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "RevenueCommitStatus", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["getAuth", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentEventResult", "TransactionPaymentEventResult", [0, 1]],
      ["paymentEventHoldReason", "TransactionPaymentEventHoldReason", [0, 1]],
      ["paymentEventType", "TransactionPaymentEventType", [0, 1]],
      ["paymentEventDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paymentEventUpdatedBy", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "SalesOrderSalesTeamList", [0, 1]],
      ["partnersList", "SalesOrderPartnersList", [0, 1]],
      ["giftCertRedemptionList", "GiftCertRedemptionList", [0, 1]],
      ["itemList", "SalesOrderItemList", [0, 1]],
      ["shipGroupList", "SalesOrderShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SalesOrderSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SalesOrderSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeamList"),
    :schema_element => [
      ["salesTeam", "SalesOrderSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SalesOrderItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["commitInventory", "SalesOrderItemCommitInventory", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["createPo", "SalesOrderItemCreatePo", [0, 1]],
      ["createdPo", "RecordRef", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["createWo", "SOAP::SOAPBoolean", [0, 1]],
      ["poVendor", "RecordRef", [0, 1]],
      ["poCurrency", "SOAP::SOAPString", [0, 1]],
      ["poRate", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPacked", "SOAP::SOAPDouble", [0, 1]],
      ["quantityPicked", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "RecordRef", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SalesOrderItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemList"),
    :schema_element => [
      ["item", "SalesOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SalesOrderPartnersList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SalesOrderShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderShipGroupList"),
    :schema_element => [
      ["shipGroup", "TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => TransactionSearch,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "TransactionSearchBasic", [0, 1]],
      ["accountJoin", "AccountSearchBasic", [0, 1]],
      ["accountingPeriodJoin", "AccountingPeriodSearchBasic", [0, 1]],
      ["appliedToTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["applyingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["billingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["binNumberJoin", "BinSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["classJoin", "ClassificationSearchBasic", [0, 1]],
      ["cogsPurchaseJoin", "TransactionSearchBasic", [0, 1]],
      ["cogsSaleJoin", "TransactionSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["createdFromJoin", "TransactionSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["customerMainJoin", "CustomerSearchBasic", [0, 1]],
      ["departmentJoin", "DepartmentSearchBasic", [0, 1]],
      ["depositTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["expenseCategoryJoin", "ExpenseCategorySearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["fulfillingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "InventoryDetailSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["itemNumberJoin", "InventoryNumberSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["jobMainJoin", "JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchBasic", [0, 1]],
      ["locationJoin", "LocationSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["paidTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["payingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["purchaseOrderJoin", "TransactionSearchBasic", [0, 1]],
      ["requestorJoin", "EmployeeSearchBasic", [0, 1]],
      ["revCommittingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["rgPostingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["salesOrderJoin", "TransactionSearchBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchBasic", [0, 1]],
      ["subsidiaryJoin", "SubsidiarySearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TransactionSearchAdvanced,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "TransactionSearch", [0, 1]],
      ["columns", "TransactionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TransactionSearchRow,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "TransactionSearchRowBasic", [0, 1]],
      ["accountJoin", "AccountSearchRowBasic", [0, 1]],
      ["accountingPeriodJoin", "AccountingPeriodSearchRowBasic", [0, 1]],
      ["appliedToTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["applyingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["billingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["binNumberJoin", "BinSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["classJoin", "ClassificationSearchRowBasic", [0, 1]],
      ["cogsPurchaseJoin", "TransactionSearchRowBasic", [0, 1]],
      ["cogsSaleJoin", "TransactionSearchRowBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchRowBasic", [0, 1]],
      ["createdFromJoin", "TransactionSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["customerMainJoin", "CustomerSearchRowBasic", [0, 1]],
      ["departmentJoin", "DepartmentSearchRowBasic", [0, 1]],
      ["depositTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["expenseCategoryJoin", "ExpenseCategorySearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["fulfillingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["inventoryDetailJoin", "InventoryDetailSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["itemNumberJoin", "InventoryNumberSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["jobMainJoin", "JobSearchRowBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchRowBasic", [0, 1]],
      ["locationJoin", "LocationSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchRowBasic", [0, 1]],
      ["paidTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["payingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["purchaseOrderJoin", "TransactionSearchRowBasic", [0, 1]],
      ["requestorJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["revCommittingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["rgPostingTransactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["salesOrderJoin", "TransactionSearchRowBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["subsidiaryJoin", "SubsidiarySearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]],
      ["vendorJoin", "VendorSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemFulfillment,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillment"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["createdFromShipGroup", "SOAP::SOAPLong", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["shipStatus", "ItemFulfillmentShipStatus", [0, 1]],
      ["saturdayDeliveryUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailAddress2Ups", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailMessageUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcodeUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryUps", "Country", [0, 1]],
      ["thirdPartyTypeUps", "ItemFulfillmentThirdPartyTypeUps", [0, 1]],
      ["partiesToTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["exportTypeUps", "ItemFulfillmentExportTypeUps", [0, 1]],
      ["methodOfTransportUps", "ItemFulfillmentMethodOfTransportUps", [0, 1]],
      ["carrierIdUps", "SOAP::SOAPString", [0, 1]],
      ["entryNumberUps", "SOAP::SOAPString", [0, 1]],
      ["inbondCodeUps", "SOAP::SOAPString", [0, 1]],
      ["isRoutedExportTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["licenseNumberUps", "SOAP::SOAPString", [0, 1]],
      ["licenseDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["licenseExceptionUps", "ItemFulfillmentLicenseExceptionUps", [0, 1]],
      ["eccNumberUps", "SOAP::SOAPString", [0, 1]],
      ["recipientTaxIdUps", "SOAP::SOAPString", [0, 1]],
      ["blanketStartDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["blanketEndDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["shipmentWeightUps", "SOAP::SOAPDouble", [0, 1]],
      ["saturdayDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["saturdayPickupFedex", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["signatureHomeDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["shipDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["homeDeliveryTypeFedEx", "ItemFulfillmentHomeDeliveryTypeFedEx", [0, 1]],
      ["homeDeliveryDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["bookingConfirmationNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["intlExemptionNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["b13aFilingOptionFedEx", "ItemFulfillmentB13AFilingOptionFedEx", [0, 1]],
      ["b13aStatementDataFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryFedEx", "Country", [0, 1]],
      ["thirdPartyTypeFedEx", "ItemFulfillmentThirdPartyTypeFedEx", [0, 1]],
      ["shipmentWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsOfSaleFedEx", "ItemFulfillmentTermsOfSaleFedEx", [0, 1]],
      ["termsFreightChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsInsuranceChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["generateIntegratedShipperLabel", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["packageList", "ItemFulfillmentPackageList", [0, 1]],
      ["packageUpsList", "ItemFulfillmentPackageUpsList", [0, 1]],
      ["packageUspsList", "ItemFulfillmentPackageUspsList", [0, 1]],
      ["packageFedExList", "ItemFulfillmentPackageFedExList", [0, 1]],
      ["itemList", "ItemFulfillmentItemList", [0, 1]],
      ["shipGroupList", "ItemFulfillmentShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItem"),
    :schema_element => [
      ["jobName", "SOAP::SOAPString", [0, 1]],
      ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
      ["createPo", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["poNum", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "RecordRef", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItemList"),
    :schema_element => [
      ["item", "ItemFulfillmentItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackage,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackage"),
    :schema_element => [
      ["packageWeight", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescr", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumber", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageList"),
    :schema_element => [
      ["package", "ItemFulfillmentPackage[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageUps,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUps"),
    :schema_element => [
      ["packageWeightUps", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescrUps", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumberUps", "SOAP::SOAPString", [0, 1]],
      ["packagingUps", "ItemFulfillmentPackageUpsPackagingUps", [0, 1]],
      ["useInsuredValueUps", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueUps", "SOAP::SOAPDouble", [0, 1]],
      ["reference1Ups", "SOAP::SOAPString", [0, 1]],
      ["reference2Ups", "SOAP::SOAPString", [0, 1]],
      ["packageLengthUps", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthUps", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightUps", "SOAP::SOAPLong", [0, 1]],
      ["additionalHandlingUps", "SOAP::SOAPBoolean", [0, 1]],
      ["useCodUps", "SOAP::SOAPBoolean", [0, 1]],
      ["codAmountUps", "SOAP::SOAPDouble", [0, 1]],
      ["codMethodUps", "ItemFulfillmentPackageUpsCodMethodUps", [0, 1]],
      ["deliveryConfUps", "ItemFulfillmentPackageUpsDeliveryConfUps", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageUpsList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsList"),
    :schema_element => [
      ["packageUps", "ItemFulfillmentPackageUps[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageUsps,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUsps"),
    :schema_element => [
      ["packageWeightUsps", "SOAP::SOAPDouble", [0, 1]],
      ["packageDescrUsps", "SOAP::SOAPString", [0, 1]],
      ["packageTrackingNumberUsps", "SOAP::SOAPString", [0, 1]],
      ["packagingUsps", "ItemFulfillmentPackageUspsPackagingUsps", [0, 1]],
      ["useInsuredValueUsps", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueUsps", "SOAP::SOAPDouble", [0, 1]],
      ["reference1Usps", "SOAP::SOAPString", [0, 1]],
      ["reference2Usps", "SOAP::SOAPString", [0, 1]],
      ["packageLengthUsps", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthUsps", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightUsps", "SOAP::SOAPLong", [0, 1]],
      ["deliveryConfUsps", "ItemFulfillmentPackageUspsDeliveryConfUsps", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageUspsList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsList"),
    :schema_element => [
      ["packageUsps", "ItemFulfillmentPackageUsps[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageFedEx,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedEx"),
    :schema_element => [
      ["packageWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["packageTrackingNumberFedEx", "SOAP::SOAPString", [0, 1]],
      ["packagingFedEx", "ItemFulfillmentPackageFedExPackagingFedEx", [0, 1]],
      ["admPackageTypeFedEx", "ItemFulfillmentPackageFedExAdmPackageTypeFedEx", [0, 1]],
      ["isNonStandardContainerFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["insuredValueFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["useInsuredValueFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["reference1FedEx", "SOAP::SOAPString", [0, 1]],
      ["packageLengthFedEx", "SOAP::SOAPLong", [0, 1]],
      ["packageWidthFedEx", "SOAP::SOAPLong", [0, 1]],
      ["packageHeightFedEx", "SOAP::SOAPLong", [0, 1]],
      ["useCodFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["codAmountFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["codMethodFedEx", "ItemFulfillmentPackageFedExCodMethodFedEx", [0, 1]],
      ["codFreightTypeFedEx", "ItemFulfillmentPackageFedExCodFreightTypeFedEx", [0, 1]],
      ["deliveryConfFedEx", "ItemFulfillmentPackageFedExDeliveryConfFedEx", [0, 1]],
      ["signatureOptionsFedEx", "ItemFulfillmentPackageFedExSignatureOptionsFedEx", [0, 1]],
      ["signatureReleaseFedEx", "SOAP::SOAPString", [0, 1]],
      ["authorizationNumberFedEx", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageFedExList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExList"),
    :schema_element => [
      ["packageFedEx", "ItemFulfillmentPackageFedEx[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentShipGroupList"),
    :schema_element => [
      ["shipGroup", "TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => Invoice,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "Invoice"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscount", "RecordRef", [0, 1]],
      ["itemCostDiscount", "RecordRef", [0, 1]],
      ["timeDiscount", "RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxCode", "RecordRef", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxCode", "RecordRef", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxCode", "RecordRef", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "InvoiceSalesTeamList", [0, 1]],
      ["partnersList", "InvoicePartnersList", [0, 1]],
      ["itemList", "InvoiceItemList", [0, 1]],
      ["itemCostList", "InvoiceItemCostList", [0, 1]],
      ["giftCertRedemptionList", "GiftCertRedemptionList", [0, 1]],
      ["expCostList", "InvoiceExpCostList", [0, 1]],
      ["timeList", "InvoiceTimeList", [0, 1]],
      ["shipGroupList", "InvoiceShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InvoiceSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InvoiceSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeamList"),
    :schema_element => [
      ["salesTeam", "InvoiceSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InvoiceItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "RecordRef", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InvoiceItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceItemList"),
    :schema_element => [
      ["item", "InvoiceItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InvoiceItemCost,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceItemCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["itemCostCount", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InvoiceItemCostList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceItemCostList"),
    :schema_element => [
      ["itemCost", "InvoiceItemCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InvoiceExpCost,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceExpCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["categoryDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxableDisp", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InvoiceExpCostList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceExpCostList"),
    :schema_element => [
      ["expCost", "InvoiceExpCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InvoiceTime,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceTime"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InvoiceTimeList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceTimeList"),
    :schema_element => [
      ["time", "InvoiceTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InvoicePartnersList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoicePartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InvoiceShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "InvoiceShipGroupList"),
    :schema_element => [
      ["shipGroup", "TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CashSale,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSale"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscount", "RecordRef", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxCode", "RecordRef", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscount", "RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscprint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscount", "RecordRef", [0, 1]],
      ["expCostTaxCode", "RecordRef", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxCode", "RecordRef", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "CashSaleSalesTeamList", [0, 1]],
      ["partnersList", "CashSalePartnersList", [0, 1]],
      ["itemList", "CashSaleItemList", [0, 1]],
      ["itemCostList", "CashSaleItemCostList", [0, 1]],
      ["giftCertRedemptionList", "GiftCertRedemptionList", [0, 1]],
      ["expCostList", "CashSaleExpCostList", [0, 1]],
      ["timeList", "CashSaleTimeList", [0, 1]],
      ["shipGroupList", "CashSaleShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CashSaleSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CashSaleSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeamList"),
    :schema_element => [
      ["salesTeam", "CashSaleSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CashSaleItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["licenseCode", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "RecordRef", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CashSaleItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleItemList"),
    :schema_element => [
      ["item", "CashSaleItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CashSaleItemCost,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleItemCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["itemCostCount", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CashSaleItemCostList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleItemCostList"),
    :schema_element => [
      ["itemCost", "CashSaleItemCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CashSaleExpCost,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleExpCost"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["categoryDisp", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxableDisp", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CashSaleExpCostList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleExpCostList"),
    :schema_element => [
      ["expCost", "CashSaleExpCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CashSaleTime,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleTime"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["employeeDisp", "SOAP::SOAPString", [0, 1]],
      ["itemDisp", "SOAP::SOAPString", [0, 1]],
      ["jobDisp", "SOAP::SOAPString", [0, 1]],
      ["department", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitDisp", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CashSaleTimeList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleTimeList"),
    :schema_element => [
      ["time", "CashSaleTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CashSalePartnersList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSalePartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CashSaleShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSaleShipGroupList"),
    :schema_element => [
      ["shipGroup", "TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => Estimate,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "Estimate"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["includeInForecast", "SOAP::SOAPBoolean", [0, 1]],
      ["forecastType", "RecordRef", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["visibleToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "EstimateItemList", [0, 1]],
      ["salesTeamList", "EstimateSalesTeamList", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["partnersList", "EstimatePartnersList", [0, 1]],
      ["shipGroupList", "EstimateShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => EstimateItem,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimateItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["fromJob", "SOAP::SOAPBoolean", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["shipGroup", "SOAP::SOAPLong", [0, 1]],
      ["itemIsFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddress", "RecordRef", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EstimateItemList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimateItemList"),
    :schema_element => [
      ["item", "EstimateItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EstimateSalesTeam,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimateSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EstimateSalesTeamList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimateSalesTeamList"),
    :schema_element => [
      ["salesTeam", "EstimateSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EstimatePartnersList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimatePartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EstimateShipGroupList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "EstimateShipGroupList"),
    :schema_element => [
      ["shipGroup", "TransactionShipGroup[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => GiftCertRedemption,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "GiftCertRedemption"),
    :schema_element => [
      ["authCode", "RecordRef", [0, 1]],
      ["authCodeApplied", "SOAP::SOAPDouble", [0, 1]],
      ["authCodeAmtRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GiftCertRedemptionList,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "GiftCertRedemptionList"),
    :schema_element => [
      ["giftCertRedemption", "GiftCertRedemption[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => TransactionShipGroup,
    :schema_type => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionShipGroup"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["isFulfilled", "SOAP::SOAPBoolean", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["sourceAddressRef", "RecordRef", [0, 1]],
      ["sourceAddress", "SOAP::SOAPString", [0, 1]],
      ["destinationAddressRef", "RecordRef", [0, 1]],
      ["destinationAddress", "SOAP::SOAPString", [0, 1]],
      ["shippingMethodRef", "RecordRef", [0, 1]],
      ["shippingMethod", "SOAP::SOAPString", [0, 1]],
      ["isHandlingTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxRate", "SOAP::SOAPString", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingRate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTaxAmt", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Amt", "SOAP::SOAPDouble", [0, 1]],
      ["isShippingTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["shippingTaxRate", "SOAP::SOAPString", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingRate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxAmt", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Amt", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PurchLandedCostList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchLandedCostList"),
    :schema_element => [
      ["landedCost", "LandedCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorBill,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorBill"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["approvalStatus", "RecordRef", [0, 1]],
      ["nextApprover", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["landedCostMethod", "LandedCostMethod", [0, 1]],
      ["expenseList", "VendorBillExpenseList", [0, 1]],
      ["itemList", "VendorBillItemList", [0, 1]],
      ["landedCostsList", "PurchLandedCostList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorBillExpense,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorBillExpense"),
    :schema_element => [
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorBillExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorBillExpenseList"),
    :schema_element => [
      ["expense", "VendorBillExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorBillItem,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorBillItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["landedCostCategory", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "TransactionBillVarianceStatus", [0, 1]],
      ["billreceiptsList", "RecordRefList", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorBillItemList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorBillItemList"),
    :schema_element => [
      ["item", "VendorBillItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => PurchaseOrder,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["shipTo", "RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "PurchaseOrderOrderStatus", [0, 1]],
      ["itemList", "PurchaseOrderItemList", [0, 1]],
      ["expenseList", "PurchaseOrderExpenseList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PurchaseOrderExpense,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PurchaseOrderExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpenseList"),
    :schema_element => [
      ["expense", "PurchaseOrderExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => PurchaseOrderItem,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["landedCostCategory", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "TransactionBillVarianceStatus", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["expectedReceiptDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PurchaseOrderItemList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderItemList"),
    :schema_element => [
      ["item", "PurchaseOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemReceipt,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "ItemReceipt"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["landedCostMethod", "LandedCostMethod", [0, 1]],
      ["itemList", "ItemReceiptItemList", [0, 1]],
      ["expenseList", "ItemReceiptExpenseList", [0, 1]],
      ["landedCostsList", "PurchLandedCostList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemReceiptItem,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "ItemReceiptItem"),
    :schema_element => [
      ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
      ["jobName", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["onHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitCostOverride", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["restock", "SOAP::SOAPBoolean", [0, 1]],
      ["billVarianceStatus", "TransactionBillVarianceStatus", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemReceiptItemList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "ItemReceiptItemList"),
    :schema_element => [
      ["item", "ItemReceiptItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemReceiptExpense,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "ItemReceiptExpense"),
    :schema_element => [
      ["markReceived", "SOAP::SOAPBoolean", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["account", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemReceiptExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "ItemReceiptExpenseList"),
    :schema_element => [
      ["expense", "ItemReceiptExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorPayment,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorPayment"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["apAcct", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toAch", "SOAP::SOAPBoolean", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["printVoucher", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "VendorPaymentApplyList", [0, 1]],
      ["creditList", "VendorPaymentCreditList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorPaymentApply,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorPaymentApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["discDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discAmt", "SOAP::SOAPDouble", [0, 1]],
      ["disc", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorPaymentApplyList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorPaymentApplyList"),
    :schema_element => [
      ["apply", "VendorPaymentApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorPaymentCredit,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorPaymentCredit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["creditDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["appliedTo", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorPaymentCreditList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorPaymentCreditList"),
    :schema_element => [
      ["credit", "VendorPaymentCredit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorCredit,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCredit"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["unApplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["expenseList", "VendorCreditExpenseList", [0, 1]],
      ["itemList", "VendorCreditItemList", [0, 1]],
      ["applyList", "VendorCreditApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorCreditExpense,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditExpense"),
    :schema_element => [
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorCreditExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditExpenseList"),
    :schema_element => [
      ["expense", "VendorCreditExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorCreditItem,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbersList", "RecordRefList", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorCreditItemList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditItemList"),
    :schema_element => [
      ["item", "VendorCreditItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorCreditApply,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorCreditApplyList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorCreditApplyList"),
    :schema_element => [
      ["apply", "VendorCreditApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorReturnAuthorization,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorization"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["orderStatus", "VendorReturnAuthorizationOrderStatus", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["expenseList", "VendorReturnAuthorizationExpenseList", [0, 1]],
      ["itemList", "VendorReturnAuthorizationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorReturnAuthorizationExpense,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationExpense"),
    :schema_element => [
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorReturnAuthorizationExpenseList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationExpenseList"),
    :schema_element => [
      ["expense", "VendorReturnAuthorizationExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => VendorReturnAuthorizationItem,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbersList", "RecordRefList", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorReturnAuthorizationItemList,
    :schema_type => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationItemList"),
    :schema_element => [
      ["item", "VendorReturnAuthorizationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CashRefund,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefund"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refundCheck", "SOAP::SOAPBoolean", [0, 1]],
      ["toPrint2", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["giftCert", "RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "CashRefundItemList", [0, 1]],
      ["salesTeamList", "CashRefundSalesTeamList", [0, 1]],
      ["partnersList", "CashRefundPartnersList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CashRefundItem,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefundItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPString", [0, 1]],
      ["taxRate2", "SOAP::SOAPString", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CashRefundItemList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefundItemList"),
    :schema_element => [
      ["item", "CashRefundItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CashRefundSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CashRefundSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeamList"),
    :schema_element => [
      ["salesTeam", "CashRefundSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CashRefundPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefundPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerPayment,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPayment"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["arAcct", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["pending", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "CustomerPaymentApplyList", [0, 1]],
      ["creditList", "CustomerPaymentCreditList", [0, 1]],
      ["depositList", "CustomerPaymentDepositList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerPaymentApply,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["discDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discAmt", "SOAP::SOAPDouble", [0, 1]],
      ["disc", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerPaymentApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentApplyList"),
    :schema_element => [
      ["apply", "CustomerPaymentApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerPaymentCredit,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentCredit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["creditDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["appliedTo", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerPaymentCreditList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentCreditList"),
    :schema_element => [
      ["credit", "CustomerPaymentCredit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerPaymentDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentDeposit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["depositDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["remaining", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerPaymentDepositList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentDepositList"),
    :schema_element => [
      ["deposit", "CustomerPaymentDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ReturnAuthorization,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorization"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "RevenueCommitStatus", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["orderStatus", "ReturnAuthorizationOrderStatus", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["giftCert", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "ReturnAuthorizationItemList", [0, 1]],
      ["salesTeamList", "ReturnAuthorizationSalesTeamList", [0, 1]],
      ["partnersList", "ReturnAuthorizationPartnersList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ReturnAuthorizationItem,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ReturnAuthorizationItemList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItemList"),
    :schema_element => [
      ["item", "ReturnAuthorizationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ReturnAuthorizationSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ReturnAuthorizationSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeamList"),
    :schema_element => [
      ["salesTeam", "ReturnAuthorizationSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ReturnAuthorizationPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CreditMemo,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemo"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["giftCert", "RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "CreditMemoSalesTeamList", [0, 1]],
      ["itemList", "CreditMemoItemList", [0, 1]],
      ["partnersList", "CreditMemoPartnersList", [0, 1]],
      ["applyList", "CreditMemoApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CreditMemoSalesTeam,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeam"),
    :schema_element => [
      ["employee", "RecordRef", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CreditMemoSalesTeamList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeamList"),
    :schema_element => [
      ["salesTeam", "CreditMemoSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CreditMemoItem,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoItem"),
    :schema_element => [
      ["job", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["orderLine", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
      ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
      ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
      ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeIsEstimate", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CreditMemoItemList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoItemList"),
    :schema_element => [
      ["item", "CreditMemoItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CreditMemoApply,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CreditMemoApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoApplyList"),
    :schema_element => [
      ["apply", "CreditMemoApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CreditMemoPartnersList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemoPartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerRefund,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerRefund"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["arAcct", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "CustomerRefundApplyList", [0, 1]],
      ["depositList", "CustomerRefundDepositList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerRefundApply,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerRefundApply"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerRefundApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerRefundApplyList"),
    :schema_element => [
      ["apply", "CustomerRefundApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerRefundDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerRefundDeposit"),
    :schema_element => [
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["depositDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["remaining", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerRefundDepositList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerRefundDepositList"),
    :schema_element => [
      ["customerRefundDeposit", "CustomerRefundDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomerDeposit,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerDeposit"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["salesOrder", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "CustomerDepositApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerDepositApply,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerDepositApply"),
    :schema_element => [
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerDepositApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerDepositApplyList"),
    :schema_element => [
      ["customerDepositApply", "CustomerDepositApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => DepositApplication,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "DepositApplication"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["arAcct", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["deposit", "RecordRef", [0, 1]],
      ["depDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["applyList", "DepositApplicationApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DepositApplicationApply,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "DepositApplicationApply"),
    :schema_element => [
      ["doc", "SOAP::SOAPLong", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["apply", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDate", "SOAP::SOAPDateTime", [0, 1]],
      ["job", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["refNum", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["due", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => DepositApplicationApplyList,
    :schema_type => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "DepositApplicationApplyList"),
    :schema_element => [
      ["apply", "DepositApplicationApply[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => Budget,
    :schema_type => XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "Budget"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["year", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["budgetType", "BudgetBudgetType", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["periodAmount1", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount2", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount3", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount4", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount5", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount6", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount7", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount8", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount9", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount10", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount11", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount12", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BudgetSearch,
    :schema_type => XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "BudgetSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "BudgetSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BudgetSearchAdvanced,
    :schema_type => XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "BudgetSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "BudgetSearch", [0, 1]],
      ["columns", "BudgetSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BudgetSearchRow,
    :schema_type => XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "BudgetSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "BudgetSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CheckLandedCostList,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "CheckLandedCostList"),
    :schema_element => [
      ["landedCost", "LandedCost[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => Check,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "Check"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["voidJournal", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["landedCostMethod", "LandedCostMethod", [0, 1]],
      ["expenseList", "CheckExpenseList", [0, 1]],
      ["itemList", "CheckItemList", [0, 1]],
      ["landedCostsList", "CheckLandedCostList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CheckExpense,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "CheckExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CheckExpenseList,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "CheckExpenseList"),
    :schema_element => [
      ["expense", "CheckExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CheckItem,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "CheckItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CheckItemList,
    :schema_type => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "CheckItemList"),
    :schema_element => [
      ["item", "CheckItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InventoryAdjustment,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustment"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["estimatedTotalValue", "SOAP::SOAPDouble", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["adjLocation", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["inventoryList", "InventoryAdjustmentInventoryList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InventoryAdjustmentInventory,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventory"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["currentValue", "SOAP::SOAPDouble", [0, 1]],
      ["adjustQtyBy", "SOAP::SOAPDouble", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["newQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["unitCost", "SOAP::SOAPDouble", [0, 1]],
      ["foreignCurrencyUnitCost", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryAdjustmentInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventoryList"),
    :schema_element => [
      ["inventory", "InventoryAdjustmentInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => AssemblyBuild,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "AssemblyBuild"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "AssemblyComponentList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AssemblyUnbuild,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "AssemblyUnbuild"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "AssemblyComponentList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AssemblyComponent,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "AssemblyComponent"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["componentInventoryDetail", "InventoryDetail", [0, 1]],
      ["componentNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AssemblyComponentList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "AssemblyComponentList"),
    :schema_element => [
      ["component", "AssemblyComponent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => TransferOrder,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "TransferOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "TransferOrderItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TransferOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "TransferOrderItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["commitInventory", "TransferOrderItemCommitInventory", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["expectedShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expectedReceiptDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TransferOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "TransferOrderItemList"),
    :schema_element => [
      ["item", "TransferOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InterCompanyTransferOrder,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "InterCompanyTransferOrderItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InterCompanyTransferOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrderItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
      ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["commitInventory", "TransferOrderItemCommitInventory", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InterCompanyTransferOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyTransferOrderItemList"),
    :schema_element => [
      ["item", "InterCompanyTransferOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => WorkOrder,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "WorkOrder"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["assemblyItem", "RecordRef", [0, 1]],
      ["expandAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["itemList", "WorkOrderItemList", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["salesTeamList", "SalesTeamList", [0, 1]],
      ["partnersList", "PartnersList", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => WorkOrderItem,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "WorkOrderItem"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["poVendor", "RecordRef", [0, 1]],
      ["poRate", "SOAP::SOAPDouble", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["contribution", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["commit", "WorkOrderItemItemCommitInventory", [0, 1]],
      ["createPo", "WorkOrderItemItemCreatePo", [0, 1]],
      ["createWo", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => WorkOrderItemList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "WorkOrderItemList"),
    :schema_element => [
      ["item", "WorkOrderItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SalesTeamList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "SalesTeamList"),
    :schema_element => [
      ["salesTeam", "CustomerSalesTeam[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => PartnersList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "PartnersList"),
    :schema_element => [
      ["partners", "Partners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InventoryTransfer,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryTransfer"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["inventoryList", "InventoryTransferInventoryList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InventoryTransferInventory,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryTransferInventory"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["adjustQtyBy", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["fromBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["toBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryTransferInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryTransferInventoryList"),
    :schema_element => [
      ["inventory", "InventoryTransferInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => BinTransfer,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinTransfer"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["inventoryList", "BinTransferInventoryList", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BinTransferInventory,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinTransferInventory"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["preferredBin", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["itemUnitsLabel", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["fromBins", "SOAP::SOAPString", [0, 1]],
      ["toBins", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BinTransferInventoryList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinTransferInventoryList"),
    :schema_element => [
      ["inventory", "BinTransferInventory[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => BinWorksheet,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinWorksheet"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["itemList", "BinWorksheetItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BinWorksheetItem,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinWorksheetItem"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]],
      ["itemName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["itemOnHand", "SOAP::SOAPString", [0, 1]],
      ["itemUnitsLabel", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["itemBins", "SOAP::SOAPString", [0, 1]],
      ["itemBinNumbers", "SOAP::SOAPString", [0, 1]],
      ["itemBinList", "SOAP::SOAPString", [0, 1]],
      ["itemPreferBin", "SOAP::SOAPString", [0, 1]],
      ["itemBlank", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BinWorksheetItemList,
    :schema_type => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "BinWorksheetItemList"),
    :schema_element => [
      ["item", "BinWorksheetItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => JournalEntry,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "JournalEntry"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["lineList", "JournalEntryLineList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => JournalEntryLine,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "JournalEntryLine"),
    :schema_element => [
      ["account", "RecordRef", [0, 1]],
      ["debit", "SOAP::SOAPDouble", [0, 1]],
      ["credit", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["schedule", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["scheduleNum", "RecordRef", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Acct", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JournalEntryLineList,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "JournalEntryLineList"),
    :schema_element => [
      ["line", "JournalEntryLine[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => InterCompanyJournalEntry,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntry"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lineList", "InterCompanyJournalEntryLineList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InterCompanyJournalEntryLine,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLine"),
    :schema_element => [
      ["lineSubsidiary", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["debit", "SOAP::SOAPDouble", [0, 1]],
      ["credit", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["schedule", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationSched", "RecordRef", [0, 1]],
      ["scheduleNum", "RecordRef", [0, 1]],
      ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Acct", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InterCompanyJournalEntryLineList,
    :schema_type => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLineList"),
    :schema_element => [
      ["line", "InterCompanyJournalEntryLine[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecord,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecord"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customRecordId", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["created", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModified", "SOAP::SOAPDateTime", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["recType", "RecordRef", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enablEmailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordSearch,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomRecordSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["ownerJoin", "EmployeeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CustomRecordSearch", [0, 1]],
      ["columns", "CustomRecordSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomRecordSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["ownerJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomList"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isMatrixOption", "SOAP::SOAPBoolean", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["convertToCustomRecord", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customValueList", "CustomListCustomValueList", [0, 1]],
      ["translationsList", "CustomListTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomListCustomValue,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListCustomValue"),
    :schema_element => [
      ["value", "SOAP::SOAPString", [0, 1]],
      ["abbreviation", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["valueId", "SOAP::SOAPLong", [0, 1]],
      ["valueLanguageValueList", "LanguageValueList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomListCustomValueList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListCustomValueList"),
    :schema_element => [
      ["customValue", "CustomListCustomValue[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomListTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListTranslations"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomListTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListTranslationsList"),
    :schema_element => [
      ["translations", "CustomListTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordType,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordType"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["accessType", "CustomRecordTypeAccessType", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enableMailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["tabsList", "CustomRecordTypeTabsList", [0, 1]],
      ["sublistsList", "CustomRecordTypeSublistsList", [0, 1]],
      ["formsList", "CustomRecordTypeFormsList", [0, 1]],
      ["onlineFormsList", "CustomRecordTypeOnlineFormsList", [0, 1]],
      ["permissionsList", "CustomRecordTypePermissionsList", [0, 1]],
      ["linksList", "CustomRecordTypeLinksList", [0, 1]],
      ["managersList", "CustomRecordTypeManagersList", [0, 1]],
      ["childrenList", "CustomRecordTypeChildrenList", [0, 1]],
      ["parentsList", "CustomRecordTypeParentsList", [0, 1]],
      ["translationsList", "CustomRecordTypeTranslationsList", [0, 1]],
      ["customFieldList", "CustomRecordTypeFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeFieldList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeFieldList"),
    :schema_element => [
      ["customField", "CustomRecordCustomField[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeTabs,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTabs"),
    :schema_element => [
      ["tabTitle", "SOAP::SOAPString", [0, 1]],
      ["tabParent", "RecordRef", [0, 1]],
      ["tabTitleLanguageValueList", "LanguageValueList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeTabsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTabsList"),
    :schema_element => [
      ["tabs", "CustomRecordTypeTabs[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeForms,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeForms"),
    :schema_element => [
      ["formEdit", "SOAP::SOAPString", [0, 1]],
      ["formName", "SOAP::SOAPString", [0, 1]],
      ["formPref", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeFormsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeFormsList"),
    :schema_element => [
      ["forms", "CustomRecordTypeForms[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeOnlineForms,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineForms"),
    :schema_element => [
      ["onlineFormName", "SOAP::SOAPString", [0, 1]],
      ["isOnline", "SOAP::SOAPString", [0, 1]],
      ["templateName", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeOnlineFormsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineFormsList"),
    :schema_element => [
      ["onlineForms", "CustomRecordTypeOnlineForms[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordTypePermissions,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissions"),
    :schema_element => [
      ["permittedRole", "RecordRef", [0, 1]],
      ["permittedLevel", "CustomRecordTypePermissionsPermittedLevel", [0, 1]],
      ["restriction", "CustomRecordTypePermissionsRestriction", [0, 1]],
      ["defaultForm", "RecordRef", [0, 1]],
      ["restrictForm", "SOAP::SOAPBoolean", [0, 1]],
      ["searchForm", "RecordRef", [0, 1]],
      ["searchResults", "RecordRef", [0, 1]],
      ["listView", "RecordRef", [0, 1]],
      ["listViewRestricted", "SOAP::SOAPBoolean", [0, 1]],
      ["dashboardView", "RecordRef", [0, 1]],
      ["restrictDashboardView", "SOAP::SOAPBoolean", [0, 1]],
      ["sublistView", "RecordRef", [0, 1]],
      ["restrictSublistView", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordTypePermissionsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsList"),
    :schema_element => [
      ["permissions", "CustomRecordTypePermissions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeLinks,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeLinks"),
    :schema_element => [
      ["linkCenter", "RecordRef", [0, 1]],
      ["linkSection", "RecordRef", [0, 1]],
      ["linkLabel", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeLinksList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeLinksList"),
    :schema_element => [
      ["links", "CustomRecordTypeLinks[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeManagers,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeManagers"),
    :schema_element => [
      ["managerEmp", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeManagersList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeManagersList"),
    :schema_element => [
      ["managers", "CustomRecordTypeManagers[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeChildren,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeChildren"),
    :schema_element => [
      ["childDescr", "SOAP::SOAPString", [0, 1]],
      ["childTab", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeChildrenList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeChildrenList"),
    :schema_element => [
      ["children", "CustomRecordTypeChildren[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeParents,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeParents"),
    :schema_element => [
      ["childDescr", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeParentsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeParentsList"),
    :schema_element => [
      ["parents", "CustomRecordTypeParents[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTranslations"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTranslationsList"),
    :schema_element => [
      ["translations", "CustomRecordTypeTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeSublists,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeSublists"),
    :schema_element => [
      ["recordSearch", "RecordRef", [0, 1]],
      ["recordDescr", "SOAP::SOAPString", [0, 1]],
      ["recordDescrLanguageValueList", "LanguageValueList", [0, 1]],
      ["recordTab", "RecordRef", [0, 1]],
      ["recordId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeSublistsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeSublistsList"),
    :schema_element => [
      ["sublists", "CustomRecordTypeSublists[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EntityCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "EntityCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["appliesToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProject", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToVendor", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEmployee", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherName", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToContact", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPartner", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToWebSite", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "EntityCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["appliesToStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => EntityCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "EntityCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EntityCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "EntityCustomFieldFilterList"),
    :schema_element => [
      ["filter", "EntityCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => FldFilterSelList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "FldFilterSelList"),
    :schema_element => [
      ["fldFilterSel", "RecordRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => CrmCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CrmCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["appliesToTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProjectTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPhoneCall", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCase", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCampaign", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesPerKeyword", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSolution", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToIssue", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["showIssueChanges", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "CrmCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CrmCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CrmCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CrmCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CrmCustomFieldFilterList"),
    :schema_element => [
      ["filter", "CrmCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => OtherCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "OtherCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["recType", "RecordRef", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["filterList", "OtherCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "OtherCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OtherCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "OtherCustomFieldFilterList"),
    :schema_element => [
      ["filter", "OtherCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["itemMatrix", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["appliesToInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToNonInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToService", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToKit", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToItemAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["itemSubType", "ItemCustomFieldItemSubType", [0, 1]],
      ["filterList", "ItemCustomFieldFilterList", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemCustomFieldFilterList"),
    :schema_element => [
      ["filter", "ItemCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => TransactionBodyCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["bodyPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["bodySale", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyStore", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyInventoryAdjustment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBTegata", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyAssemblyBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyCustomerPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyVendorPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBom", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "TransactionBodyCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TransactionBodyCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TransactionBodyCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilterList"),
    :schema_element => [
      ["filter", "TransactionBodyCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => TransactionColumnCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["colExpense", "SOAP::SOAPBoolean", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["colBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["colExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["colTime", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colTimeGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["colPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["colPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["colReturnForm", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreWithGroups", "SOAP::SOAPBoolean", [0, 1]],
      ["colGroupOnInvoices", "SOAP::SOAPBoolean", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "TransactionColumnCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TransactionColumnCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TransactionColumnCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilterList"),
    :schema_element => [
      ["filter", "TransactionColumnCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemOptionCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemOptionCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "ItemsList", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "ItemOptionCustomFieldFilterList", [0, 1]],
      ["colOptionLabel", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemsList"),
    :schema_element => [
      ["items", "RecordRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemOptionCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemOptionCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilterList"),
    :schema_element => [
      ["filter", "ItemOptionCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourcefilterby", "RecordRef", [0, 1]],
      ["recType", "SOAP::SOAPString", [0, 1]],
      ["roleRestrict", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "CustomRecordCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterSelList", "FldFilterSelList", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomRecordCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilterList"),
    :schema_element => [
      ["filter", "CustomRecordCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomFieldRoleAccess,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldRoleAccess"),
    :schema_element => [
      ["role", "RecordRef", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomFieldRoleAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldRoleAccessList"),
    :schema_element => [
      ["roleAccess", "CustomFieldRoleAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomFieldDepartmentAccess,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldDepartmentAccess"),
    :schema_element => [
      ["dept", "RecordRef", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomFieldDepartmentAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldDepartmentAccessList"),
    :schema_element => [
      ["deptAccess", "CustomFieldDepartmentAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomFieldSubAccess,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldSubAccess"),
    :schema_element => [
      ["sub", "RecordRef", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomFieldSubAccessList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldSubAccessList"),
    :schema_element => [
      ["subAccess", "CustomFieldSubAccess[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => LanguageValue,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "LanguageValue"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["value", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => LanguageValueList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "LanguageValueList"),
    :schema_element => [
      ["languageValue", "LanguageValue[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomFieldTranslations,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldTranslations"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["localeDescription", "SOAP::SOAPString", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomFieldTranslationsList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomFieldTranslationsList"),
    :schema_element => [
      ["translations", "CustomFieldTranslations[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemNumberCustomField,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemNumberCustomField"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["filterList", "ItemNumberCustomFieldFilterList", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["appliesToAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSerialized", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToLots", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGiftCerts", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "RecordRefList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemNumberCustomFieldFilter,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemNumberCustomFieldFilter"),
    :schema_element => [
      ["fldFilter", "RecordRef", [0, 1]],
      ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["fldFilterCompareType", "CustomizationFilterCompareType", [0, 1]],
      ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
      ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]],
      ["fldfilterNull", "SOAP::SOAPBoolean", [0, 1]],
      ["fldCompareField", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemNumberCustomFieldFilterList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemNumberCustomFieldFilterList"),
    :schema_element => [
      ["filter", "ItemNumberCustomFieldFilter[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CustomListSearch,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CustomListSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomListSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomListSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CustomListSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AppDefinition,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinition"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["packagesList", "AppDefinitionPackagesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AppDefinitionPackages,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinitionPackages"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => AppDefinitionPackagesList,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinitionPackagesList"),
    :schema_element => [
      ["packages", "AppDefinitionPackages[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => AppDefinitionSearch,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinitionSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "AppDefinitionSearchBasic", [0, 1]],
      ["appPackageJoin", "AppPackageSearchBasic", [0, 1]],
      ["creatorJoin", "EmployeeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AppDefinitionSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinitionSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "AppDefinitionSearch", [0, 1]],
      ["columns", "AppDefinitionSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AppDefinitionSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppDefinitionSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "AppDefinitionSearchRowBasic", [0, 1]],
      ["appPackageJoin", "AppPackageSearchRowBasic", [0, 1]],
      ["creatorJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AppPackage,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppPackage"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["appDefinition", "RecordRef", [0, 1]],
      ["version", "SOAP::SOAPString", [0, 1]],
      ["packageFile", "RecordRef", [0, 1]],
      ["bundle", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AppPackageSearch,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppPackageSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "AppPackageSearchBasic", [0, 1]],
      ["appDefinitionJoin", "AppDefinitionSearchBasic", [0, 1]],
      ["creatorJoin", "EmployeeSearchBasic", [0, 1]],
      ["packageFileJoin", "FileSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AppPackageSearchAdvanced,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppPackageSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "AppPackageSearch", [0, 1]],
      ["columns", "AppPackageSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AppPackageSearchRow,
    :schema_type => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "AppPackageSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "AppPackageSearchRowBasic", [0, 1]],
      ["appDefinitionJoin", "AppDefinitionSearchRowBasic", [0, 1]],
      ["creatorJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["packageFileJoin", "FileSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Employee,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "Employee"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["template", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["initials", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["billingClass", "RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["payFrequency", "EmployeePayFrequency", [0, 1]],
      ["lastPaidDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["useTimeData", "EmployeeUseTimeData", [0, 1]],
      ["usePerquest", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "RecordRef", [0, 1]],
      ["adpId", "SOAP::SOAPString", [0, 1]],
      ["directDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderApprovalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["socialSecurityNumber", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "RecordRef", [0, 1]],
      ["approver", "RecordRef", [0, 1]],
      ["approvalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["timeApprover", "RecordRef", [0, 1]],
      ["employeeType", "RecordRef", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResource", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["birthDate", "SOAP::SOAPDateTime", [0, 1]],
      ["hireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["releaseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["employeeStatus", "RecordRef", [0, 1]],
      ["jobDescription", "SOAP::SOAPString", [0, 1]],
      ["maritalStatus", "RecordRef", [0, 1]],
      ["ethnicity", "RecordRef", [0, 1]],
      ["gender", "Gender", [0, 1]],
      ["purchaseOrderApprover", "RecordRef", [0, 1]],
      ["workCalendar", "RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["concurrentWebServicesUser", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["hasOfflineAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["inheritIPRules", "SOAP::SOAPBoolean", [0, 1]],
      ["iPAddressRule", ["SOAP::SOAPString", XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "IPAddressRule")], [0, 1]],
      ["commissionPaymentPreference", "EmployeeCommissionPaymentPreference", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["subscriptionsList", "EmployeeSubscriptionsList", [0, 1]],
      ["addressbookList", "EmployeeAddressbookList", [0, 1]],
      ["rolesList", "EmployeeRolesList", [0, 1]],
      ["hrEducationList", "EmployeeHrEducationList", [0, 1]],
      ["accruedTimeList", "EmployeeAccruedTimeList", [0, 1]],
      ["directDepositList", "EmployeeDirectDepositList", [0, 1]],
      ["companyContributionList", "EmployeeCompanyContributionList", [0, 1]],
      ["earningList", "EmployeeEarningList", [0, 1]],
      ["emergencyContactList", "EmployeeEmergencyContactList", [0, 1]],
      ["deductionList", "EmployeeDeductionList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeSubscriptions,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeSubscriptions"),
    :schema_element => [
      ["subscribed", "SOAP::SOAPString", [0, 1]],
      ["subscription", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeSubscriptionsList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeSubscriptionsList"),
    :schema_element => [
      ["subscriptions", "EmployeeSubscriptions[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeAddressbook,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeAddressbook"),
    :schema_element => [
      ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["internalId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeAddressbookList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeAddressbookList"),
    :schema_element => [
      ["addressbook", "EmployeeAddressbook[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeRoles,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeRoles"),
    :schema_element => [
      ["selectedRole", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeRolesList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeRolesList"),
    :schema_element => [
      ["roles", "EmployeeRoles[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeSearch,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "EmployeeSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["departmentJoin", "DepartmentSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["locationJoin", "LocationSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["subsidiaryJoin", "SubsidiarySearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeSearchAdvanced,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "EmployeeSearch", [0, 1]],
      ["columns", "EmployeeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeSearchRow,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "EmployeeSearchRowBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchRowBasic", [0, 1]],
      ["departmentJoin", "DepartmentSearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["locationJoin", "LocationSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchRowBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchRowBasic", [0, 1]],
      ["subsidiaryJoin", "SubsidiarySearchRowBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeEmergencyContact,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeEmergencyContact"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["contact", "SOAP::SOAPString", [0, 1]],
      ["relationship", "SOAP::SOAPString", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeEmergencyContactList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeEmergencyContactList"),
    :schema_element => [
      ["employeeEmergencyContact", "EmployeeEmergencyContact[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeHrEducation,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeHrEducation"),
    :schema_element => [
      ["education", "RecordRef", [0, 1]],
      ["degree", "SOAP::SOAPString", [0, 1]],
      ["degreeDate", "SOAP::SOAPDateTime", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeHrEducationList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeHrEducationList"),
    :schema_element => [
      ["employeeHrEducation", "EmployeeHrEducation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeAccruedTime,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeAccruedTime"),
    :schema_element => [
      ["payrollItem", "RecordRef", [0, 1]],
      ["accruedHours", "SOAP::SOAPDouble", [0, 1]],
      ["accrualRate", "SOAP::SOAPDouble", [0, 1]],
      ["monetaryRate", "SOAP::SOAPDouble", [0, 1]],
      ["resetAccruedHoursAtYearEnd", "SOAP::SOAPBoolean", [0, 1]],
      ["accrualMethod", "EmployeeAccruedTimeAccrualMethod", [0, 1]],
      ["maximumAccruedHours", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeAccruedTimeList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeAccruedTimeList"),
    :schema_element => [
      ["employeeAccruedTime", "EmployeeAccruedTime[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeDeduction,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeDeduction"),
    :schema_element => [
      ["payrollItem", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["limit", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeDeductionList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeDeductionList"),
    :schema_element => [
      ["employeeDeduction", "EmployeeDeduction[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeCompanyContribution,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeCompanyContribution"),
    :schema_element => [
      ["payrollItem", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["limit", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeCompanyContributionList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeCompanyContributionList"),
    :schema_element => [
      ["employeeCompanyContribution", "EmployeeCompanyContribution[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeEarning,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeEarning"),
    :schema_element => [
      ["payrollItem", "RecordRef", [0, 1]],
      ["payRate", "SOAP::SOAPString", [0, 1]],
      ["primaryEarning", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultHours", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultEarning", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeEarningList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeEarningList"),
    :schema_element => [
      ["employeeEarning", "EmployeeEarning[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeDirectDeposit,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeDirectDeposit"),
    :schema_element => [
      ["id", "SOAP::SOAPLong", [0, 1]],
      ["netAccount", "SOAP::SOAPBoolean", [0, 1]],
      ["savingsAccount", "SOAP::SOAPBoolean", [0, 1]],
      ["accountPrenoted", "SOAP::SOAPBoolean", [0, 1]],
      ["accountStatus", "EmployeeDirectDepositAccountStatus", [0, 1]],
      ["bankName", "SOAP::SOAPString", [0, 1]],
      ["bankId", "SOAP::SOAPString", [0, 1]],
      ["bankNumber", "SOAP::SOAPString", [0, 1]],
      ["bankRoutingNumber", "SOAP::SOAPString", [0, 1]],
      ["bankAccountNumber", "SOAP::SOAPString", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["inactive", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EmployeeDirectDepositList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeDirectDepositList"),
    :schema_element => [
      ["employeeDirectDeposit", "EmployeeDirectDeposit[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SiteCategory,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["website", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["parentCategory", "RecordRef", [0, 1]],
      ["categoryListLayout", "RecordRef", [0, 1]],
      ["itemListLayout", "RecordRef", [0, 1]],
      ["relatedItemsListLayout", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["presentationItemList", "SiteCategoryPresentationItemList", [0, 1]],
      ["translationsList", "SiteCategoryTranslationList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SiteCategoryTranslation,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategoryTranslation"),
    :schema_element => [
      ["locale", "Language", [0, 1]],
      ["language", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SiteCategoryTranslationList,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategoryTranslationList"),
    :schema_element => [
      ["translation", "SiteCategoryTranslation[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SiteCategoryPresentationItemList,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategoryPresentationItemList"),
    :schema_element => [
      ["presentationItem", "PresentationItem[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => SiteCategorySearch,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategorySearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "SiteCategorySearchBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SiteCategorySearchAdvanced,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategorySearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "SiteCategorySearch", [0, 1]],
      ["columns", "SiteCategorySearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SiteCategorySearchRow,
    :schema_type => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategorySearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "SiteCategorySearchRowBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TimeBill,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "TimeBill"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["caseTaskEvent", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollItem", "RecordRef", [0, 1]],
      ["paidExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["hours", "Duration", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["timeType", "TimeBillTimeType", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["overrideRate", "SOAP::SOAPBoolean", [0, 1]],
      ["temporaryLocalJurisdiction", "RecordRef", [0, 1]],
      ["temporaryStateJurisdiction", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TimeBillSearch,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "TimeBillSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "TimeBillSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["projectTaskJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TimeBillSearchAdvanced,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "TimeBillSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "TimeBillSearch", [0, 1]],
      ["columns", "TimeBillSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TimeBillSearchRow,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "TimeBillSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "TimeBillSearchRowBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchRowBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchRowBasic", [0, 1]],
      ["customerJoin", "CustomerSearchRowBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["jobJoin", "JobSearchRowBasic", [0, 1]],
      ["projectTaskJoin", "ProjectTaskSearchRowBasic", [0, 1]],
      ["taskJoin", "TaskSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ExpenseReport,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "ExpenseReport"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["advance", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["complete", "SOAP::SOAPBoolean", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["accountingApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["useMultiCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Amt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["expenseList", "ExpenseReportExpenseList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ExpenseReportExpense,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "ExpenseReportExpense"),
    :schema_element => [
      ["line", "SOAP::SOAPLong", [0, 1]],
      ["expenseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["foreignAmount", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
      ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["receipt", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ExpenseReportExpenseList,
    :schema_type => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "ExpenseReportExpenseList"),
    :schema_element => [
      ["expense", "ExpenseReportExpense[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => Campaign,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "Campaign"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["campaignId", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["baseCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["expectedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["local", "SOAP::SOAPBoolean", [0, 1]],
      ["totalRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["roi", "SOAP::SOAPDouble", [0, 1]],
      ["profit", "SOAP::SOAPDouble", [0, 1]],
      ["costPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["convCostPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["conversions", "SOAP::SOAPLong", [0, 1]],
      ["leadsGenerated", "SOAP::SOAPLong", [0, 1]],
      ["uniqueVisitors", "SOAP::SOAPLong", [0, 1]],
      ["vertical", "RecordRef", [0, 1]],
      ["audience", "RecordRef", [0, 1]],
      ["offer", "RecordRef", [0, 1]],
      ["promotionCode", "RecordRef", [0, 1]],
      ["itemList", "RecordRefList", [0, 1]],
      ["family", "RecordRef", [0, 1]],
      ["searchEngine", "RecordRef", [0, 1]],
      ["keyword", "SOAP::SOAPString", [0, 1]],
      ["campaignEmailList", "CampaignEmailList", [0, 1]],
      ["campaignDirectMailList", "CampaignDirectMailList", [0, 1]],
      ["campaignEventList", "CampaignEventList", [0, 1]],
      ["eventResponseList", "CampaignEventResponseList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignEmail,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEmail"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "RecordRef", [0, 1]],
      ["template", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "RecordRef", [0, 1]],
      ["channel", "RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "CampaignCampaignEmailStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CampaignEmailList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEmailList"),
    :schema_element => [
      ["campaignEmail", "CampaignEmail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CampaignDirectMail,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignDirectMail"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "RecordRef", [0, 1]],
      ["template", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "RecordRef", [0, 1]],
      ["channel", "RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "CampaignCampaignDirectMailStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CampaignDirectMailList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignDirectMailList"),
    :schema_element => [
      ["campaignDirectMail", "CampaignDirectMail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CampaignEvent,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEvent"),
    :schema_element => [
      ["internalId", "SOAP::SOAPString", [0, 1]],
      ["campaignGroup", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscription", "RecordRef", [0, 1]],
      ["channel", "RecordRef", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["status", "CampaignCampaignEventStatus", [0, 1]],
      ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CampaignEventList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEventList"),
    :schema_element => [
      ["campaignEvent", "CampaignEvent[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CampaignEventResponse,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEventResponse"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]],
      ["type", "SOAP::SOAPString", [0, 1]],
      ["dateSent", "SOAP::SOAPDateTime", [0, 1]],
      ["sent", "SOAP::SOAPDouble", [0, 1]],
      ["opened", "SOAP::SOAPDouble", [0, 1]],
      ["openedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["clickedThru", "SOAP::SOAPDouble", [0, 1]],
      ["clickedThruRatio", "SOAP::SOAPDouble", [0, 1]],
      ["responded", "SOAP::SOAPLong", [0, 1]],
      ["respondedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["unsubscribed", "SOAP::SOAPLong", [0, 1]],
      ["unsubscribedRatio", "SOAP::SOAPDouble", [0, 1]],
      ["bounced", "SOAP::SOAPLong", [0, 1]],
      ["bouncedRatio", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CampaignEventResponseList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignEventResponseList"),
    :schema_element => [
      ["eventResponse", "CampaignEventResponse[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CampaignSearch,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "CampaignSearchBasic", [0, 1]],
      ["campaignRecipientJoin", "EntitySearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["promotionCodeJoin", "PromotionCodeSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CampaignSearchAdvanced,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "CampaignSearch", [0, 1]],
      ["columns", "CampaignSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignSearchRow,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "CampaignSearchRowBasic", [0, 1]],
      ["campaignRecipientJoin", "EntitySearchRowBasic", [0, 1]],
      ["fileJoin", "FileSearchRowBasic", [0, 1]],
      ["messagesJoin", "MessageSearchRowBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchRowBasic", [0, 1]],
      ["promotionCodeJoin", "PromotionCodeSearchRowBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CampaignCategory,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignCategory"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isexternal", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignAudience,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignAudience"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignFamily,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignFamily"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignSearchEngine,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSearchEngine"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignChannel,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignChannel"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["eventType", "CampaignChannelEventType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignOffer,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignOffer"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignResponse,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponse"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["campaignEvent", "RecordRef", [0, 1]],
      ["campaignResponseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["channel", "SOAP::SOAPString", [0, 1]],
      ["response", "CampaignResponseResponse", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["responsesList", "CampaignResponseResponsesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignResponseResponses,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponseResponses"),
    :schema_element => [
      ["response", "SOAP::SOAPString", [0, 1]],
      ["responseDate", "SOAP::SOAPString", [0, 1]],
      ["author", "SOAP::SOAPString", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CampaignResponseResponsesList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponseResponsesList"),
    :schema_element => [
      ["responses", "CampaignResponseResponses[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => CampaignVertical,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignVertical"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignSubscription,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSubscription"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscribedByDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["unsubscribed", "SOAP::SOAPBoolean", [0, 1]],
      ["externalName", "SOAP::SOAPString", [0, 1]],
      ["externalDescription", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PromotionCode,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCode"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["implementation", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["displayLineDiscounts", "SOAP::SOAPBoolean", [0, 1]],
      ["code", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["discount", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["discountType", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDiscountTo", "PromotionCodeApplyDiscountTo", [0, 1]],
      ["freeShipMethod", "RecordRef", [0, 1]],
      ["minimumOrderAmount", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isPublic", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyList", "PromotionCodeCurrencyList", [0, 1]],
      ["excludeItems", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "PromotionCodeItemsList", [0, 1]],
      ["partnersList", "PromotionCodePartnersList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PromotionCodePartners,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodePartners"),
    :schema_element => [
      ["partner", "RecordRef", [0, 1]],
      ["code", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PromotionCodePartnersList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodePartnersList"),
    :schema_element => [
      ["partners", "PromotionCodePartners[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => PromotionCodeItems,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeItems"),
    :schema_element => [
      ["item", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PromotionCodeItemsList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeItemsList"),
    :schema_element => [
      ["items", "PromotionCodeItems[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => PromotionCodeSearch,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "PromotionCodeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PromotionCodeSearchAdvanced,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeSearchAdvanced"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["criteria", "PromotionCodeSearch", [0, 1]],
      ["columns", "PromotionCodeSearchRow", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "savedSearchScriptId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "savedSearchId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PromotionCodeSearchRow,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "PromotionCodeSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PromotionCodeCurrency,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeCurrency"),
    :schema_element => [
      ["currency", "RecordRef", [0, 1]],
      ["minimumOrderAmount", "SOAP::SOAPDouble", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PromotionCodeCurrencyList,
    :schema_type => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeCurrencyList"),
    :schema_element => [
      ["currency", "PromotionCodeCurrency[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => ItemDemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "ItemDemandPlan"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "Record"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["year", "SOAP::SOAPLong", [0, 1]],
      ["month", "DemandPlanMonth", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["demandPlanCalendarType", "DemandPlanCalendarType", [0, 1]],
      ["demandPlanMatrix", "DemandPlanMatrix", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "DemandPlan"),
    :schema_element => [
      ["startDate", "SOAP::SOAPDateTime"],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["calculatedQuantity", "SOAP::SOAPDouble", [0, 1]],
      ["periodDemandPlanList", "PeriodDemandPlanList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => DemandPlanMatrix,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "DemandPlanMatrix"),
    :schema_element => [
      ["demandPlan", "DemandPlan[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => PeriodDemandPlanList,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "PeriodDemandPlanList"),
    :schema_element => [
      ["periodDemandPlan", "PeriodDemandPlan[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => PeriodDemandPlan,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "PeriodDemandPlan"),
    :schema_element => [
      ["quantity", "SOAP::SOAPDouble"],
      ["dayOfTheWeek", "DayOfTheWeek", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemDemandPlanSearch,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "ItemDemandPlanSearch"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
    :schema_element => [
      ["basic", "ItemDemandPlanSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["lastAlternateSourceItemJoin", "ItemSearchBasic", [0, 1]],
      ["locationJoin", "LocationSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemDemandPlanSearchRow,
    :schema_type => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "ItemDemandPlanSearchRow"),
    :schema_basetype => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRow"),
    :schema_element => [
      ["basic", "ItemDemandPlanSearchRowBasic", [0, 1]],
      ["itemJoin", "ItemSearchRowBasic", [0, 1]],
      ["lastAlternateSourceItemJoin", "ItemSearchRowBasic", [0, 1]],
      ["locationJoin", "LocationSearchRowBasic", [0, 1]],
      ["userJoin", "EmployeeSearchRowBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "RecordType")
  )

  LiteralRegistry.register(
    :class => SearchRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchRecordType")
  )

  LiteralRegistry.register(
    :class => GetAllRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "GetAllRecordType")
  )

  LiteralRegistry.register(
    :class => GetCustomizationType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "GetCustomizationType")
  )

  LiteralRegistry.register(
    :class => InitializeType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeType")
  )

  LiteralRegistry.register(
    :class => InitializeRefType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeRefType")
  )

  LiteralRegistry.register(
    :class => InitializeAuxRefType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "InitializeAuxRefType")
  )

  LiteralRegistry.register(
    :class => DeletedRecordType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "DeletedRecordType")
  )

  LiteralRegistry.register(
    :class => AsyncStatusType,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "AsyncStatusType")
  )

  LiteralRegistry.register(
    :class => SearchStringFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchStringFieldOperator")
  )

  LiteralRegistry.register(
    :class => SearchLongFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchLongFieldOperator")
  )

  LiteralRegistry.register(
    :class => SearchTextNumberFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchTextNumberFieldOperator")
  )

  LiteralRegistry.register(
    :class => SearchDoubleFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDoubleFieldOperator")
  )

  LiteralRegistry.register(
    :class => SearchDateFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDateFieldOperator")
  )

  LiteralRegistry.register(
    :class => SearchEnumMultiSelectFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectFieldOperator")
  )

  LiteralRegistry.register(
    :class => SearchMultiSelectFieldOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectFieldOperator")
  )

  LiteralRegistry.register(
    :class => SearchDate,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "SearchDate")
  )

  LiteralRegistry.register(
    :class => DurationUnit,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "DurationUnit")
  )

  LiteralRegistry.register(
    :class => CalendarEventAttendeeResponse,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "CalendarEventAttendeeResponse")
  )

  LiteralRegistry.register(
    :class => GetSelectValueFilterOperator,
    :schema_type => XSD::QName.new(NsTypesCore_2012_1PlatformWebservicesNetsuiteCom, "GetSelectValueFilterOperator")
  )

  LiteralRegistry.register(
    :class => StatusDetailType,
    :schema_type => XSD::QName.new(NsTypesFaults_2012_1PlatformWebservicesNetsuiteCom, "StatusDetailType")
  )

  LiteralRegistry.register(
    :class => StatusDetailCodeType,
    :schema_type => XSD::QName.new(NsTypesFaults_2012_1PlatformWebservicesNetsuiteCom, "StatusDetailCodeType")
  )

  LiteralRegistry.register(
    :class => FaultCodeType,
    :schema_type => XSD::QName.new(NsTypesFaults_2012_1PlatformWebservicesNetsuiteCom, "FaultCodeType")
  )

  LiteralRegistry.register(
    :class => Country,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "Country")
  )

  LiteralRegistry.register(
    :class => Language,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "Language")
  )

  LiteralRegistry.register(
    :class => AvsMatchCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "AvsMatchCode")
  )

  LiteralRegistry.register(
    :class => CscMatchCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "CscMatchCode")
  )

  LiteralRegistry.register(
    :class => CostingMethod,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "CostingMethod")
  )

  LiteralRegistry.register(
    :class => VsoeSopGroup,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "VsoeSopGroup")
  )

  LiteralRegistry.register(
    :class => VsoeDeferral,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "VsoeDeferral")
  )

  LiteralRegistry.register(
    :class => VsoePermitDiscount,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "VsoePermitDiscount")
  )

  LiteralRegistry.register(
    :class => RevenueStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "RevenueStatus")
  )

  LiteralRegistry.register(
    :class => RevenueCommitStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "RevenueCommitStatus")
  )

  LiteralRegistry.register(
    :class => PostingPeriodDate,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "PostingPeriodDate")
  )

  LiteralRegistry.register(
    :class => PermissionLevel,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "PermissionLevel")
  )

  LiteralRegistry.register(
    :class => Source,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "Source")
  )

  LiteralRegistry.register(
    :class => GlobalSubscriptionStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "GlobalSubscriptionStatus")
  )

  LiteralRegistry.register(
    :class => ItemCostEstimateType,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "ItemCostEstimateType")
  )

  LiteralRegistry.register(
    :class => PresentationItemType,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "PresentationItemType")
  )

  LiteralRegistry.register(
    :class => LandedCostSource,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "LandedCostSource")
  )

  LiteralRegistry.register(
    :class => LandedCostMethod,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "LandedCostMethod")
  )

  LiteralRegistry.register(
    :class => SitemapPriority,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "SitemapPriority")
  )

  LiteralRegistry.register(
    :class => TimeItemTimeType,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "TimeItemTimeType")
  )

  LiteralRegistry.register(
    :class => PermissionCode,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "PermissionCode")
  )

  LiteralRegistry.register(
    :class => IntercoStatus,
    :schema_type => XSD::QName.new(NsTypesCommon_2012_1PlatformWebservicesNetsuiteCom, "IntercoStatus")
  )

  LiteralRegistry.register(
    :class => CalendarEventAccessLevel,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAccessLevel")
  )

  LiteralRegistry.register(
    :class => CalendarEventAttendeeAttendance,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeAttendance")
  )

  LiteralRegistry.register(
    :class => CalendarEventFrequency,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventFrequency")
  )

  LiteralRegistry.register(
    :class => CalendarEventDow,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventDow")
  )

  LiteralRegistry.register(
    :class => CalendarEventDowim,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventDowim")
  )

  LiteralRegistry.register(
    :class => CalendarEventReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderMinutes")
  )

  LiteralRegistry.register(
    :class => CalendarEventReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderType")
  )

  LiteralRegistry.register(
    :class => CalendarEventStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEventStatus")
  )

  LiteralRegistry.register(
    :class => TaskPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskPriority")
  )

  LiteralRegistry.register(
    :class => TaskReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskReminderMinutes")
  )

  LiteralRegistry.register(
    :class => TaskReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskReminderType")
  )

  LiteralRegistry.register(
    :class => TaskStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "TaskStatus")
  )

  LiteralRegistry.register(
    :class => PhoneCallPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallPriority")
  )

  LiteralRegistry.register(
    :class => PhoneCallReminderMinutes,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderMinutes")
  )

  LiteralRegistry.register(
    :class => PhoneCallReminderType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderType")
  )

  LiteralRegistry.register(
    :class => PhoneCallStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCallStatus")
  )

  LiteralRegistry.register(
    :class => ProjectTaskPriority,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskPriority")
  )

  LiteralRegistry.register(
    :class => ProjectTaskStatus,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskStatus")
  )

  LiteralRegistry.register(
    :class => ProjectTaskConstraintType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskConstraintType")
  )

  LiteralRegistry.register(
    :class => ProjectTaskPredecessorPredecessorType,
    :schema_type => XSD::QName.new(NsTypesScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "ProjectTaskPredecessorPredecessorType")
  )

  LiteralRegistry.register(
    :class => NoteDirection,
    :schema_type => XSD::QName.new(NsTypesCommunication_2012_1GeneralWebservicesNetsuiteCom, "NoteDirection")
  )

  LiteralRegistry.register(
    :class => MessageMessageType,
    :schema_type => XSD::QName.new(NsTypesCommunication_2012_1GeneralWebservicesNetsuiteCom, "MessageMessageType")
  )

  LiteralRegistry.register(
    :class => MediaType,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "MediaType")
  )

  LiteralRegistry.register(
    :class => FileAttachFrom,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileAttachFrom")
  )

  LiteralRegistry.register(
    :class => FileEncoding,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "FileEncoding")
  )

  LiteralRegistry.register(
    :class => TextFileEncoding,
    :schema_type => XSD::QName.new(NsTypesFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "TextFileEncoding")
  )

  LiteralRegistry.register(
    :class => EntityType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityType")
  )

  LiteralRegistry.register(
    :class => CustomerStatusStage,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStatusStage")
  )

  LiteralRegistry.register(
    :class => ContactType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "ContactType")
  )

  LiteralRegistry.register(
    :class => CustomerStage,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStage")
  )

  LiteralRegistry.register(
    :class => CustomerCreditHoldOverride,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerCreditHoldOverride")
  )

  LiteralRegistry.register(
    :class => CustomerMonthlyClosing,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerMonthlyClosing")
  )

  LiteralRegistry.register(
    :class => EmailPreference,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EmailPreference")
  )

  LiteralRegistry.register(
    :class => EntityGroupType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupType")
  )

  LiteralRegistry.register(
    :class => EntityGroupDailyTime,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupDailyTime")
  )

  LiteralRegistry.register(
    :class => EntityGroupDefView,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupDefView")
  )

  LiteralRegistry.register(
    :class => EntityGroupPeriodSize,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroupPeriodSize")
  )

  LiteralRegistry.register(
    :class => TaxFractionUnit,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "TaxFractionUnit")
  )

  LiteralRegistry.register(
    :class => TaxRounding,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "TaxRounding")
  )

  LiteralRegistry.register(
    :class => JobBillingType,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "JobBillingType")
  )

  LiteralRegistry.register(
    :class => PartnerOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "PartnerOtherRelationships")
  )

  LiteralRegistry.register(
    :class => CustomerOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerOtherRelationships")
  )

  LiteralRegistry.register(
    :class => VendorOtherRelationships,
    :schema_type => XSD::QName.new(NsTypesRelationships_2012_1ListsWebservicesNetsuiteCom, "VendorOtherRelationships")
  )

  LiteralRegistry.register(
    :class => SupportCaseStatusStage,
    :schema_type => XSD::QName.new(NsTypesSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseStatusStage")
  )

  LiteralRegistry.register(
    :class => SupportCaseStage,
    :schema_type => XSD::QName.new(NsTypesSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseStage")
  )

  LiteralRegistry.register(
    :class => SolutionStatus,
    :schema_type => XSD::QName.new(NsTypesSupport_2012_1ListsWebservicesNetsuiteCom, "SolutionStatus")
  )

  LiteralRegistry.register(
    :class => IssueEventStatus,
    :schema_type => XSD::QName.new(NsTypesSupport_2012_1ListsWebservicesNetsuiteCom, "IssueEventStatus")
  )

  LiteralRegistry.register(
    :class => IssueTrackCode,
    :schema_type => XSD::QName.new(NsTypesSupport_2012_1ListsWebservicesNetsuiteCom, "IssueTrackCode")
  )

  LiteralRegistry.register(
    :class => CurrencyLocale,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "CurrencyLocale")
  )

  LiteralRegistry.register(
    :class => AccountType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "AccountType")
  )

  LiteralRegistry.register(
    :class => ItemCostingMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemCostingMethod")
  )

  LiteralRegistry.register(
    :class => ItemProductFeed,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemProductFeed")
  )

  LiteralRegistry.register(
    :class => ItemType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemType")
  )

  LiteralRegistry.register(
    :class => ItemWeightUnit,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemWeightUnit")
  )

  LiteralRegistry.register(
    :class => ItemPreferenceCriterion,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemPreferenceCriterion")
  )

  LiteralRegistry.register(
    :class => ItemOverallQuantityPricingType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemOverallQuantityPricingType")
  )

  LiteralRegistry.register(
    :class => ScheduleBCode,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ScheduleBCode")
  )

  LiteralRegistry.register(
    :class => ItemSubType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSubType")
  )

  LiteralRegistry.register(
    :class => CurrencyCurrencyPrecision,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "CurrencyCurrencyPrecision")
  )

  LiteralRegistry.register(
    :class => CurrencyFxRateUpdateTimezone,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "CurrencyFxRateUpdateTimezone")
  )

  LiteralRegistry.register(
    :class => SalesTaxItemAvailable,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesTaxItemAvailable")
  )

  LiteralRegistry.register(
    :class => ItemEbayAuctionDuration,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemEbayAuctionDuration")
  )

  LiteralRegistry.register(
    :class => ItemOutOfStockBehavior,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemOutOfStockBehavior")
  )

  LiteralRegistry.register(
    :class => ItemEbayRelistingOption,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemEbayRelistingOption")
  )

  LiteralRegistry.register(
    :class => ConsolidatedRate,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ConsolidatedRate")
  )

  LiteralRegistry.register(
    :class => CashFlowRateType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "CashFlowRateType")
  )

  LiteralRegistry.register(
    :class => GeneralRateType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "GeneralRateType")
  )

  LiteralRegistry.register(
    :class => ItemMatrixType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemMatrixType")
  )

  LiteralRegistry.register(
    :class => ItemDemandSource,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemDemandSource")
  )

  LiteralRegistry.register(
    :class => ItemSupplyLotSizingMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSupplyLotSizingMethod")
  )

  LiteralRegistry.register(
    :class => ItemSupplyType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSupplyType")
  )

  LiteralRegistry.register(
    :class => ItemSupplyReplenishmentMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemSupplyReplenishmentMethod")
  )

  LiteralRegistry.register(
    :class => RevRecScheduleRecogIntervalSrc,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleRecogIntervalSrc")
  )

  LiteralRegistry.register(
    :class => RevRecScheduleRecurrenceType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleRecurrenceType")
  )

  LiteralRegistry.register(
    :class => RevRecScheduleAmortizationType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "RevRecScheduleAmortizationType")
  )

  LiteralRegistry.register(
    :class => CostCategoryItemCostType,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "CostCategoryItemCostType")
  )

  LiteralRegistry.register(
    :class => ItemAtpMethod,
    :schema_type => XSD::QName.new(NsTypesAccounting_2012_1ListsWebservicesNetsuiteCom, "ItemAtpMethod")
  )

  LiteralRegistry.register(
    :class => SalesOrderItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemCommitInventory")
  )

  LiteralRegistry.register(
    :class => SalesOrderItemCreatePo,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemCreatePo")
  )

  LiteralRegistry.register(
    :class => SalesOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrderOrderStatus")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentExportTypeUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentExportTypeUps")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentLicenseExceptionUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentLicenseExceptionUps")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentMethodOfTransportUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentMethodOfTransportUps")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentThirdPartyTypeUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeUps")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageUpsCodMethodUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsCodMethodUps")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageUpsDeliveryConfUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsDeliveryConfUps")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageUpsPackagingUps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsPackagingUps")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageUspsDeliveryConfUsps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsDeliveryConfUsps")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageUspsPackagingUsps,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUspsPackagingUsps")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentB13AFilingOptionFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentB13AFilingOptionFedEx")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentHomeDeliveryTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentHomeDeliveryTypeFedEx")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentThirdPartyTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeFedEx")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageFedExAdmPackageTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExAdmPackageTypeFedEx")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageFedExCodMethodFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodMethodFedEx")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageFedExDeliveryConfFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExDeliveryConfFedEx")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageFedExPackagingFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExPackagingFedEx")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageFedExSignatureOptionsFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExSignatureOptionsFedEx")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentTermsOfSaleFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentTermsOfSaleFedEx")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentShipStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentShipStatus")
  )

  LiteralRegistry.register(
    :class => OpportunityStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "OpportunityStatus")
  )

  LiteralRegistry.register(
    :class => TransactionType,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionType")
  )

  LiteralRegistry.register(
    :class => TransactionStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionStatus")
  )

  LiteralRegistry.register(
    :class => TransactionPaymentEventResult,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventResult")
  )

  LiteralRegistry.register(
    :class => TransactionPaymentEventType,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventType")
  )

  LiteralRegistry.register(
    :class => TransactionPaymentEventHoldReason,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionPaymentEventHoldReason")
  )

  LiteralRegistry.register(
    :class => ItemFulfillmentPackageFedExCodFreightTypeFedEx,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodFreightTypeFedEx")
  )

  LiteralRegistry.register(
    :class => TransactionLinkType,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionLinkType")
  )

  LiteralRegistry.register(
    :class => ForecastType,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "ForecastType")
  )

  LiteralRegistry.register(
    :class => TransactionLineType,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionLineType")
  )

  LiteralRegistry.register(
    :class => TransactionApprovalStatus,
    :schema_type => XSD::QName.new(NsTypesSales_2012_1TransactionsWebservicesNetsuiteCom, "TransactionApprovalStatus")
  )

  LiteralRegistry.register(
    :class => PurchaseOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderOrderStatus")
  )

  LiteralRegistry.register(
    :class => TransactionBillVarianceStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2012_1TransactionsWebservicesNetsuiteCom, "TransactionBillVarianceStatus")
  )

  LiteralRegistry.register(
    :class => VendorReturnAuthorizationOrderStatus,
    :schema_type => XSD::QName.new(NsTypesPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorReturnAuthorizationOrderStatus")
  )

  LiteralRegistry.register(
    :class => ReturnAuthorizationOrderStatus,
    :schema_type => XSD::QName.new(NsTypesCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationOrderStatus")
  )

  LiteralRegistry.register(
    :class => BudgetBudgetType,
    :schema_type => XSD::QName.new(NsTypesFinancial_2012_1TransactionsWebservicesNetsuiteCom, "BudgetBudgetType")
  )

  LiteralRegistry.register(
    :class => TransferOrderItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesInventory_2012_1TransactionsWebservicesNetsuiteCom, "TransferOrderItemCommitInventory")
  )

  LiteralRegistry.register(
    :class => TransferOrderOrderStatus,
    :schema_type => XSD::QName.new(NsTypesInventory_2012_1TransactionsWebservicesNetsuiteCom, "TransferOrderOrderStatus")
  )

  LiteralRegistry.register(
    :class => WorkOrderItemItemCreatePo,
    :schema_type => XSD::QName.new(NsTypesInventory_2012_1TransactionsWebservicesNetsuiteCom, "WorkOrderItemItemCreatePo")
  )

  LiteralRegistry.register(
    :class => WorkOrderItemItemCommitInventory,
    :schema_type => XSD::QName.new(NsTypesInventory_2012_1TransactionsWebservicesNetsuiteCom, "WorkOrderItemItemCommitInventory")
  )

  LiteralRegistry.register(
    :class => CustomizationFieldType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationFieldType")
  )

  LiteralRegistry.register(
    :class => CustomizationDynamicDefault,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationDynamicDefault")
  )

  LiteralRegistry.register(
    :class => CustomizationDisplayType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationDisplayType")
  )

  LiteralRegistry.register(
    :class => CustomizationFilterCompareType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationFilterCompareType")
  )

  LiteralRegistry.register(
    :class => CustomRecordTypePermissionsPermittedLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsPermittedLevel")
  )

  LiteralRegistry.register(
    :class => CustomRecordTypePermissionsRestriction,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsRestriction")
  )

  LiteralRegistry.register(
    :class => ItemCustomFieldItemSubType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemCustomFieldItemSubType")
  )

  LiteralRegistry.register(
    :class => CustomizationAccessLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationAccessLevel")
  )

  LiteralRegistry.register(
    :class => CustomizationSearchLevel,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomizationSearchLevel")
  )

  LiteralRegistry.register(
    :class => CustomRecordTypeAccessType,
    :schema_type => XSD::QName.new(NsTypesCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordTypeAccessType")
  )

  LiteralRegistry.register(
    :class => EmployeePayFrequency,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeePayFrequency")
  )

  LiteralRegistry.register(
    :class => EmployeeUseTimeData,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeUseTimeData")
  )

  LiteralRegistry.register(
    :class => EmployeeCommissionPaymentPreference,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeCommissionPaymentPreference")
  )

  LiteralRegistry.register(
    :class => Gender,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "Gender")
  )

  LiteralRegistry.register(
    :class => EmployeeAccruedTimeAccrualMethod,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeAccruedTimeAccrualMethod")
  )

  LiteralRegistry.register(
    :class => EmployeeDirectDepositAccountStatus,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1ListsWebservicesNetsuiteCom, "EmployeeDirectDepositAccountStatus")
  )

  LiteralRegistry.register(
    :class => TimeBillTimeType,
    :schema_type => XSD::QName.new(NsTypesEmployees_2012_1TransactionsWebservicesNetsuiteCom, "TimeBillTimeType")
  )

  LiteralRegistry.register(
    :class => CampaignCampaignDirectMailStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignCampaignDirectMailStatus")
  )

  LiteralRegistry.register(
    :class => CampaignCampaignEmailStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignCampaignEmailStatus")
  )

  LiteralRegistry.register(
    :class => CampaignCampaignEventStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignCampaignEventStatus")
  )

  LiteralRegistry.register(
    :class => CampaignChannelEventType,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignChannelEventType")
  )

  LiteralRegistry.register(
    :class => CampaignResponseResponse,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponseResponse")
  )

  LiteralRegistry.register(
    :class => CampaignCampaignEventType,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignCampaignEventType")
  )

  LiteralRegistry.register(
    :class => CampaignResponse_,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponse")
  )

  LiteralRegistry.register(
    :class => CampaignStatus,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignStatus")
  )

  LiteralRegistry.register(
    :class => PromotionCodeApplyDiscountTo,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "PromotionCodeApplyDiscountTo")
  )

  LiteralRegistry.register(
    :class => CampaignResponseCategory,
    :schema_type => XSD::QName.new(NsTypesMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponseCategory")
  )

  LiteralRegistry.register(
    :class => DemandPlanCalendarType,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "DemandPlanCalendarType")
  )

  LiteralRegistry.register(
    :class => DemandPlanMonth,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "DemandPlanMonth")
  )

  LiteralRegistry.register(
    :class => DayOfTheWeek,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "DayOfTheWeek")
  )

  LiteralRegistry.register(
    :class => ItemDemandPlanProjectionMethod,
    :schema_type => XSD::QName.new(NsTypesDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "ItemDemandPlanProjectionMethod")
  )

  LiteralRegistry.register(
    :class => Status,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "status"),
    :schema_element => [
      ["statusDetail", "StatusDetail[]", [0, nil]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "isSuccess") => "SOAP::SOAPBoolean"
    }
  )

  LiteralRegistry.register(
    :class => WsRoleList,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "wsRoleList"),
    :schema_element => [
      ["wsRole", "WsRole[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Record,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "record"),
    :schema_element => [
      ["nullFieldList", "NullField", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchRecord,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchRecord"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => SearchResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["searchId", "SOAP::SOAPString", [0, 1]],
      ["recordList", "RecordList", [0, 1]],
      ["searchRowList", "SearchRowList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncStatusResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "asyncStatusResult"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["status", "AsyncStatusType"],
      ["percentCompleted", "SOAP::SOAPDouble"],
      ["estRemainingDuration", "SOAP::SOAPDouble"]
    ]
  )

  LiteralRegistry.register(
    :class => GetAllResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getAllResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordList", "RecordList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetSavedSearchResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getSavedSearchResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["recordRefList", "RecordRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetCustomizationIdResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getCustomizationIdResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["customizationRefList", "CustomizationRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetSelectValueResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getSelectValueResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["baseRefList", "BaseRefList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RecordList,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "recordList"),
    :schema_element => [
      ["record", "Record[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchRowList,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchRowList"),
    :schema_element => [
      ["searchRow", "SearchRow[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => RecordRefList,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "recordRefList"),
    :schema_element => [
      ["recordRef", "RecordRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => BaseRef,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "baseRef"),
    :schema_element => [
      ["name", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => BaseRefList,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "baseRefList"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomizationRefList,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "customizationRefList"),
    :schema_element => [
      ["customizationRef", "CustomizationRef[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetItemAvailabilityResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult"),
    :schema_element => [
      ["status", "Status"],
      ["itemAvailabilityList", "ItemAvailabilityList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetBudgetExchangeRateResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getBudgetExchangeRateResult"),
    :schema_element => [
      ["status", "Status"],
      ["budgetExchangeRateList", "BudgetExchangeRateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetConsolidatedExchangeRateResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRateResult"),
    :schema_element => [
      ["status", "Status"],
      ["consolidatedExchangeRateList", "ConsolidatedExchangeRateList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetPostingTransactionSummaryResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getPostingTransactionSummaryResult"),
    :schema_element => [
      ["status", "Status"],
      ["totalRecords", "SOAP::SOAPInt", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]],
      ["totalPages", "SOAP::SOAPInt", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt", [0, 1]],
      ["postingTransactionSummaryList", "PostingTransactionSummaryList", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetServerTimeResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getServerTimeResult"),
    :schema_element => [
      ["status", "Status"],
      ["serverTime", "SOAP::SOAPDateTime"]
    ]
  )

  LiteralRegistry.register(
    :class => DeletedRecordList,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "deletedRecordList"),
    :schema_element => [
      ["deletedRecord", "DeletedRecord[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetDeletedResult,
    :schema_name => XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getDeletedResult"),
    :schema_element => [
      ["status", "Status"],
      ["deletedRecordList", "DeletedRecordList"]
    ]
  )

  LiteralRegistry.register(
    :class => InsufficientPermissionFault,
    :schema_name => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "insufficientPermissionFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => InvalidAccountFault,
    :schema_name => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "invalidAccountFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => InvalidCredentialsFault,
    :schema_name => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "invalidCredentialsFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => InvalidSessionFault,
    :schema_name => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "invalidSessionFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => ExceededRequestLimitFault,
    :schema_name => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "exceededRequestLimitFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => ExceededUsageLimitFault,
    :schema_name => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "exceededUsageLimitFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => ExceededRecordCountFault,
    :schema_name => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "exceededRecordCountFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => ExceededRequestSizeFault,
    :schema_name => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "exceededRequestSizeFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => InvalidVersionFault,
    :schema_name => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "invalidVersionFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncFault,
    :schema_name => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "asyncFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => UnexpectedErrorFault,
    :schema_name => XSD::QName.new(NsFaults_2012_1PlatformWebservicesNetsuiteCom, "unexpectedErrorFault"),
    :schema_element => [
      ["code", "FaultCodeType"],
      ["message", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => ApplicationInfo,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "applicationInfo"),
    :schema_element => [
      ["applicationId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerInfo,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "partnerInfo"),
    :schema_element => [
      ["partnerId", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => DocumentInfo,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "documentInfo"),
    :schema_element => [
      ["nsId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => Preferences,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "preferences"),
    :schema_element => [
      ["warningAsError", "SOAP::SOAPBoolean", [0, 1]],
      ["disableMandatoryCustomFieldValidation", "SOAP::SOAPBoolean", [0, 1]],
      ["disableSystemNotesForCustomFields", "SOAP::SOAPBoolean", [0, 1]],
      ["ignoreReadOnlyFields", "SOAP::SOAPBoolean", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchPreferences,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "searchPreferences"),
    :schema_element => [
      ["bodyFieldsOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["returnSearchColumns", "SOAP::SOAPBoolean", [0, 1]],
      ["pageSize", "SOAP::SOAPInt", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Passport,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "passport"),
    :schema_element => [
      ["email", "SOAP::SOAPString"],
      ["password", "SOAP::SOAPString"],
      ["account", "SOAP::SOAPString"],
      ["role", "RecordRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SessionResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "sessionResponse"),
    :schema_element => [
      ["status", ["Status", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "status")]],
      ["userId", "RecordRef", [0, 1]],
      ["wsRoleList", ["WsRoleList", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "wsRoleList")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => WriteResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "writeResponse"),
    :schema_element => [
      ["status", ["Status", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "status")]],
      ["baseRef", "BaseRef", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ReadResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "readResponse"),
    :schema_element => [
      ["status", ["Status", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "status")]],
      ["record", "Record", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => WriteResponseList,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "writeResponseList"),
    :schema_element => [
      ["writeResponse", "WriteResponse[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ReadResponseList,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "readResponseList"),
    :schema_element => [
      ["readResponse", "ReadResponse[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => LoginResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "loginResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => SsoLoginResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ssoLoginResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => MapSsoResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "mapSsoResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => ChangePasswordOrEmailResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "changePasswordOrEmailResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => LogoutResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "logoutResponse"),
    :schema_element => [
      ["sessionResponse", "SessionResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => AddResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "addResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => AddListResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "addListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "updateResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateListResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "updateListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => UpsertResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "upsertResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => UpsertListResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "upsertListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => DeleteResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "deleteResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => DeleteListResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "deleteListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => SearchResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "searchResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchMoreResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "searchMoreResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchMoreWithIdResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "searchMoreWithIdResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => SearchNextResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "searchNextResponse"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getResponse"),
    :schema_element => [
      ["readResponse", "ReadResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => GetListResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getListResponse"),
    :schema_element => [
      ["readResponseList", "ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => GetAllResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getAllResponse"),
    :schema_element => [
      ["getAllResult", ["GetAllResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getAllResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetSavedSearchResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getSavedSearchResponse"),
    :schema_element => [
      ["getSavedSearchResult", ["GetSavedSearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getSavedSearchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetCustomizationIdResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getCustomizationIdResponse"),
    :schema_element => [
      ["getCustomizationIdResult", ["GetCustomizationIdResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getCustomizationIdResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => InitializeResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "initializeResponse"),
    :schema_element => [
      ["readResponse", "ReadResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => InitializeListResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "initializeListResponse"),
    :schema_element => [
      ["readResponseList", "ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => GetSelectValueResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getSelectValueResponse"),
    :schema_element => [
      ["getSelectValueResult", ["GetSelectValueResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getSelectValueResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetItemAvailabilityResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getItemAvailabilityResponse"),
    :schema_element => [
      ["getItemAvailabilityResult", ["GetItemAvailabilityResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetBudgetExchangeRateResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getBudgetExchangeRateResponse"),
    :schema_element => [
      ["getBudgetExchangeRateResult", ["GetBudgetExchangeRateResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getBudgetExchangeRateResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetConsolidatedExchangeRateResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRateResponse"),
    :schema_element => [
      ["getConsolidatedExchangeRateResult", ["GetConsolidatedExchangeRateResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRateResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetPostingTransactionSummaryResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getPostingTransactionSummaryResponse"),
    :schema_element => [
      ["getPostingTransactionSummaryResult", ["GetPostingTransactionSummaryResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getPostingTransactionSummaryResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetServerTimeResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getServerTimeResponse"),
    :schema_element => [
      ["getServerTimeResult", ["GetServerTimeResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getServerTimeResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => AttachResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "attachResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => DetachResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "detachResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateInviteeStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "updateInviteeStatusResponse"),
    :schema_element => [
      ["writeResponse", "WriteResponse"]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateInviteeStatusListResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "updateInviteeStatusListResponse"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncAddListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["AsyncStatusResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncUpdateListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["AsyncStatusResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncUpsertListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["AsyncStatusResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncDeleteListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["AsyncStatusResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncGetListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["AsyncStatusResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncInitializeListResponse"),
    :schema_element => [
      ["asyncStatusResult", ["AsyncStatusResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncSearchResponse"),
    :schema_element => [
      ["asyncStatusResult", ["AsyncStatusResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncStatusResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "checkAsyncStatusResponse"),
    :schema_element => [
      ["asyncStatusResult", ["AsyncStatusResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAsyncResultResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getAsyncResultResponse"),
    :schema_element => [
      ["asyncResult", "AsyncResult"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncResult,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncResult"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => AsyncAddListResult,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncAddListResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncUpdateListResult,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncUpdateListResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncUpsertListResult,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncUpsertListResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncDeleteListResult,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncDeleteListResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncGetListResult,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncGetListResult"),
    :schema_element => [
      ["readResponseList", "ReadResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncInitializeListResult,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncInitializeListResult"),
    :schema_element => [
      ["writeResponseList", "WriteResponseList"]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncSearchResult,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncSearchResult"),
    :schema_element => [
      ["searchResult", ["SearchResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "searchResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => GetDeletedResponse,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getDeletedResponse"),
    :schema_element => [
      ["getDeletedResult", ["GetDeletedResult", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "getDeletedResult")]]
    ]
  )

  LiteralRegistry.register(
    :class => LoginRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "login"),
    :schema_element => [
      ["passport", "Passport"]
    ]
  )

  LiteralRegistry.register(
    :class => SsoLoginRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "ssoLogin"),
    :schema_element => [
      ["ssoPassport", "SsoPassport"]
    ]
  )

  LiteralRegistry.register(
    :class => MapSsoRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "mapSso"),
    :schema_element => [
      ["ssoCredentials", "SsoCredentials"]
    ]
  )

  LiteralRegistry.register(
    :class => ChangePasswordOrEmailRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "changePasswordOrEmail"),
    :schema_element => [
      ["changePasswordOrEmailCredentials", "ChangePasswordOrEmailCredentials"]
    ]
  )

  LiteralRegistry.register(
    :class => LogoutRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "logout"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => AddRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "add"),
    :schema_element => [
      ["record", "Record"]
    ]
  )

  LiteralRegistry.register(
    :class => DeleteRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "delete"),
    :schema_element => [
      ["baseRef", "BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => SearchRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "search"),
    :schema_element => [
      ["searchRecord", "SearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => SearchMoreRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "searchMore"),
    :schema_element => [
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => SearchMoreWithIdRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "searchMoreWithId"),
    :schema_element => [
      ["searchId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => SearchNextRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "searchNext"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => UpdateRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "update"),
    :schema_element => [
      ["record", "Record"]
    ]
  )

  LiteralRegistry.register(
    :class => UpsertRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "upsert"),
    :schema_element => [
      ["record", "Record"]
    ]
  )

  LiteralRegistry.register(
    :class => AddListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "addList"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => DeleteListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "deleteList"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "updateList"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => UpsertListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "upsertList"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "get"),
    :schema_element => [
      ["baseRef", "BaseRef"]
    ]
  )

  LiteralRegistry.register(
    :class => GetListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getList"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAllRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getAll"),
    :schema_element => [
      ["record", "GetAllRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => GetSavedSearchRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getSavedSearch"),
    :schema_element => [
      ["record", "GetSavedSearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => GetCustomizationIdRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getCustomizationId"),
    :schema_element => [
      ["customizationType", "CustomizationType"],
      ["includeInactives", "SOAP::SOAPBoolean"]
    ]
  )

  LiteralRegistry.register(
    :class => InitializeRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "initialize"),
    :schema_element => [
      ["initializeRecord", "InitializeRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => InitializeListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "initializeList"),
    :schema_element => [
      ["initializeRecord", "InitializeRecord[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => GetSelectValueRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getSelectValue"),
    :schema_element => [
      ["fieldDescription", "GetSelectValueFieldDescription"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => GetItemAvailabilityRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getItemAvailability"),
    :schema_element => [
      ["itemAvailabilityFilter", "ItemAvailabilityFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => GetBudgetExchangeRateRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getBudgetExchangeRate"),
    :schema_element => [
      ["budgetExchangeRateFilter", "BudgetExchangeRateFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => GetConsolidatedExchangeRateRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getConsolidatedExchangeRate"),
    :schema_element => [
      ["consolidatedExchangeRateFilter", "ConsolidatedExchangeRateFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => GetPostingTransactionSummaryRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getPostingTransactionSummary"),
    :schema_element => [
      ["fields", "PostingTransactionSummaryField"],
      ["filters", "PostingTransactionSummaryFilter", [0, 1]],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => GetServerTimeRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getServerTime"),
    :schema_element => []
  )

  LiteralRegistry.register(
    :class => AttachRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "attach"),
    :schema_element => [
      ["attachReference", "AttachReference"]
    ]
  )

  LiteralRegistry.register(
    :class => DetachRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "detach"),
    :schema_element => [
      ["detachReference", "DetachReference"]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateInviteeStatusRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "updateInviteeStatus"),
    :schema_element => [
      ["updateInviteeStatusReference", "UpdateInviteeStatusReference"]
    ]
  )

  LiteralRegistry.register(
    :class => UpdateInviteeStatusListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "updateInviteeStatusList"),
    :schema_element => [
      ["updateInviteeStatusReference", "UpdateInviteeStatusReference[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncAddListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncAddList"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncUpdateListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncUpdateList"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncUpsertListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncUpsertList"),
    :schema_element => [
      ["record", "Record[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncDeleteListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncDeleteList"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncGetListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncGetList"),
    :schema_element => [
      ["baseRef", "BaseRef[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncInitializeListRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncInitializeList"),
    :schema_element => [
      ["initializeRecord", "InitializeRecord[]", [1, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AsyncSearchRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "asyncSearch"),
    :schema_element => [
      ["searchRecord", "SearchRecord"]
    ]
  )

  LiteralRegistry.register(
    :class => CheckAsyncStatusRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "checkAsyncStatus"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"]
    ]
  )

  LiteralRegistry.register(
    :class => GetAsyncResultRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getAsyncResult"),
    :schema_element => [
      ["jobId", "SOAP::SOAPString"],
      ["pageIndex", "SOAP::SOAPInt"]
    ]
  )

  LiteralRegistry.register(
    :class => GetDeletedRequest,
    :schema_name => XSD::QName.new(NsMessages_2012_1PlatformWebservicesNetsuiteCom, "getDeleted"),
    :schema_element => [
      ["getDeletedFilter", "GetDeletedFilter"]
    ]
  )

  LiteralRegistry.register(
    :class => CalendarEvent,
    :schema_name => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "CalendarEvent"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["supportCase", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["period", "SOAP::SOAPLong", [0, 1]],
      ["frequency", "CalendarEventFrequency", [0, 1]],
      ["recurrenceDowMaskList", "RecurrenceDowMaskList", [0, 1]],
      ["recurrenceDow", "CalendarEventDow", [0, 1]],
      ["recurrenceDowim", "CalendarEventDowim", [0, 1]],
      ["seriesStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endByDate", "SOAP::SOAPDateTime", [0, 1]],
      ["noEndDate", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["recurrence", "SOAP::SOAPString", [0, 1]],
      ["location", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["allDayEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "CalendarEventReminderType", [0, 1]],
      ["reminderMinutes", "CalendarEventReminderMinutes", [0, 1]],
      ["status", "CalendarEventStatus", [0, 1]],
      ["accessLevel", "CalendarEventAccessLevel", [0, 1]],
      ["organizer", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exclusionDateList", "ExclusionDateList", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["attendeeList", "CalendarEventAttendeeList", [0, 1]],
      ["resourceList", "CalendarEventResourceList", [0, 1]],
      ["timeItemList", "CalendarEventTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CalendarEventSearch,
    :schema_name => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "calendarEventSearch"),
    :schema_element => [
      ["basic", "CalendarEventSearchBasic", [0, 1]],
      ["attendeeJoin", "EntitySearchBasic", [0, 1]],
      ["attendeeContactJoin", "ContactSearchBasic", [0, 1]],
      ["attendeeCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Task,
    :schema_name => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "Task"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["supportCase", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["milestone", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedTime", "Duration", [0, 1]],
      ["estimatedTimeOverride", "Duration", [0, 1]],
      ["actualTime", "Duration", [0, 1]],
      ["timeRemaining", "Duration", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["priority", "TaskPriority", [0, 1]],
      ["status", "TaskStatus", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "TaskReminderType", [0, 1]],
      ["reminderMinutes", "TaskReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["contactList", "TaskContactList", [0, 1]],
      ["timeItemList", "TaskTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TaskSearch,
    :schema_name => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "taskSearch"),
    :schema_element => [
      ["basic", "TaskSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PhoneCall,
    :schema_name => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "PhoneCall"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["supportCase", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["milestone", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["status", "PhoneCallStatus", [0, 1]],
      ["priority", "PhoneCallPriority", [0, 1]],
      ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["reminderType", "PhoneCallReminderType", [0, 1]],
      ["reminderMinutes", "PhoneCallReminderMinutes", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["contactList", "PhoneCallContactList", [0, 1]],
      ["timeItemList", "PhoneCallTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PhoneCallSearch,
    :schema_name => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "phoneCallSearch"),
    :schema_element => [
      ["basic", "PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["companyCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ProjectTask,
    :schema_name => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "projectTask"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["eventId", "RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["order", "RecordRef", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["priority", "RecordRef", [0, 1]],
      ["estimatedWork", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedWorkBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["constraintType", "ProjectTaskConstraintType", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["actualWork", "SOAP::SOAPDouble", [0, 1]],
      ["remainingWork", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["status", "ProjectTaskStatus", [0, 1]],
      ["assigneeList", "ProjectTaskAssigneeList", [0, 1]],
      ["predecessorList", "ProjectTaskPredecessorList", [0, 1]],
      ["timeItemList", "ProjectTaskTimeItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ProjectTaskSearch,
    :schema_name => XSD::QName.new(NsScheduling_2012_1ActivitiesWebservicesNetsuiteCom, "projectTaskSearch"),
    :schema_element => [
      ["basic", "ProjectTaskSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["predecessorJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["projectTaskAssignmentJoin", "ProjectTaskAssignmentSearchBasic", [0, 1]],
      ["successorJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Note,
    :schema_name => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "Note"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["noteType", "RecordRef", [0, 1]],
      ["direction", "NoteDirection", [0, 1]],
      ["noteDate", "SOAP::SOAPDateTime", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["activity", "RecordRef", [0, 1]],
      ["author", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["folder", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["media", "RecordRef", [0, 1]],
      ["record", "RecordRef", [0, 1]],
      ["recordType", "RecordRef", [0, 1]],
      ["topic", "RecordRef", [0, 1]],
      ["transaction", "RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NoteSearch,
    :schema_name => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "noteSearch"),
    :schema_element => [
      ["basic", "NoteSearchBasic", [0, 1]],
      ["authorJoin", "EmployeeSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["campaignJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "EntitySearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["issueJoin", "IssueSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["solutionJoin", "SolutionSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Message,
    :schema_name => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "Message"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["author", "RecordRef", [0, 1]],
      ["recipient", "RecordRef", [0, 1]],
      ["cc", "SOAP::SOAPString", [0, 1]],
      ["bcc", "SOAP::SOAPString", [0, 1]],
      ["messageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["recordTypeName", "SOAP::SOAPString", [0, 1]],
      ["subject", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["emailed", "SOAP::SOAPBoolean", [0, 1]],
      ["activity", "RecordRef", [0, 1]],
      ["compressAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["incoming", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["transaction", "RecordRef", [0, 1]],
      ["mediaItemList", "MessageMediaItemList", [0, 1]],
      ["dateTime", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => MessageSearch,
    :schema_name => XSD::QName.new(NsCommunication_2012_1GeneralWebservicesNetsuiteCom, "messageSearch"),
    :schema_element => [
      ["basic", "MessageSearchBasic", [0, 1]],
      ["attachmentsJoin", "FileSearchBasic", [0, 1]],
      ["authorJoin", "EntitySearchBasic", [0, 1]],
      ["campaignJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["entityJoin", "EntitySearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["recipientJoin", "EntitySearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FileSearch,
    :schema_name => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "fileSearch"),
    :schema_element => [
      ["basic", "FileSearchBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => FolderSearch,
    :schema_name => XSD::QName.new(NsFilecabinet_2012_1DocumentsWebservicesNetsuiteCom, "folderSearch"),
    :schema_element => [
      ["basic", "FolderSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Contact,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Contact"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["categoryList", "CategoryList", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "RecordRef", [0, 1]],
      ["supervisorPhone", "SOAP::SOAPString", [0, 1]],
      ["assistant", "RecordRef", [0, 1]],
      ["assistantPhone", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["addressbookList", "ContactAddressbookList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ContactSearch,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "contactSearch"),
    :schema_element => [
      ["basic", "ContactSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["customerPrimaryJoin", "CustomerSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["jobPrimaryJoin", "JobSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["partnerPrimaryJoin", "PartnerSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]],
      ["vendorPrimaryJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Customer,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Customer"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["language", "Language", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["representingSubsidiary", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["territory", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["taxExempt", "SOAP::SOAPBoolean", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["creditHoldOverride", "CustomerCreditHoldOverride", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["daysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolUnbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["consolOverdueBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolDepositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolBalance", "SOAP::SOAPDouble", [0, 1]],
      ["consolAging", "SOAP::SOAPDouble", [0, 1]],
      ["consolDaysOverdue", "SOAP::SOAPLong", [0, 1]],
      ["priceLevel", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["prefCCProcessor", "RecordRef", [0, 1]],
      ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["taxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["resaleNumber", "SOAP::SOAPString", [0, 1]],
      ["aging", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reminderDays", "SOAP::SOAPLong", [0, 1]],
      ["shippingItem", "RecordRef", [0, 1]],
      ["thirdPartyAcct", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcode", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountry", "Country", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["accessRole", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["campaignCategory", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["receivablesAccount", "RecordRef", [0, 1]],
      ["webLead", "SOAP::SOAPString", [0, 1]],
      ["referrer", "SOAP::SOAPString", [0, 1]],
      ["keywords", "SOAP::SOAPString", [0, 1]],
      ["clickStream", "SOAP::SOAPString", [0, 1]],
      ["lastPageVisited", "SOAP::SOAPString", [0, 1]],
      ["visits", "SOAP::SOAPLong", [0, 1]],
      ["firstVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["lastVisit", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "RecordRef", [0, 1]],
      ["stage", "CustomerStage", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["salesReadiness", "RecordRef", [0, 1]],
      ["salesTeamList", "CustomerSalesTeamList", [0, 1]],
      ["buyingReason", "RecordRef", [0, 1]],
      ["downloadList", "CustomerDownloadList", [0, 1]],
      ["buyingTimeFrame", "RecordRef", [0, 1]],
      ["addressbookList", "CustomerAddressbookList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["contactRolesList", "ContactAccessRolesList", [0, 1]],
      ["currencyList", "CustomerCurrencyList", [0, 1]],
      ["creditCardsList", "CustomerCreditCardsList", [0, 1]],
      ["partnersList", "CustomerPartnersList", [0, 1]],
      ["groupPricingList", "CustomerGroupPricingList", [0, 1]],
      ["itemPricingList", "CustomerItemPricingList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerSearch,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "customerSearch"),
    :schema_element => [
      ["basic", "CustomerSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["hostedPageJoin", "FileSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["parentCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchBasic", [0, 1]],
      ["subCustomerJoin", "CustomerSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["topLevelParentJoin", "CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["webSiteCategoryJoin", "SiteCategorySearchBasic", [0, 1]],
      ["webSiteItemJoin", "ItemSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerStatus,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "CustomerStatus"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["stage", "CustomerStatusStage", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeInLeadReports", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Partner,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Partner"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["partnerCode", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["referringUrl", "SOAP::SOAPString", [0, 1]],
      ["roleList", "RecordRefList", [0, 1]],
      ["categoryList", "CategoryList", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["taxFractionUnit", "TaxFractionUnit", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["taxRounding", "TaxRounding", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["accessRole", "RecordRef", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["subPartnerLogin", "SOAP::SOAPBoolean", [0, 1]],
      ["loginAs", "SOAP::SOAPString", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["contactRolesList", "ContactAccessRolesList", [0, 1]],
      ["promoCodeList", "PartnerPromoCodeList", [0, 1]],
      ["addressbookList", "PartnerAddressbookList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PartnerSearch,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "partnerSearch"),
    :schema_element => [
      ["basic", "PartnerSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Vendor,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Vendor"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["altEmail", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["representingSubsidiary", "RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["payablesAccount", "RecordRef", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["bcn", "SOAP::SOAPString", [0, 1]],
      ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["is1099Eligible", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResourceVend", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["workCalendar", "RecordRef", [0, 1]],
      ["taxIdNum", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["isAccountant", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["emailTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["printTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["faxTransactions", "SOAP::SOAPBoolean", [0, 1]],
      ["pricingScheduleList", "VendorPricingScheduleList", [0, 1]],
      ["subscriptionsList", "SubscriptionsList", [0, 1]],
      ["addressbookList", "VendorAddressbookList", [0, 1]],
      ["rolesList", "VendorRolesList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorSearch,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "vendorSearch"),
    :schema_element => [
      ["basic", "VendorSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => EntityGroup,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "EntityGroup"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["groupName", "SOAP::SOAPString", [0, 1]],
      ["groupType", "EntityGroupType", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["groupOwner", "RecordRef", [0, 1]],
      ["isSavedSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["parentGroupType", "EntityGroupType", [0, 1]],
      ["savedSearch", "RecordRef", [0, 1]],
      ["isSalesTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
      ["restrictionGroup", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["isFunctionalTeam", "SOAP::SOAPBoolean", [0, 1]],
      ["issueRole", "RecordRef", [0, 1]],
      ["calendarName", "SOAP::SOAPString", [0, 1]],
      ["calendarStartTime", "EntityGroupDailyTime", [0, 1]],
      ["calendarEndTime", "EntityGroupDailyTime", [0, 1]],
      ["calendarDefaultView", "EntityGroupDefView", [0, 1]],
      ["calendarPeriod", "EntityGroupPeriodSize", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => EntityGroupSearch,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "entityGroupSearch"),
    :schema_element => [
      ["basic", "EntityGroupSearchBasic", [0, 1]],
      ["groupMemberJoin", "EntitySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Job,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "Job"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["companyName", "SOAP::SOAPString", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["workplace", "RecordRef", [0, 1]],
      ["language", "RecordRef", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["fxRate", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["altPhone", "SOAP::SOAPString", [0, 1]],
      ["calculatedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["calculatedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["startDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["projectedEndDateBaseline", "SOAP::SOAPDateTime", [0, 1]],
      ["lastBaselineDate", "SOAP::SOAPDateTime", [0, 1]],
      ["jobType", "RecordRef", [0, 1]],
      ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedTime", "Duration", [0, 1]],
      ["estimatedTimeOverride", "Duration", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["emailPreference", "EmailPreference", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
      ["openingBalanceAccount", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["jobBillingType", "JobBillingType", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["jobItem", "RecordRef", [0, 1]],
      ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
      ["actualTime", "Duration", [0, 1]],
      ["allowTime", "SOAP::SOAPBoolean", [0, 1]],
      ["timeRemaining", "Duration", [0, 1]],
      ["limitTimeToAssignees", "SOAP::SOAPBoolean", [0, 1]],
      ["estimatedLaborCost", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedLaborCostBaseline", "SOAP::SOAPDouble", [0, 1]],
      ["estimateRevRecTemplate", "RecordRef", [0, 1]],
      ["estimatedLaborRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estimatedGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["allowAllResourcesForTasks", "SOAP::SOAPBoolean", [0, 1]],
      ["jobPrice", "SOAP::SOAPDouble", [0, 1]],
      ["isUtilizedTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isProductiveTime", "SOAP::SOAPBoolean", [0, 1]],
      ["isExemptTime", "SOAP::SOAPBoolean", [0, 1]],
      ["materializeTime", "SOAP::SOAPBoolean", [0, 1]],
      ["allowExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["allocatePayrollExpenses", "SOAP::SOAPBoolean", [0, 1]],
      ["includeCrmTasksInTotals", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["jobResourcesList", "JobResourcesList", [0, 1]],
      ["addressbookList", "JobAddressbookList", [0, 1]],
      ["milestonesList", "JobMilestonesList", [0, 1]],
      ["creditCardsList", "JobCreditCardsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => JobSearch,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "jobSearch"),
    :schema_element => [
      ["basic", "JobSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["projectTaskJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobType,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobType"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => JobStatus,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "JobStatus"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerStatusSearch,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "customerStatusSearch"),
    :schema_element => [
      ["basic", "CustomerStatusSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobStatusSearch,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "jobStatusSearch"),
    :schema_element => [
      ["basic", "JobStatusSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => JobTypeSearch,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "jobTypeSearch"),
    :schema_element => [
      ["basic", "JobTypeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => OriginatingLeadSearch,
    :schema_name => XSD::QName.new(NsRelationships_2012_1ListsWebservicesNetsuiteCom, "originatingLeadSearch"),
    :schema_element => [
      ["basic", "OriginatingLeadSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SupportCase,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCase"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["escalationMessage", "SOAP::SOAPString", [0, 1]],
      ["lastReopenedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["incomingMessage", "SOAP::SOAPString", [0, 1]],
      ["insertSolution", "RecordRef", [0, 1]],
      ["outgoingMessage", "SOAP::SOAPString", [0, 1]],
      ["searchSolution", "SOAP::SOAPString", [0, 1]],
      ["emailForm", "SOAP::SOAPBoolean", [0, 1]],
      ["newSolutionFromMsg", "SOAP::SOAPString", [0, 1]],
      ["internalOnly", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["caseNumber", "SOAP::SOAPString", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastMessageDate", "SOAP::SOAPDateTime", [0, 1]],
      ["company", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["contact", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["product", "RecordRef", [0, 1]],
      ["v_module", ["RecordRef", XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["serialNumber", "RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["issue", "RecordRef", [0, 1]],
      ["status", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["priority", "RecordRef", [0, 1]],
      ["origin", "RecordRef", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["helpDesk", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "EmailEmployeesList", [0, 1]],
      ["escalateToList", "SupportCaseEscalateToList", [0, 1]],
      ["timeItemList", "SupportCaseTimeItemList", [0, 1]],
      ["solutionsList", "SupportCaseSolutionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SupportCaseSearch,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "supportCaseSearch"),
    :schema_element => [
      ["basic", "SupportCaseSearchBasic", [0, 1]],
      ["contactJoin", "ContactSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["issueJoin", "IssueSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SupportCaseStatus,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseStatus"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["stage", "SupportCaseStatusStage", [0, 1]],
      ["caseOnHold", "SOAP::SOAPBoolean", [0, 1]],
      ["autoCloseCase", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SupportCaseType,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseType"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SupportCaseOrigin,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseOrigin"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SupportCaseIssue,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCaseIssue"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SupportCasePriority,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "SupportCasePriority"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Solution,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "Solution"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["solutionCode", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["status", "SolutionStatus", [0, 1]],
      ["displayOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["topicsList", "SolutionTopicsList", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["solutionsList", "SolutionsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SolutionSearch,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "solutionSearch"),
    :schema_element => [
      ["basic", "SolutionSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["relatedSolutionJoin", "SolutionSearchBasic", [0, 1]],
      ["topicJoin", "TopicSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Topic,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "Topic"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["parentTopic", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["longDescription", "SOAP::SOAPString", [0, 1]],
      ["solutionList", "TopicSolutionList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TopicSearch,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "topicSearch"),
    :schema_element => [
      ["basic", "TopicSearchBasic", [0, 1]],
      ["solutionJoin", "SolutionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Issue,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "Issue"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["issueNumber", "SOAP::SOAPString", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueType", "RecordRef", [0, 1]],
      ["product", "RecordRef", [0, 1]],
      ["v_module", ["RecordRef", XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["productTeam", "RecordRef", [0, 1]],
      ["source", "RecordRef", [0, 1]],
      ["reportedBy", "RecordRef", [0, 1]],
      ["reproduce", "RecordRef", [0, 1]],
      ["duplicateOf", "RecordRef", [0, 1]],
      ["severity", "RecordRef", [0, 1]],
      ["priority", "RecordRef", [0, 1]],
      ["isShowStopper", "SOAP::SOAPBoolean", [0, 1]],
      ["assigned", "RecordRef", [0, 1]],
      ["reviewer", "RecordRef", [0, 1]],
      ["isReviewed", "SOAP::SOAPBoolean", [0, 1]],
      ["issueStatus", "RecordRef", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["issueTagsList", "RecordRefList", [0, 1]],
      ["issueAbstract", "SOAP::SOAPString", [0, 1]],
      ["newDetails", "SOAP::SOAPString", [0, 1]],
      ["isOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["trackCode", "IssueTrackCode", [0, 1]],
      ["emailAssignee", "SOAP::SOAPBoolean", [0, 1]],
      ["emailEmployeesList", "EmailEmployeesList", [0, 1]],
      ["emailCellsList", "RecordRefList", [0, 1]],
      ["externalAbstract", "SOAP::SOAPString", [0, 1]],
      ["externalDetails", "SOAP::SOAPString", [0, 1]],
      ["brokenInVersionList", "IssueVersionList", [0, 1]],
      ["targetVersionList", "IssueVersionList", [0, 1]],
      ["fixedInVersionList", "IssueVersionList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => IssueSearch,
    :schema_name => XSD::QName.new(NsSupport_2012_1ListsWebservicesNetsuiteCom, "issueSearch"),
    :schema_element => [
      ["basic", "IssueSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactCategory,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactCategory"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["private", "SOAP::SOAPBoolean", [0, 1]],
      ["sync", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerCategory,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "CustomerCategory"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SalesRole,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesRole"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PriceLevel,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PriceLevel"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["discountpct", "SOAP::SOAPDouble", [0, 1]],
      ["updateExistingPrices", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => WinLossReason,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "WinLossReason"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Term,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Term"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["dateDriven", "SOAP::SOAPBoolean", [0, 1]],
      ["daysUntilNetDue", "SOAP::SOAPLong", [0, 1]],
      ["discountPercent", "SOAP::SOAPDouble", [0, 1]],
      ["daysUntilExpiry", "SOAP::SOAPLong", [0, 1]],
      ["dayOfMonthNetDue", "SOAP::SOAPLong", [0, 1]],
      ["dueNextMonthIfWithinDays", "SOAP::SOAPLong", [0, 1]],
      ["discountPercentDateDriven", "SOAP::SOAPDouble", [0, 1]],
      ["dayDiscountExpires", "SOAP::SOAPLong", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NoteType,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NoteType"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PaymentMethod,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentMethod"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "SOAP::SOAPBoolean", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isDebitCard", "SOAP::SOAPBoolean", [0, 1]],
      ["merchantAccountsList", "RecordRefList", [0, 1]],
      ["payPalEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["expressCheckoutArrangement", "SOAP::SOAPString", [0, 1]],
      ["useExpressCheckout", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => LeadSource,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LeadSource"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InventoryItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "InventoryItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["dateConvertedToInv", "SOAP::SOAPDateTime", [0, 1]],
      ["originalItemType", "ItemType", [0, 1]],
      ["originalItemSubtype", "ItemSubType", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["costingMethod", "ItemCostingMethod", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommittedUnits", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["quantityAvailableUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["quantityOnOrderUnits", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["locationsList", "InventoryItemLocationsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DescriptionItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DescriptionItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DiscountItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "DiscountItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DownloadItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "downloadItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["numOfAllowedDownloads", "SOAP::SOAPLong", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["immediateDownload", "SOAP::SOAPBoolean", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => MarkupItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "MarkupItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PaymentItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PaymentItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SubtotalItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SubtotalItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NonInventoryPurchaseItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NonInventoryPurchaseItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NonInventorySaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NonInventorySaleItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NonInventoryResaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "NonInventoryResaleItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherChargeResaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherChargeResaleItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherChargePurchaseItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherChargePurchaseItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ServiceResaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServiceResaleItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["billingRatesMatrix", "BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ServicePurchaseItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServicePurchaseItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["deferralAccount", "RecordRef", [0, 1]],
      ["amortizationTemplate", "RecordRef", [0, 1]],
      ["residual", "SOAP::SOAPString", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ServiceSaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ServiceSaleItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["createJob", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["itemTaskTemplatesList", "ServiceItemTaskTemplatesList", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["billingRatesMatrix", "BillingRatesMatrix", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherChargeSaleItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "OtherChargeSaleItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["costEstimateUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Currency,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Currency"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["symbol", "SOAP::SOAPString", [0, 1]],
      ["isBaseCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["locale", "CurrencyLocale", [0, 1]],
      ["formatSample", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["fxRateUpdateTimezone", "CurrencyFxRateUpdateTimezone", [0, 1]],
      ["inclInFxRateUpdates", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyPrecision", "CurrencyCurrencyPrecision", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ExpenseCategory,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ExpenseCategory"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["expenseAcct", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Account,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Account"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["acctType", "AccountType", [0, 1]],
      ["acctNumber", "SOAP::SOAPString", [0, 1]],
      ["acctName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPString", [0, 1]],
      ["generalRate", "ConsolidatedRate", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["cashFlowRate", "ConsolidatedRate", [0, 1]],
      ["billableExpensesAcct", "RecordRef", [0, 1]],
      ["deferralAcct", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["curDocNum", "SOAP::SOAPLong", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["inventory", "SOAP::SOAPBoolean", [0, 1]],
      ["eliminate", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["category1099misc", "RecordRef", [0, 1]],
      ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revalue", "SOAP::SOAPBoolean", [0, 1]],
      ["translationsList", "AccountTranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AccountSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "accountSearch"),
    :schema_element => [
      ["basic", "AccountSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Department,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Department"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DepartmentSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "departmentSearch"),
    :schema_element => [
      ["basic", "DepartmentSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Classification,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Classification"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ClassificationSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "classificationSearch"),
    :schema_element => [
      ["basic", "ClassificationSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Location,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Location"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["logo", "RecordRef", [0, 1]],
      ["makeInventoryAvailable", "SOAP::SOAPBoolean", [0, 1]],
      ["makeInventoryAvailableStore", "SOAP::SOAPBoolean", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => LocationSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "locationSearch"),
    :schema_element => [
      ["basic", "LocationSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UnitsType,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "UnitsType"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["uomList", "UnitsTypeUomList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "itemSearch"),
    :schema_element => [
      ["basic", "ItemSearchBasic", [0, 1]],
      ["binNumberJoin", "BinSearchBasic", [0, 1]],
      ["correlatedItemJoin", "ItemSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "InventoryDetailSearchBasic", [0, 1]],
      ["inventoryLocationJoin", "LocationSearchBasic", [0, 1]],
      ["inventoryNumberJoin", "InventoryNumberSearchBasic", [0, 1]],
      ["memberItemJoin", "ItemSearchBasic", [0, 1]],
      ["parentJoin", "ItemSearchBasic", [0, 1]],
      ["preferredLocationJoin", "LocationSearchBasic", [0, 1]],
      ["preferredVendorJoin", "VendorSearchBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactRole,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "ContactRole"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Bin,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "bin"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["binNumber", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BinSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "binSearch"),
    :schema_element => [
      ["basic", "BinSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SalesTaxItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SalesTaxItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["taxType", "RecordRef", [0, 1]],
      ["taxAgency", "RecordRef", [0, 1]],
      ["purchaseAccount", "RecordRef", [0, 1]],
      ["saleAccount", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["effectiveFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["validUntil", "SOAP::SOAPDateTime", [0, 1]],
      ["eccode", "SOAP::SOAPBoolean", [0, 1]],
      ["reverseCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["exempt", "SOAP::SOAPBoolean", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeFromTaxReports", "SOAP::SOAPBoolean", [0, 1]],
      ["available", "SalesTaxItemAvailable", [0, 1]],
      ["export", "SOAP::SOAPBoolean", [0, 1]],
      ["taxAccount", "RecordRef", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TaxGroup,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxGroup"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["taxitem1", "RecordRef", [0, 1]],
      ["unitprice1", "SOAP::SOAPString", [0, 1]],
      ["taxitem2", "RecordRef", [0, 1]],
      ["unitprice2", "SOAP::SOAPString", [0, 1]],
      ["piggyback", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["taxType", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["county", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["nexusCountry", "RecordRef", [0, 1]],
      ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItemList", "TaxGroupTaxItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TaxType,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "TaxType"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["nexusesTaxList", "TaxTypeNexusesTaxList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SerializedInventoryItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "SerializedInventoryItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["numbersList", "SerializedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["locationsList", "SerializedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => LotNumberedInventoryItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["matrixType", "ItemMatrixType", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["vendor", "RecordRef", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
      ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "ScheduleBCode", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costUnits", "SOAP::SOAPString", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["matrixOptionList", "MatrixOptionList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["numbersList", "LotNumberedInventoryItemNumbersList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["locationsList", "LotNumberedInventoryItemLocationsList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => GiftCertificateItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificateItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["salesDescription", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["liabilityAccount", "RecordRef", [0, 1]],
      ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["authCodesList", "GiftCertificateItemAuthCodesList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Subsidiary,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "Subsidiary"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["showSubsidiaryName", "SOAP::SOAPBoolean", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["logo", "RecordRef", [0, 1]],
      ["tranPrefix", "SOAP::SOAPString", [0, 1]],
      ["pageLogo", "RecordRef", [0, 1]],
      ["attention", "SOAP::SOAPString", [0, 1]],
      ["addressee", "SOAP::SOAPString", [0, 1]],
      ["addrPhone", "SOAP::SOAPString", [0, 1]],
      ["addr1", "SOAP::SOAPString", [0, 1]],
      ["addr2", "SOAP::SOAPString", [0, 1]],
      ["addr3", "SOAP::SOAPString", [0, 1]],
      ["city", "SOAP::SOAPString", [0, 1]],
      ["state", "SOAP::SOAPString", [0, 1]],
      ["zip", "SOAP::SOAPString", [0, 1]],
      ["country", "Country", [0, 1]],
      ["addrText", "SOAP::SOAPString", [0, 1]],
      ["override", "SOAP::SOAPBoolean", [0, 1]],
      ["shipAddr", "SOAP::SOAPString", [0, 1]],
      ["returnAddr", "SOAP::SOAPString", [0, 1]],
      ["companyNameForSupportMessages", "SOAP::SOAPString", [0, 1]],
      ["mainSupportEmailAddress", "SOAP::SOAPString", [0, 1]],
      ["anonymousCustomerInboundEmail", "RecordRef", [0, 1]],
      ["anonymousCustomerOnlineForms", "RecordRef", [0, 1]],
      ["caseCreationTemplate", "RecordRef", [0, 1]],
      ["caseUpdateTemplate", "RecordRef", [0, 1]],
      ["caseAutomaticClosureTemplate", "RecordRef", [0, 1]],
      ["caseAssignmentTemplate", "RecordRef", [0, 1]],
      ["employeeCaseUpdateTemplate", "RecordRef", [0, 1]],
      ["caseCopyEmployeeTemplate", "RecordRef", [0, 1]],
      ["caseEscalationTemplate", "RecordRef", [0, 1]],
      ["returnAddress1", "SOAP::SOAPString", [0, 1]],
      ["returnAddress2", "SOAP::SOAPString", [0, 1]],
      ["returnCity", "SOAP::SOAPString", [0, 1]],
      ["returnState", "SOAP::SOAPString", [0, 1]],
      ["returnCountry", "Country", [0, 1]],
      ["returnZip", "SOAP::SOAPString", [0, 1]],
      ["legalName", "SOAP::SOAPString", [0, 1]],
      ["isElimination", "SOAP::SOAPBoolean", [0, 1]],
      ["allowPayroll", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["edition", "SOAP::SOAPString", [0, 1]],
      ["federalIdNumber", "SOAP::SOAPString", [0, 1]],
      ["addrLanguage", "SOAP::SOAPString", [0, 1]],
      ["nonConsol", "SOAP::SOAPString", [0, 1]],
      ["consol", "SOAP::SOAPString", [0, 1]],
      ["shipAddress1", "SOAP::SOAPString", [0, 1]],
      ["shipAddress2", "SOAP::SOAPString", [0, 1]],
      ["shipCity", "SOAP::SOAPString", [0, 1]],
      ["shipState", "SOAP::SOAPString", [0, 1]],
      ["shipCountry", "Country", [0, 1]],
      ["shipZip", "SOAP::SOAPString", [0, 1]],
      ["state1TaxNumber", "SOAP::SOAPString", [0, 1]],
      ["ssnOrTin", "SOAP::SOAPString", [0, 1]],
      ["interCoAccount", "RecordRef", [0, 1]],
      ["nexusList", "SubsidiaryNexusList", [0, 1]],
      ["checkLayout", "RecordRef", [0, 1]],
      ["inboundEmail", "SOAP::SOAPString", [0, 1]],
      ["classTranslationList", "ClassTranslationList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SubsidiarySearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "subsidiarySearch"),
    :schema_element => [
      ["basic", "SubsidiarySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GiftCertificate,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "GiftCertificate"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["giftCertCode", "SOAP::SOAPString", [0, 1]],
      ["sender", "SOAP::SOAPString", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => GiftCertificateSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "giftCertificateSearch"),
    :schema_element => [
      ["basic", "GiftCertificateSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerCategory,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "PartnerCategory"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorCategory,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "VendorCategory"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isTaxAgency", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => KitItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "kitItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AssemblyItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "assemblyItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethod", "ItemCostingMethod", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["prodQtyVarianceAcct", "RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["locationsList", "InventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SerializedAssemblyItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "serializedAssemblyItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["costCategory", "RecordRef", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["weightUnits", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["locationsList", "SerializedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "SerializedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => LotNumberedAssemblyItem,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "lotNumberedAssemblyItem"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["upcCode", "SOAP::SOAPString", [0, 1]],
      ["displayName", "SOAP::SOAPString", [0, 1]],
      ["vendorName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["printItems", "SOAP::SOAPBoolean", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isGcoCompliant", "SOAP::SOAPBoolean", [0, 1]],
      ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
      ["subsidiaryList", "RecordRefList", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["cogsAccount", "RecordRef", [0, 1]],
      ["incomeAccount", "RecordRef", [0, 1]],
      ["assetAccount", "RecordRef", [0, 1]],
      ["matchBillToReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["billQtyVarianceAcct", "RecordRef", [0, 1]],
      ["billPriceVarianceAcct", "RecordRef", [0, 1]],
      ["billExchRateVarianceAcct", "RecordRef", [0, 1]],
      ["gainLossAccount", "RecordRef", [0, 1]],
      ["salesTaxCode", "RecordRef", [0, 1]],
      ["purchaseTaxCode", "RecordRef", [0, 1]],
      ["prodQtyVarianceAcct", "RecordRef", [0, 1]],
      ["prodPriceVarianceAcct", "RecordRef", [0, 1]],
      ["purchasePriceVarianceAcct", "RecordRef", [0, 1]],
      ["taxSchedule", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["weight", "SOAP::SOAPDouble", [0, 1]],
      ["weightUnit", "ItemWeightUnit", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["unitsType", "RecordRef", [0, 1]],
      ["stockUnit", "RecordRef", [0, 1]],
      ["purchaseUnit", "RecordRef", [0, 1]],
      ["saleUnit", "RecordRef", [0, 1]],
      ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["deferredRevenueAccount", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["stockDescription", "SOAP::SOAPString", [0, 1]],
      ["producer", "SOAP::SOAPBoolean", [0, 1]],
      ["manufacturer", "SOAP::SOAPString", [0, 1]],
      ["mpn", "SOAP::SOAPString", [0, 1]],
      ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
      ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
      ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
      ["manufacturerState", "SOAP::SOAPString", [0, 1]],
      ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
      ["countryOfManufacture", "Country", [0, 1]],
      ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
      ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
      ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
      ["scheduleBCode", "RecordRef", [0, 1]],
      ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
      ["preferenceCriterion", "ItemPreferenceCriterion", [0, 1]],
      ["issueProduct", "RecordRef", [0, 1]],
      ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
      ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
      ["softDescriptor", "RecordRef", [0, 1]],
      ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
      ["pricesIncludeTax", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityPricingSchedule", "RecordRef", [0, 1]],
      ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
      ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
      ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["costEstimateType", "ItemCostEstimateType", [0, 1]],
      ["costEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["transferPrice", "SOAP::SOAPDouble", [0, 1]],
      ["overallQuantityPricingType", "ItemOverallQuantityPricingType", [0, 1]],
      ["pricingGroup", "RecordRef", [0, 1]],
      ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeSopGroup", "VsoeSopGroup", [0, 1]],
      ["vsoeDeferral", "VsoeDeferral", [0, 1]],
      ["vsoePermitDiscount", "VsoePermitDiscount", [0, 1]],
      ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
      ["unbuildVarianceAccount", "RecordRef", [0, 1]],
      ["preferredLocation", "RecordRef", [0, 1]],
      ["totalValue", "SOAP::SOAPDouble", [0, 1]],
      ["useBins", "SOAP::SOAPBoolean", [0, 1]],
      ["averageCost", "SOAP::SOAPDouble", [0, 1]],
      ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
      ["leadTime", "SOAP::SOAPLong", [0, 1]],
      ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
      ["buildTime", "SOAP::SOAPLong", [0, 1]],
      ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
      ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
      ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
      ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
      ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
      ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
      ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
      ["shipPackage", "RecordRef", [0, 1]],
      ["defaultReturnCost", "SOAP::SOAPDouble", [0, 1]],
      ["supplyReplenishmentMethod", "RecordRef", [0, 1]],
      ["alternateDemandSourceItem", "RecordRef", [0, 1]],
      ["fixedLotSize", "SOAP::SOAPDouble", [0, 1]],
      ["supplyType", "RecordRef", [0, 1]],
      ["supplyLotSizingMethod", "RecordRef", [0, 1]],
      ["demandSource", "RecordRef", [0, 1]],
      ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
      ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
      ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
      ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["storeDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeItemTemplate", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
      ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
      ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
      ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
      ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
      ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
      ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
      ["outOfStockBehavior", "ItemOutOfStockBehavior", [0, 1]],
      ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
      ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
      ["productFeedList", "ProductFeedList", [0, 1]],
      ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
      ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
      ["specialsDescription", "SOAP::SOAPString", [0, 1]],
      ["featuredDescription", "SOAP::SOAPString", [0, 1]],
      ["itemOptionsList", "ItemOptionsList", [0, 1]],
      ["itemNumberOptionsList", "RecordRefList", [0, 1]],
      ["itemVendorList", "ItemVendorList", [0, 1]],
      ["pricingMatrix", "PricingMatrix", [0, 1]],
      ["memberList", "ItemMemberList", [0, 1]],
      ["locationsList", "LotNumberedInventoryItemLocationsList", [0, 1]],
      ["siteCategoryList", "SiteCategoryList", [0, 1]],
      ["binNumberList", "InventoryItemBinNumberList", [0, 1]],
      ["numbersList", "LotNumberedInventoryItemNumbersList", [0, 1]],
      ["translationsList", "TranslationList", [0, 1]],
      ["presentationItemList", "PresentationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => State,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "state"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "Country", [0, 1]],
      ["fullName", "SOAP::SOAPString", [0, 1]],
      ["shortname", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AccountingPeriod,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "accountingPeriod"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["periodName", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["closedOnDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isAdjust", "SOAP::SOAPBoolean", [0, 1]],
      ["isQuarter", "SOAP::SOAPBoolean", [0, 1]],
      ["isYear", "SOAP::SOAPBoolean", [0, 1]],
      ["closed", "SOAP::SOAPBoolean", [0, 1]],
      ["apLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["arLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allLocked", "SOAP::SOAPBoolean", [0, 1]],
      ["allowNonGLChanges", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BudgetCategory,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "budgetCategory"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["budgetType", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AccountingPeriodSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "accountingPeriodSearch"),
    :schema_element => [
      ["basic", "AccountingPeriodSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "contactCategorySearch"),
    :schema_element => [
      ["basic", "ContactCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ContactRoleSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "contactRoleSearch"),
    :schema_element => [
      ["basic", "ContactRoleSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "customerCategorySearch"),
    :schema_element => [
      ["basic", "CustomerCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ExpenseCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "expenseCategorySearch"),
    :schema_element => [
      ["basic", "ExpenseCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => NoteTypeSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "noteTypeSearch"),
    :schema_element => [
      ["basic", "NoteTypeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PartnerCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "partnerCategorySearch"),
    :schema_element => [
      ["basic", "PartnerCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PaymentMethodSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "paymentMethodSearch"),
    :schema_element => [
      ["basic", "PaymentMethodSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PriceLevelSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "priceLevelSearch"),
    :schema_element => [
      ["basic", "PriceLevelSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SalesRoleSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "salesRoleSearch"),
    :schema_element => [
      ["basic", "SalesRoleSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TermSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "termSearch"),
    :schema_element => [
      ["basic", "TermSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => VendorCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "vendorCategorySearch"),
    :schema_element => [
      ["basic", "VendorCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => WinLossReasonSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "winLossReasonSearch"),
    :schema_element => [
      ["basic", "WinLossReasonSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => UnitsTypeSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "unitsTypeSearch"),
    :schema_element => [
      ["basic", "UnitsTypeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => PricingGroup,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "pricingGroup"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PricingGroupSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "pricingGroupSearch"),
    :schema_element => [
      ["basic", "PricingGroupSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => InventoryNumber,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "inventoryNumber"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["inventoryNumber", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["units", "SOAP::SOAPString", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["locationsList", "InventoryNumberLocationsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InventoryNumberSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "inventoryNumberSearch"),
    :schema_element => [
      ["basic", "InventoryNumberSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecSchedule,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "revRecSchedule"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "RevRecScheduleRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => RevRecTemplate,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "revRecTemplate"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["amortizationType", "RevRecScheduleAmortizationType", [0, 1]],
      ["recurrenceType", "RevRecScheduleRecurrenceType", [0, 1]],
      ["recogIntervalSrc", "RevRecScheduleRecogIntervalSrc", [0, 1]],
      ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
      ["periodOffset", "SOAP::SOAPLong", [0, 1]],
      ["revRecOffset", "SOAP::SOAPLong", [0, 1]],
      ["initialAmount", "SOAP::SOAPDouble", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["recurrenceList", "RevRecTemplateRecurrenceList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => RevRecScheduleSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "revRecScheduleSearch"),
    :schema_element => [
      ["basic", "RevRecScheduleSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RevRecTemplateSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "revRecTemplateSearch"),
    :schema_element => [
      ["basic", "RevRecTemplateSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CostCategory,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "costCategory"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["itemCostType", "CostCategoryItemCostType", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Nexus,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "nexus"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["country", "Country", [0, 1]],
      ["state", "RecordRef", [0, 1]],
      ["taxAgency", "RecordRef", [0, 1]],
      ["taxAgencyPst", "RecordRef", [0, 1]],
      ["taxCode", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => NexusSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "nexusSearch"),
    :schema_element => [
      ["basic", "NexusSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerMessage,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "customerMessage"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["preferred", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherNameCategory,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "otherNameCategory"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherNameCategorySearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "otherNameCategorySearch"),
    :schema_element => [
      ["basic", "OtherNameCategorySearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomerMessageSearch,
    :schema_name => XSD::QName.new(NsAccounting_2012_1ListsWebservicesNetsuiteCom, "customerMessageSearch"),
    :schema_element => [
      ["basic", "CustomerMessageSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Opportunity,
    :schema_name => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "Opportunity"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["estimatedBudget", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["daysOpen", "SOAP::SOAPLong", [0, 1]],
      ["forecastType", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["projectedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["rangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["rangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["projAltSalesAmt", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeLow", "SOAP::SOAPDouble", [0, 1]],
      ["altSalesRangeHigh", "SOAP::SOAPDouble", [0, 1]],
      ["weightedTotal", "SOAP::SOAPDouble", [0, 1]],
      ["actionItem", "SOAP::SOAPString", [0, 1]],
      ["winLossReason", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["isBudgetApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["salesReadiness", "RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["buyingTimeFrame", "RecordRef", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["buyingReason", "RecordRef", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["closeDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "OpportunitySalesTeamList", [0, 1]],
      ["partnersList", "OpportunityPartnersList", [0, 1]],
      ["itemList", "OpportunityItemList", [0, 1]],
      ["competitorsList", "OpportunityCompetitorsList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OpportunitySearch,
    :schema_name => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "opportunitySearch"),
    :schema_element => [
      ["basic", "OpportunitySearchBasic", [0, 1]],
      ["actualJoin", "TransactionSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["decisionMakerJoin", "ContactSearchBasic", [0, 1]],
      ["estimateJoin", "TransactionSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["orderJoin", "TransactionSearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["partnerJoin", "PartnerSearchBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SalesOrder,
    :schema_name => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "SalesOrder"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["orderStatus", "SalesOrderOrderStatus", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["actualShipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["isMultiShipTo", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["shopperIpAddress", "SOAP::SOAPString", [0, 1]],
      ["saveOnAuthDecline", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "RevenueCommitStatus", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["getAuth", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentEventResult", "TransactionPaymentEventResult", [0, 1]],
      ["paymentEventHoldReason", "TransactionPaymentEventHoldReason", [0, 1]],
      ["paymentEventType", "TransactionPaymentEventType", [0, 1]],
      ["paymentEventDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paymentEventUpdatedBy", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "SalesOrderSalesTeamList", [0, 1]],
      ["partnersList", "SalesOrderPartnersList", [0, 1]],
      ["giftCertRedemptionList", "GiftCertRedemptionList", [0, 1]],
      ["itemList", "SalesOrderItemList", [0, 1]],
      ["shipGroupList", "SalesOrderShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TransactionSearch,
    :schema_name => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "transactionSearch"),
    :schema_element => [
      ["basic", "TransactionSearchBasic", [0, 1]],
      ["accountJoin", "AccountSearchBasic", [0, 1]],
      ["accountingPeriodJoin", "AccountingPeriodSearchBasic", [0, 1]],
      ["appliedToTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["applyingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["billingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["binNumberJoin", "BinSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["classJoin", "ClassificationSearchBasic", [0, 1]],
      ["cogsPurchaseJoin", "TransactionSearchBasic", [0, 1]],
      ["cogsSaleJoin", "TransactionSearchBasic", [0, 1]],
      ["contactPrimaryJoin", "ContactSearchBasic", [0, 1]],
      ["createdFromJoin", "TransactionSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["customerMainJoin", "CustomerSearchBasic", [0, 1]],
      ["departmentJoin", "DepartmentSearchBasic", [0, 1]],
      ["depositTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["expenseCategoryJoin", "ExpenseCategorySearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["fulfillingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["inventoryDetailJoin", "InventoryDetailSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["itemNumberJoin", "InventoryNumberSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["jobMainJoin", "JobSearchBasic", [0, 1]],
      ["leadSourceJoin", "CampaignSearchBasic", [0, 1]],
      ["locationJoin", "LocationSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["opportunityJoin", "OpportunitySearchBasic", [0, 1]],
      ["paidTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["payingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["purchaseOrderJoin", "TransactionSearchBasic", [0, 1]],
      ["requestorJoin", "EmployeeSearchBasic", [0, 1]],
      ["revCommittingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["rgPostingTransactionJoin", "TransactionSearchBasic", [0, 1]],
      ["salesOrderJoin", "TransactionSearchBasic", [0, 1]],
      ["salesRepJoin", "EmployeeSearchBasic", [0, 1]],
      ["subsidiaryJoin", "SubsidiarySearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]],
      ["vendorJoin", "VendorSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemFulfillment,
    :schema_name => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "ItemFulfillment"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["createdFromShipGroup", "SOAP::SOAPLong", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["shipStatus", "ItemFulfillmentShipStatus", [0, 1]],
      ["saturdayDeliveryUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailUps", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailAddress2Ups", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressUps", "SOAP::SOAPString", [0, 1]],
      ["shipNotifyEmailMessageUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyZipcodeUps", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryUps", "Country", [0, 1]],
      ["thirdPartyTypeUps", "ItemFulfillmentThirdPartyTypeUps", [0, 1]],
      ["partiesToTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["exportTypeUps", "ItemFulfillmentExportTypeUps", [0, 1]],
      ["methodOfTransportUps", "ItemFulfillmentMethodOfTransportUps", [0, 1]],
      ["carrierIdUps", "SOAP::SOAPString", [0, 1]],
      ["entryNumberUps", "SOAP::SOAPString", [0, 1]],
      ["inbondCodeUps", "SOAP::SOAPString", [0, 1]],
      ["isRoutedExportTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
      ["licenseNumberUps", "SOAP::SOAPString", [0, 1]],
      ["licenseDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["licenseExceptionUps", "ItemFulfillmentLicenseExceptionUps", [0, 1]],
      ["eccNumberUps", "SOAP::SOAPString", [0, 1]],
      ["recipientTaxIdUps", "SOAP::SOAPString", [0, 1]],
      ["blanketStartDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["blanketEndDateUps", "SOAP::SOAPDateTime", [0, 1]],
      ["shipmentWeightUps", "SOAP::SOAPDouble", [0, 1]],
      ["saturdayDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["saturdayPickupFedex", "SOAP::SOAPBoolean", [0, 1]],
      ["sendShipNotifyEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["sendBackupEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["signatureHomeDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
      ["shipNotifyEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["backupEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
      ["shipDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["homeDeliveryTypeFedEx", "ItemFulfillmentHomeDeliveryTypeFedEx", [0, 1]],
      ["homeDeliveryDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
      ["bookingConfirmationNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["intlExemptionNumFedEx", "SOAP::SOAPString", [0, 1]],
      ["b13aFilingOptionFedEx", "ItemFulfillmentB13AFilingOptionFedEx", [0, 1]],
      ["b13aStatementDataFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyAcctFedEx", "SOAP::SOAPString", [0, 1]],
      ["thirdPartyCountryFedEx", "Country", [0, 1]],
      ["thirdPartyTypeFedEx", "ItemFulfillmentThirdPartyTypeFedEx", [0, 1]],
      ["shipmentWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsOfSaleFedEx", "ItemFulfillmentTermsOfSaleFedEx", [0, 1]],
      ["termsFreightChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["termsInsuranceChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["generateIntegratedShipperLabel", "SOAP::SOAPBoolean", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["packageList", "ItemFulfillmentPackageList", [0, 1]],
      ["packageUpsList", "ItemFulfillmentPackageUpsList", [0, 1]],
      ["packageUspsList", "ItemFulfillmentPackageUspsList", [0, 1]],
      ["packageFedExList", "ItemFulfillmentPackageFedExList", [0, 1]],
      ["itemList", "ItemFulfillmentItemList", [0, 1]],
      ["shipGroupList", "ItemFulfillmentShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Invoice,
    :schema_name => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "Invoice"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscount", "RecordRef", [0, 1]],
      ["itemCostDiscount", "RecordRef", [0, 1]],
      ["timeDiscount", "RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostTaxCode", "RecordRef", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxCode", "RecordRef", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxCode", "RecordRef", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "InvoiceSalesTeamList", [0, 1]],
      ["partnersList", "InvoicePartnersList", [0, 1]],
      ["itemList", "InvoiceItemList", [0, 1]],
      ["itemCostList", "InvoiceItemCostList", [0, 1]],
      ["giftCertRedemptionList", "GiftCertRedemptionList", [0, 1]],
      ["expCostList", "InvoiceExpCostList", [0, 1]],
      ["timeList", "InvoiceTimeList", [0, 1]],
      ["shipGroupList", "InvoiceShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CashSale,
    :schema_name => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "CashSale"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostDiscount", "RecordRef", [0, 1]],
      ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["itemCostTaxCode", "RecordRef", [0, 1]],
      ["itemCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["itemCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscount", "RecordRef", [0, 1]],
      ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostDiscprint", "SOAP::SOAPBoolean", [0, 1]],
      ["expCostTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscount", "RecordRef", [0, 1]],
      ["expCostTaxCode", "RecordRef", [0, 1]],
      ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
      ["expCostTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["expCostDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["timeDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxRate1", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["timeTaxCode", "RecordRef", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["timeDiscTax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["timeTaxRate2", "SOAP::SOAPDouble", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "CashSaleSalesTeamList", [0, 1]],
      ["partnersList", "CashSalePartnersList", [0, 1]],
      ["itemList", "CashSaleItemList", [0, 1]],
      ["itemCostList", "CashSaleItemCostList", [0, 1]],
      ["giftCertRedemptionList", "GiftCertRedemptionList", [0, 1]],
      ["expCostList", "CashSaleExpCostList", [0, 1]],
      ["timeList", "CashSaleTimeList", [0, 1]],
      ["shipGroupList", "CashSaleShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Estimate,
    :schema_name => XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "Estimate"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["entityStatus", "RecordRef", [0, 1]],
      ["probability", "SOAP::SOAPDouble", [0, 1]],
      ["includeInForecast", "SOAP::SOAPBoolean", [0, 1]],
      ["forecastType", "RecordRef", [0, 1]],
      ["opportunity", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsSales_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["billingSchedule", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["visibleToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "EstimateItemList", [0, 1]],
      ["salesTeamList", "EstimateSalesTeamList", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["partnersList", "EstimatePartnersList", [0, 1]],
      ["shipGroupList", "EstimateShipGroupList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorBill,
    :schema_name => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "VendorBill"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["approvalStatus", "RecordRef", [0, 1]],
      ["nextApprover", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["landedCostMethod", "LandedCostMethod", [0, 1]],
      ["expenseList", "VendorBillExpenseList", [0, 1]],
      ["itemList", "VendorBillItemList", [0, 1]],
      ["landedCostsList", "PurchLandedCostList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PurchaseOrder,
    :schema_name => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "PurchaseOrder"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["terms", "RecordRef", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["shipTo", "RecordRef", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "PurchaseOrderOrderStatus", [0, 1]],
      ["itemList", "PurchaseOrderItemList", [0, 1]],
      ["expenseList", "PurchaseOrderExpenseList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemReceipt,
    :schema_name => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "ItemReceipt"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["landedCostMethod", "LandedCostMethod", [0, 1]],
      ["itemList", "ItemReceiptItemList", [0, 1]],
      ["expenseList", "ItemReceiptExpenseList", [0, 1]],
      ["landedCostsList", "PurchLandedCostList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorPayment,
    :schema_name => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "vendorPayment"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["apAcct", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toAch", "SOAP::SOAPBoolean", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["printVoucher", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "VendorPaymentApplyList", [0, 1]],
      ["creditList", "VendorPaymentCreditList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorCredit,
    :schema_name => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "vendorCredit"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["unApplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["expenseList", "VendorCreditExpenseList", [0, 1]],
      ["itemList", "VendorCreditItemList", [0, 1]],
      ["applyList", "VendorCreditApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => VendorReturnAuthorization,
    :schema_name => XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "vendorReturnAuthorization"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["orderStatus", "VendorReturnAuthorizationOrderStatus", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsPurchases_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["expenseList", "VendorReturnAuthorizationExpenseList", [0, 1]],
      ["itemList", "VendorReturnAuthorizationItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CashRefund,
    :schema_name => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CashRefund"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["refundCheck", "SOAP::SOAPBoolean", [0, 1]],
      ["toPrint2", "SOAP::SOAPBoolean", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["payPalTranId", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["payPalStatus", "SOAP::SOAPString", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["giftCert", "RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "CashRefundItemList", [0, 1]],
      ["salesTeamList", "CashRefundSalesTeamList", [0, 1]],
      ["partnersList", "CashRefundPartnersList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerPayment,
    :schema_name => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerPayment"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["arAcct", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["pending", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["applyList", "CustomerPaymentApplyList", [0, 1]],
      ["creditList", "CustomerPaymentCreditList", [0, 1]],
      ["depositList", "CustomerPaymentDepositList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ReturnAuthorization,
    :schema_name => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorization"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["intercoTransaction", "RecordRef", [0, 1]],
      ["intercoStatus", "IntercoStatus", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["revRecSchedule", "RecordRef", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
      ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["revCommitStatus", "RevenueCommitStatus", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["payPalAuthId", "SOAP::SOAPString", [0, 1]],
      ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["orderStatus", "ReturnAuthorizationOrderStatus", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["giftCert", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["itemList", "ReturnAuthorizationItemList", [0, 1]],
      ["salesTeamList", "ReturnAuthorizationSalesTeamList", [0, 1]],
      ["partnersList", "ReturnAuthorizationPartnersList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CreditMemo,
    :schema_name => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CreditMemo"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["vatRegNum", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["salesRep", "RecordRef", [0, 1]],
      ["partner", "RecordRef", [0, 1]],
      ["contribPct", "SOAP::SOAPString", [0, 1]],
      ["otherRefNum", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["onCreditHold", "SOAP::SOAPString", [0, 1]],
      ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
      ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
      ["totalCostEstimate", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfit", "SOAP::SOAPDouble", [0, 1]],
      ["estGrossProfitPercent", "SOAP::SOAPDouble", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["promoCode", "RecordRef", [0, 1]],
      ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
      ["discountItem", "RecordRef", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["discountRate", "SOAP::SOAPString", [0, 1]],
      ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
      ["taxItem", "RecordRef", [0, 1]],
      ["taxRate", "SOAP::SOAPDouble", [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["messageSel", "RecordRef", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["transactionBillAddress", "BillAddress", [0, 1]],
      ["billAddressList", "RecordRef", [0, 1]],
      ["billAddress", "SOAP::SOAPString", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
      ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
      ["revenueStatus", "RevenueStatus", [0, 1]],
      ["recognizedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["deferredRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["revRecOnRevCommitment", "SOAP::SOAPBoolean", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["salesGroup", "RecordRef", [0, 1]],
      ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["giftCert", "RecordRef", [0, 1]],
      ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
      ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
      ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
      ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
      ["syncPartnerTeams", "SOAP::SOAPBoolean", [0, 1]],
      ["salesTeamList", "CreditMemoSalesTeamList", [0, 1]],
      ["itemList", "CreditMemoItemList", [0, 1]],
      ["partnersList", "CreditMemoPartnersList", [0, 1]],
      ["applyList", "CreditMemoApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerRefund,
    :schema_name => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerRefund"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["arAcct", "RecordRef", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["voidJournal", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "CustomerRefundApplyList", [0, 1]],
      ["depositList", "CustomerRefundDepositList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomerDeposit,
    :schema_name => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "CustomerDeposit"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["salesOrder", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["payment", "SOAP::SOAPDouble", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["paymentMethod", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["currencyName", "SOAP::SOAPString", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["checkNum", "SOAP::SOAPString", [0, 1]],
      ["creditCardProcessor", "RecordRef", [0, 1]],
      ["creditCard", "RecordRef", [0, 1]],
      ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
      ["ccNumber", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
      ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
      ["ccName", "SOAP::SOAPString", [0, 1]],
      ["ccStreet", "SOAP::SOAPString", [0, 1]],
      ["ccZipCode", "SOAP::SOAPString", [0, 1]],
      ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
      ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
      ["pnRefNum", "SOAP::SOAPString", [0, 1]],
      ["authCode", "SOAP::SOAPString", [0, 1]],
      ["ccAvsStreetMatch", "AvsMatchCode", [0, 1]],
      ["softDescriptor", "SOAP::SOAPString", [0, 1]],
      ["ccAvsZipMatch", "AvsMatchCode", [0, 1]],
      ["ccSecurityCodeMatch", "AvsMatchCode", [0, 1]],
      ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
      ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
      ["applyList", "CustomerDepositApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => DepositApplication,
    :schema_name => XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "DepositApplication"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["arAcct", "SOAP::SOAPString", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["deposit", "RecordRef", [0, 1]],
      ["depDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["applied", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsCustomers_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["unapplied", "SOAP::SOAPDouble", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["applyList", "DepositApplicationApplyList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Budget,
    :schema_name => XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "budget"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["year", "RecordRef", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["budgetType", "BudgetBudgetType", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["periodAmount1", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount2", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount3", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount4", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount5", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount6", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount7", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount8", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount9", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount10", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount11", "SOAP::SOAPDouble", [0, 1]],
      ["periodAmount12", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BudgetSearch,
    :schema_name => XSD::QName.new(NsFinancial_2012_1TransactionsWebservicesNetsuiteCom, "budgetSearch"),
    :schema_element => [
      ["basic", "BudgetSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Check,
    :schema_name => XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "Check"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["balance", "SOAP::SOAPDouble", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["address", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["voidJournal", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsBank_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["userTotal", "SOAP::SOAPDouble", [0, 1]],
      ["landedCostMethod", "LandedCostMethod", [0, 1]],
      ["expenseList", "CheckExpenseList", [0, 1]],
      ["itemList", "CheckItemList", [0, 1]],
      ["landedCostsList", "CheckLandedCostList", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InventoryAdjustment,
    :schema_name => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustment"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["estimatedTotalValue", "SOAP::SOAPDouble", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["adjLocation", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["inventoryList", "InventoryAdjustmentInventoryList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AssemblyBuild,
    :schema_name => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "assemblyBuild"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "AssemblyComponentList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AssemblyUnbuild,
    :schema_name => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "assemblyUnbuild"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["serialNumbers", "SOAP::SOAPString", [0, 1]],
      ["inventoryDetail", "InventoryDetail", [0, 1]],
      ["binNumbers", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["componentList", "AssemblyComponentList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TransferOrder,
    :schema_name => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "transferOrder"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "TransferOrderItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InterCompanyTransferOrder,
    :schema_name => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "interCompanyTransferOrder"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["subTotal", "SOAP::SOAPDouble", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["transactionShipAddress", "ShipAddress", [0, 1]],
      ["shipAddressList", "RecordRef", [0, 1]],
      ["shipAddress", "SOAP::SOAPString", [0, 1]],
      ["fob", "SOAP::SOAPString", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["source", "SOAP::SOAPString", [0, 1]],
      ["orderStatus", "TransferOrderOrderStatus", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
      ["shipMethod", "RecordRef", [0, 1]],
      ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
      ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
      ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["handlingTax2Rate", "SOAP::SOAPDouble", [0, 1]],
      ["shippingTaxCode", "RecordRef", [0, 1]],
      ["handlingTaxCode", "RecordRef", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["itemList", "InterCompanyTransferOrderItemList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => WorkOrder,
    :schema_name => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "workOrder"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["job", "RecordRef", [0, 1]],
      ["assemblyItem", "RecordRef", [0, 1]],
      ["expandAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["quantity", "SOAP::SOAPDouble", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["itemList", "WorkOrderItemList", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["salesTeamList", "SalesTeamList", [0, 1]],
      ["partnersList", "PartnersList", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["buildable", "SOAP::SOAPDouble", [0, 1]],
      ["options", "CustomFieldList", [0, 1]],
      ["built", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InventoryTransfer,
    :schema_name => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "inventoryTransfer"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["transferLocation", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["inventoryList", "InventoryTransferInventoryList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BinTransfer,
    :schema_name => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "binTransfer"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["inventoryList", "BinTransferInventoryList", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => BinWorksheet,
    :schema_name => XSD::QName.new(NsInventory_2012_1TransactionsWebservicesNetsuiteCom, "binWorksheet"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["itemList", "BinWorksheetItemList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => JournalEntry,
    :schema_name => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "JournalEntry"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["lineList", "JournalEntryLineList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => InterCompanyJournalEntry,
    :schema_name => XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntry"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
      ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
      ["parentExpenseAlloc", "RecordRef", [0, 1]],
      ["reversalEntry", "SOAP::SOAPString", [0, 1]],
      ["createdFrom", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsGeneral_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["toSubsidiary", "RecordRef", [0, 1]],
      ["approved", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lineList", "InterCompanyJournalEntryLineList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecord,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecord"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customRecordId", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["created", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModified", "SOAP::SOAPDateTime", [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["recType", "RecordRef", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enablEmailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordSearch,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "customRecordSearch"),
    :schema_element => [
      ["basic", "CustomRecordSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["ownerJoin", "EmployeeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CustomList,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomList"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isMatrixOption", "SOAP::SOAPBoolean", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["convertToCustomRecord", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["customValueList", "CustomListCustomValueList", [0, 1]],
      ["translationsList", "CustomListTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordType,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordType"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["recordName", "SOAP::SOAPString", [0, 1]],
      ["includeName", "SOAP::SOAPBoolean", [0, 1]],
      ["showId", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
      ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
      ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
      ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
      ["accessType", "CustomRecordTypeAccessType", [0, 1]],
      ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
      ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
      ["enableMailMerge", "SOAP::SOAPBoolean", [0, 1]],
      ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
      ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
      ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
      ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["disclaimer", "SOAP::SOAPString", [0, 1]],
      ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
      ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
      ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
      ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
      ["numberingInit", "SOAP::SOAPLong", [0, 1]],
      ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
      ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
      ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
      ["scriptId", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["tabsList", "CustomRecordTypeTabsList", [0, 1]],
      ["sublistsList", "CustomRecordTypeSublistsList", [0, 1]],
      ["formsList", "CustomRecordTypeFormsList", [0, 1]],
      ["onlineFormsList", "CustomRecordTypeOnlineFormsList", [0, 1]],
      ["permissionsList", "CustomRecordTypePermissionsList", [0, 1]],
      ["linksList", "CustomRecordTypeLinksList", [0, 1]],
      ["managersList", "CustomRecordTypeManagersList", [0, 1]],
      ["childrenList", "CustomRecordTypeChildrenList", [0, 1]],
      ["parentsList", "CustomRecordTypeParentsList", [0, 1]],
      ["translationsList", "CustomRecordTypeTranslationsList", [0, 1]],
      ["customFieldList", "CustomRecordTypeFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => EntityCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "EntityCustomField"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["appliesToCustomer", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProject", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToVendor", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEmployee", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherName", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToContact", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPartner", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToWebSite", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "EntityCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["appliesToStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CrmCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CrmCustomField"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["appliesToTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToProjectTask", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToPhoneCall", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToEvent", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCase", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToCampaign", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesPerKeyword", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSolution", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToIssue", "SOAP::SOAPBoolean", [0, 1]],
      ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["showIssueChanges", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "CrmCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => OtherCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "OtherCustomField"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["recType", "RecordRef", [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["filterList", "OtherCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemCustomField"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["itemMatrix", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["appliesToInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToNonInventory", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToService", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToOtherCharge", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToKit", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToItemAssembly", "SOAP::SOAPBoolean", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["itemSubType", "ItemCustomFieldItemSubType", [0, 1]],
      ["filterList", "ItemCustomFieldFilterList", [0, 1]],
      ["appliesToPriceList", "SOAP::SOAPBoolean", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TransactionBodyCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomField"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["bodyPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["bodySale", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyStore", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyInventoryAdjustment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBTegata", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyAssemblyBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyCustomerPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyVendorPayment", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyBom", "SOAP::SOAPBoolean", [0, 1]],
      ["bodyPrintStatement", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "TransactionBodyCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TransactionColumnCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomField"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["availableToSso", "SOAP::SOAPBoolean", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["colExpense", "SOAP::SOAPBoolean", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colJournal", "SOAP::SOAPBoolean", [0, 1]],
      ["colBuild", "SOAP::SOAPBoolean", [0, 1]],
      ["colExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
      ["colTime", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colTimeGroup", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
      ["colItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
      ["colPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
      ["colPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
      ["colReturnForm", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreWithGroups", "SOAP::SOAPBoolean", [0, 1]],
      ["colGroupOnInvoices", "SOAP::SOAPBoolean", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "TransactionColumnCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemOptionCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "ItemOptionCustomField"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
      ["colSale", "SOAP::SOAPBoolean", [0, 1]],
      ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
      ["colStore", "SOAP::SOAPBoolean", [0, 1]],
      ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
      ["colTransferOrder", "SOAP::SOAPBoolean", [0, 1]],
      ["colAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "ItemsList", [0, 1]],
      ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "ItemOptionCustomFieldFilterList", [0, 1]],
      ["colOptionLabel", "SOAP::SOAPString", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomRecordCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "CustomRecordCustomField"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["globalSearch", "SOAP::SOAPBoolean", [0, 1]],
      ["isParent", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["subtab", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["parentSubtab", "RecordRef", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourcefilterby", "RecordRef", [0, 1]],
      ["recType", "SOAP::SOAPString", [0, 1]],
      ["roleRestrict", "SOAP::SOAPBoolean", [0, 1]],
      ["filterList", "CustomRecordCustomFieldFilterList", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["subAccessList", "CustomFieldSubAccessList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemNumberCustomField,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "itemNumberCustomField"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["label", "SOAP::SOAPString", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["fieldType", "CustomizationFieldType", [0, 1]],
      ["selectRecordType", "RecordRef", [0, 1]],
      ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
      ["showInList", "SOAP::SOAPBoolean", [0, 1]],
      ["insertBefore", "RecordRef", [0, 1]],
      ["displayType", "CustomizationDisplayType", [0, 1]],
      ["displayWidth", "SOAP::SOAPLong", [0, 1]],
      ["displayHeight", "SOAP::SOAPLong", [0, 1]],
      ["help", "SOAP::SOAPString", [0, 1]],
      ["linkText", "SOAP::SOAPString", [0, 1]],
      ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
      ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
      ["maxLength", "SOAP::SOAPLong", [0, 1]],
      ["minValue", "SOAP::SOAPDouble", [0, 1]],
      ["maxValue", "SOAP::SOAPDouble", [0, 1]],
      ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultValue", "SOAP::SOAPString", [0, 1]],
      ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
      ["defaultSelection", "RecordRef", [0, 1]],
      ["dynamicDefault", "CustomizationDynamicDefault", [0, 1]],
      ["sourceList", "RecordRef", [0, 1]],
      ["sourceFrom", "RecordRef", [0, 1]],
      ["sourceFilterBy", "RecordRef", [0, 1]],
      ["accessLevel", "CustomizationAccessLevel", [0, 1]],
      ["searchLevel", "CustomizationSearchLevel", [0, 1]],
      ["filterList", "ItemNumberCustomFieldFilterList", [0, 1]],
      ["roleAccessList", "CustomFieldRoleAccessList", [0, 1]],
      ["deptAccessList", "CustomFieldDepartmentAccessList", [0, 1]],
      ["appliesToAllItems", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToSerialized", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToLots", "SOAP::SOAPBoolean", [0, 1]],
      ["appliesToGiftCerts", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "RecordRefList", [0, 1]],
      ["translationsList", "CustomFieldTranslationsList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CustomListSearch,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "customListSearch"),
    :schema_element => [
      ["basic", "CustomListSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AppDefinition,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "appDefinition"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["packagesList", "AppDefinitionPackagesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AppDefinitionSearch,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "appDefinitionSearch"),
    :schema_element => [
      ["basic", "AppDefinitionSearchBasic", [0, 1]],
      ["appPackageJoin", "AppPackageSearchBasic", [0, 1]],
      ["creatorJoin", "EmployeeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AppPackage,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "appPackage"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["appDefinition", "RecordRef", [0, 1]],
      ["version", "SOAP::SOAPString", [0, 1]],
      ["packageFile", "RecordRef", [0, 1]],
      ["bundle", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => AppPackageSearch,
    :schema_name => XSD::QName.new(NsCustomization_2012_1SetupWebservicesNetsuiteCom, "appPackageSearch"),
    :schema_element => [
      ["basic", "AppPackageSearchBasic", [0, 1]],
      ["appDefinitionJoin", "AppDefinitionSearchBasic", [0, 1]],
      ["creatorJoin", "EmployeeSearchBasic", [0, 1]],
      ["packageFileJoin", "FileSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Employee,
    :schema_name => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "Employee"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["template", "RecordRef", [0, 1]],
      ["entityId", "SOAP::SOAPString", [0, 1]],
      ["salutation", "SOAP::SOAPString", [0, 1]],
      ["firstName", "SOAP::SOAPString", [0, 1]],
      ["middleName", "SOAP::SOAPString", [0, 1]],
      ["lastName", "SOAP::SOAPString", [0, 1]],
      ["altName", "SOAP::SOAPString", [0, 1]],
      ["phone", "SOAP::SOAPString", [0, 1]],
      ["fax", "SOAP::SOAPString", [0, 1]],
      ["email", "SOAP::SOAPString", [0, 1]],
      ["defaultAddress", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["phoneticName", "SOAP::SOAPString", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
      ["initials", "SOAP::SOAPString", [0, 1]],
      ["officePhone", "SOAP::SOAPString", [0, 1]],
      ["homePhone", "SOAP::SOAPString", [0, 1]],
      ["mobilePhone", "SOAP::SOAPString", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["billingClass", "RecordRef", [0, 1]],
      ["accountNumber", "SOAP::SOAPString", [0, 1]],
      ["comments", "SOAP::SOAPString", [0, 1]],
      ["globalSubscriptionStatus", "GlobalSubscriptionStatus", [0, 1]],
      ["image", "RecordRef", [0, 1]],
      ["payFrequency", "EmployeePayFrequency", [0, 1]],
      ["lastPaidDate", "SOAP::SOAPDateTime", [0, 1]],
      ["currency", "RecordRef", [0, 1]],
      ["useTimeData", "EmployeeUseTimeData", [0, 1]],
      ["usePerquest", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "RecordRef", [0, 1]],
      ["adpId", "SOAP::SOAPString", [0, 1]],
      ["directDeposit", "SOAP::SOAPBoolean", [0, 1]],
      ["expenseLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderLimit", "SOAP::SOAPDouble", [0, 1]],
      ["purchaseOrderApprovalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["socialSecurityNumber", "SOAP::SOAPString", [0, 1]],
      ["supervisor", "RecordRef", [0, 1]],
      ["approver", "RecordRef", [0, 1]],
      ["approvalLimit", "SOAP::SOAPDouble", [0, 1]],
      ["timeApprover", "RecordRef", [0, 1]],
      ["employeeType", "RecordRef", [0, 1]],
      ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
      ["salesRole", "RecordRef", [0, 1]],
      ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
      ["isJobResource", "SOAP::SOAPBoolean", [0, 1]],
      ["laborCost", "SOAP::SOAPDouble", [0, 1]],
      ["birthDate", "SOAP::SOAPDateTime", [0, 1]],
      ["hireDate", "SOAP::SOAPDateTime", [0, 1]],
      ["releaseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["nextReviewDate", "SOAP::SOAPDateTime", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["employeeStatus", "RecordRef", [0, 1]],
      ["jobDescription", "SOAP::SOAPString", [0, 1]],
      ["maritalStatus", "RecordRef", [0, 1]],
      ["ethnicity", "RecordRef", [0, 1]],
      ["gender", "Gender", [0, 1]],
      ["purchaseOrderApprover", "RecordRef", [0, 1]],
      ["workCalendar", "RecordRef", [0, 1]],
      ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["concurrentWebServicesUser", "SOAP::SOAPBoolean", [0, 1]],
      ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
      ["hasOfflineAccess", "SOAP::SOAPBoolean", [0, 1]],
      ["password", "SOAP::SOAPString", [0, 1]],
      ["password2", "SOAP::SOAPString", [0, 1]],
      ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
      ["inheritIPRules", "SOAP::SOAPBoolean", [0, 1]],
      ["iPAddressRule", ["SOAP::SOAPString", XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "IPAddressRule")], [0, 1]],
      ["commissionPaymentPreference", "EmployeeCommissionPaymentPreference", [0, 1]],
      ["billPay", "SOAP::SOAPBoolean", [0, 1]],
      ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
      ["subscriptionsList", "EmployeeSubscriptionsList", [0, 1]],
      ["addressbookList", "EmployeeAddressbookList", [0, 1]],
      ["rolesList", "EmployeeRolesList", [0, 1]],
      ["hrEducationList", "EmployeeHrEducationList", [0, 1]],
      ["accruedTimeList", "EmployeeAccruedTimeList", [0, 1]],
      ["directDepositList", "EmployeeDirectDepositList", [0, 1]],
      ["companyContributionList", "EmployeeCompanyContributionList", [0, 1]],
      ["earningList", "EmployeeEarningList", [0, 1]],
      ["emergencyContactList", "EmployeeEmergencyContactList", [0, 1]],
      ["deductionList", "EmployeeDeductionList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => EmployeeSearch,
    :schema_name => XSD::QName.new(NsEmployees_2012_1ListsWebservicesNetsuiteCom, "employeeSearch"),
    :schema_element => [
      ["basic", "EmployeeSearchBasic", [0, 1]],
      ["campaignResponseJoin", "CampaignSearchBasic", [0, 1]],
      ["departmentJoin", "DepartmentSearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["locationJoin", "LocationSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["messagesFromJoin", "MessageSearchBasic", [0, 1]],
      ["messagesToJoin", "MessageSearchBasic", [0, 1]],
      ["subsidiaryJoin", "SubsidiarySearchBasic", [0, 1]],
      ["timeJoin", "TimeBillSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => SiteCategory,
    :schema_name => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "SiteCategory"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["website", "RecordRef", [0, 1]],
      ["itemId", "SOAP::SOAPString", [0, 1]],
      ["parentCategory", "RecordRef", [0, 1]],
      ["categoryListLayout", "RecordRef", [0, 1]],
      ["itemListLayout", "RecordRef", [0, 1]],
      ["relatedItemsListLayout", "RecordRef", [0, 1]],
      ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
      ["storeDisplayThumbnail", "RecordRef", [0, 1]],
      ["storeDisplayImage", "RecordRef", [0, 1]],
      ["pageTitle", "SOAP::SOAPString", [0, 1]],
      ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
      ["excludeFromSitemap", "SOAP::SOAPBoolean", [0, 1]],
      ["urlComponent", "SOAP::SOAPString", [0, 1]],
      ["sitemapPriority", "SitemapPriority", [0, 1]],
      ["searchKeywords", "SOAP::SOAPString", [0, 1]],
      ["presentationItemList", "SiteCategoryPresentationItemList", [0, 1]],
      ["translationsList", "SiteCategoryTranslationList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => SiteCategorySearch,
    :schema_name => XSD::QName.new(NsWebsite_2012_1ListsWebservicesNetsuiteCom, "siteCategorySearch"),
    :schema_element => [
      ["basic", "SiteCategorySearchBasic", [0, 1]],
      ["shopperJoin", "CustomerSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => TimeBill,
    :schema_name => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "TimeBill"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["employee", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["customer", "RecordRef", [0, 1]],
      ["caseTaskEvent", "RecordRef", [0, 1]],
      ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
      ["payrollItem", "RecordRef", [0, 1]],
      ["paidExternally", "SOAP::SOAPBoolean", [0, 1]],
      ["workplace", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["hours", "Duration", [0, 1]],
      ["price", "RecordRef", [0, 1]],
      ["timeType", "TimeBillTimeType", [0, 1]],
      ["rate", "SOAP::SOAPDouble", [0, 1]],
      ["overrideRate", "SOAP::SOAPBoolean", [0, 1]],
      ["temporaryLocalJurisdiction", "RecordRef", [0, 1]],
      ["temporaryStateJurisdiction", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => TimeBillSearch,
    :schema_name => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "timeBillSearch"),
    :schema_element => [
      ["basic", "TimeBillSearchBasic", [0, 1]],
      ["callJoin", "PhoneCallSearchBasic", [0, 1]],
      ["caseJoin", "SupportCaseSearchBasic", [0, 1]],
      ["customerJoin", "CustomerSearchBasic", [0, 1]],
      ["employeeJoin", "EmployeeSearchBasic", [0, 1]],
      ["eventJoin", "CalendarEventSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["jobJoin", "JobSearchBasic", [0, 1]],
      ["projectTaskJoin", "ProjectTaskSearchBasic", [0, 1]],
      ["taskJoin", "TaskSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ExpenseReport,
    :schema_name => XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "expenseReport"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
      ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
      ["status", "SOAP::SOAPString", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["account", "RecordRef", [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["tranId", "SOAP::SOAPString", [0, 1]],
      ["postingPeriod", "RecordRef", [0, 1]],
      ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
      ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
      ["total", "SOAP::SOAPDouble", [0, 1]],
      ["advance", "SOAP::SOAPDouble", [0, 1]],
      ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
      ["amount", "SOAP::SOAPDouble", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["complete", "SOAP::SOAPBoolean", [0, 1]],
      ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["accountingApproval", "SOAP::SOAPBoolean", [0, 1]],
      ["useMultiCurrency", "SOAP::SOAPBoolean", [0, 1]],
      ["tax2Amt", "SOAP::SOAPDouble", [0, 1]],
      ["department", "RecordRef", [0, 1]],
      ["v_class", ["RecordRef", XSD::QName.new(NsEmployees_2012_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["expenseList", "ExpenseReportExpenseList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => Campaign,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "Campaign"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["campaignId", "SOAP::SOAPString", [0, 1]],
      ["title", "SOAP::SOAPString", [0, 1]],
      ["category", "RecordRef", [0, 1]],
      ["owner", "RecordRef", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["url", "SOAP::SOAPString", [0, 1]],
      ["baseCost", "SOAP::SOAPDouble", [0, 1]],
      ["cost", "SOAP::SOAPDouble", [0, 1]],
      ["expectedRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["message", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["local", "SOAP::SOAPBoolean", [0, 1]],
      ["totalRevenue", "SOAP::SOAPDouble", [0, 1]],
      ["roi", "SOAP::SOAPDouble", [0, 1]],
      ["profit", "SOAP::SOAPDouble", [0, 1]],
      ["costPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["convCostPerCustomer", "SOAP::SOAPDouble", [0, 1]],
      ["conversions", "SOAP::SOAPLong", [0, 1]],
      ["leadsGenerated", "SOAP::SOAPLong", [0, 1]],
      ["uniqueVisitors", "SOAP::SOAPLong", [0, 1]],
      ["vertical", "RecordRef", [0, 1]],
      ["audience", "RecordRef", [0, 1]],
      ["offer", "RecordRef", [0, 1]],
      ["promotionCode", "RecordRef", [0, 1]],
      ["itemList", "RecordRefList", [0, 1]],
      ["family", "RecordRef", [0, 1]],
      ["searchEngine", "RecordRef", [0, 1]],
      ["keyword", "SOAP::SOAPString", [0, 1]],
      ["campaignEmailList", "CampaignEmailList", [0, 1]],
      ["campaignDirectMailList", "CampaignDirectMailList", [0, 1]],
      ["campaignEventList", "CampaignEventList", [0, 1]],
      ["eventResponseList", "CampaignEventResponseList", [0, 1]],
      ["customFieldList", "CustomFieldList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignSearch,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "campaignSearch"),
    :schema_element => [
      ["basic", "CampaignSearchBasic", [0, 1]],
      ["campaignRecipientJoin", "EntitySearchBasic", [0, 1]],
      ["fileJoin", "FileSearchBasic", [0, 1]],
      ["messagesJoin", "MessageSearchBasic", [0, 1]],
      ["originatingLeadJoin", "OriginatingLeadSearchBasic", [0, 1]],
      ["promotionCodeJoin", "PromotionCodeSearchBasic", [0, 1]],
      ["transactionJoin", "TransactionSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]],
      ["userNotesJoin", "NoteSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => CampaignCategory,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignCategory"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["parent", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isexternal", "SOAP::SOAPBoolean", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignAudience,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignAudience"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignFamily,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignFamily"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignSearchEngine,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSearchEngine"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignChannel,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignChannel"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["eventType", "CampaignChannelEventType", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignOffer,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignOffer"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignResponse,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignResponse"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["entity", "RecordRef", [0, 1]],
      ["leadSource", "RecordRef", [0, 1]],
      ["campaignEvent", "RecordRef", [0, 1]],
      ["campaignResponseDate", "SOAP::SOAPDateTime", [0, 1]],
      ["channel", "SOAP::SOAPString", [0, 1]],
      ["response", "CampaignResponseResponse", [0, 1]],
      ["note", "SOAP::SOAPString", [0, 1]],
      ["responsesList", "CampaignResponseResponsesList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignVertical,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignVertical"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => CampaignSubscription,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "CampaignSubscription"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["name", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["subscribedByDefault", "SOAP::SOAPBoolean", [0, 1]],
      ["unsubscribed", "SOAP::SOAPBoolean", [0, 1]],
      ["externalName", "SOAP::SOAPString", [0, 1]],
      ["externalDescription", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PromotionCode,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "promotionCode"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["implementation", "RecordRef", [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["displayLineDiscounts", "SOAP::SOAPBoolean", [0, 1]],
      ["code", "SOAP::SOAPString", [0, 1]],
      ["description", "SOAP::SOAPString", [0, 1]],
      ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
      ["discount", "RecordRef", [0, 1]],
      ["rate", "SOAP::SOAPString", [0, 1]],
      ["discountType", "SOAP::SOAPBoolean", [0, 1]],
      ["applyDiscountTo", "PromotionCodeApplyDiscountTo", [0, 1]],
      ["freeShipMethod", "RecordRef", [0, 1]],
      ["minimumOrderAmount", "SOAP::SOAPDouble", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["isPublic", "SOAP::SOAPBoolean", [0, 1]],
      ["currencyList", "PromotionCodeCurrencyList", [0, 1]],
      ["excludeItems", "SOAP::SOAPBoolean", [0, 1]],
      ["itemsList", "PromotionCodeItemsList", [0, 1]],
      ["partnersList", "PromotionCodePartnersList", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => PromotionCodeSearch,
    :schema_name => XSD::QName.new(NsMarketing_2012_1ListsWebservicesNetsuiteCom, "promotionCodeSearch"),
    :schema_element => [
      ["basic", "PromotionCodeSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ItemDemandPlan,
    :schema_name => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "itemDemandPlan"),
    :schema_element => [
      ["nullFieldList", ["NullField", XSD::QName.new(NsCore_2012_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
      ["customForm", "RecordRef", [0, 1]],
      ["subsidiary", "RecordRef", [0, 1]],
      ["location", "RecordRef", [0, 1]],
      ["item", "RecordRef", [0, 1]],
      ["units", "RecordRef", [0, 1]],
      ["memo", "SOAP::SOAPString", [0, 1]],
      ["year", "SOAP::SOAPLong", [0, 1]],
      ["month", "DemandPlanMonth", [0, 1]],
      ["startDate", "SOAP::SOAPDateTime", [0, 1]],
      ["endDate", "SOAP::SOAPDateTime", [0, 1]],
      ["demandPlanCalendarType", "DemandPlanCalendarType", [0, 1]],
      ["demandPlanMatrix", "DemandPlanMatrix", [0, 1]]
    ],
    :schema_attribute => {
      XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
      XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
    }
  )

  LiteralRegistry.register(
    :class => ItemDemandPlanSearch,
    :schema_name => XSD::QName.new(NsDemandplanning_2012_1TransactionsWebservicesNetsuiteCom, "itemDemandPlanSearch"),
    :schema_element => [
      ["basic", "ItemDemandPlanSearchBasic", [0, 1]],
      ["itemJoin", "ItemSearchBasic", [0, 1]],
      ["lastAlternateSourceItemJoin", "ItemSearchBasic", [0, 1]],
      ["locationJoin", "LocationSearchBasic", [0, 1]],
      ["userJoin", "EmployeeSearchBasic", [0, 1]]
    ]
  )
end
